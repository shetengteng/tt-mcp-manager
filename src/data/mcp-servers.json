[
  {
    "id": "ai.aliengiraffe-spotdb",
    "name": "ai.aliengiraffe/spotdb",
    "description": "Ephemeral data sandbox for AI workflows with guardrails and security",
    "category": "ai",
    "version": "0.1.0",
    "author": "ai.aliengiraffe",
    "repository": "https://github.com/aliengiraffe/spotdb",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/aliengiraffe/spotdb:0.1.0",
    "documentationUrl": "https://github.com/aliengiraffe/spotdb#readme",
    "homepage": "https://github.com/aliengiraffe/spotdb",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.aliengiraffe/spotdb",
      "description": "Ephemeral data sandbox for AI workflows with guardrails and security",
      "repository": {
        "url": "https://github.com/aliengiraffe/spotdb",
        "source": "github"
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/aliengiraffe/spotdb:0.1.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Optional API key for request authentication",
              "format": "string",
              "isSecret": true,
              "name": "X-API-Key"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.alpic.test-test-mcp-server",
    "name": "ai.alpic.test/test-mcp-server",
    "description": "Alpic Test MCP Server - great server!",
    "category": "ai",
    "version": "0.0.1",
    "author": "ai.alpic.test",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://test.alpic.ai/",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.alpic.test/test-mcp-server",
      "description": "Alpic Test MCP Server - great server!",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://test.alpic.ai/"
        }
      ]
    }
  },
  {
    "id": "ai.explorium-mcp-explorium",
    "name": "ai.explorium/mcp-explorium",
    "description": "Access live company and contact data from Explorium's AgentSource B2B platform.",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.explorium",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp-github-registry.explorium.ai/sse",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.explorium/mcp-explorium",
      "description": "Access live company and contact data from Explorium's AgentSource B2B platform.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp-github-registry.explorium.ai/sse"
        }
      ]
    }
  },
  {
    "id": "ai.gomarble-mcp-api",
    "name": "ai.gomarble/mcp-api",
    "description": "GoMarble MCP API Server",
    "category": "web",
    "version": "1.0.0",
    "author": "ai.gomarble",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://apps.gomarble.ai/mcp-api/sse",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.gomarble/mcp-api",
      "description": "GoMarble MCP API Server",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://apps.gomarble.ai/mcp-api/sse"
        }
      ]
    }
  },
  {
    "id": "ai.klavis-strata",
    "name": "ai.klavis/strata",
    "description": "MCP server for progressive tool usage at any scale (see https://klavis.ai)",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.klavis",
    "repository": "https://github.com/Klavis-AI/klavis",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://strata.klavis.ai/mcp/",
    "documentationUrl": "https://github.com/Klavis-AI/klavis#readme",
    "homepage": "https://github.com/Klavis-AI/klavis",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.klavis/strata",
      "description": "MCP server for progressive tool usage at any scale (see https://klavis.ai)",
      "repository": {
        "url": "https://github.com/Klavis-AI/klavis",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://strata.klavis.ai/mcp/"
        }
      ]
    }
  },
  {
    "id": "ai.mcpanalytics-analytics",
    "name": "ai.mcpanalytics/analytics",
    "description": "MCP Analytics, searchable tools and reports with interactive HTML visualization",
    "category": "ai",
    "version": "1.0.3",
    "author": "ai.mcpanalytics",
    "repository": "https://github.com/embeddedlayers/mcp-analytics",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://api.mcpanalytics.ai/auth0",
    "documentationUrl": "https://github.com/embeddedlayers/mcp-analytics#readme",
    "homepage": "https://github.com/embeddedlayers/mcp-analytics",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.mcpanalytics/analytics",
      "description": "MCP Analytics, searchable tools and reports with interactive HTML visualization",
      "repository": {
        "url": "https://github.com/embeddedlayers/mcp-analytics",
        "source": "github"
      },
      "version": "1.0.3",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.mcpanalytics.ai/auth0"
        }
      ]
    }
  },
  {
    "id": "ai.mcpcap-mcpcap",
    "name": "ai.mcpcap/mcpcap",
    "description": "An MCP server for analyzing PCAP files.",
    "category": "filesystem",
    "version": "0.6.0",
    "author": "ai.mcpcap",
    "repository": "https://github.com/mcpcap/mcpcap",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcpcap",
    "documentationUrl": "https://github.com/mcpcap/mcpcap#readme",
    "homepage": "https://github.com/mcpcap/mcpcap",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.6.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "ai.meminal-meminal",
    "name": "ai.meminal/meminal",
    "description": "Memory for deep conversational context across any platform",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.meminal",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://meminal.ai/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.meminal/meminal",
      "description": "Memory for deep conversational context across any platform",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://meminal.ai/mcp",
          "headers": [
            {
              "description": "Bearer token for authentication (OAuth or Personal Access Token)",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.shawndurrani-mcp-merchant",
    "name": "ai.shawndurrani/mcp-merchant",
    "description": "Search-only commerce MCP server backed by Stripe (test)",
    "category": "ai",
    "version": "0.1.3",
    "author": "ai.shawndurrani",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-merchant",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.shawndurrani/mcp-merchant",
      "description": "Search-only commerce MCP server backed by Stripe (test)",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-merchant",
          "version": "0.1.3",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Stripe secret key (test mode)",
              "isRequired": true,
              "isSecret": true,
              "name": "STRIPE_SECRET_KEY"
            },
            {
              "description": "Max products to cache",
              "default": "100",
              "name": "PRODUCT_LIMIT"
            },
            {
              "description": "Catalog refresh interval in seconds",
              "default": "600",
              "name": "REFRESH_INTERVAL_SEC"
            }
          ]
        }
      ],
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.shawndurrani.ai/sse"
        }
      ]
    }
  },
  {
    "id": "ai.shawndurrani-mcp-registry",
    "name": "ai.shawndurrani/mcp-registry",
    "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
    "category": "ai",
    "version": "0.1.3",
    "author": "ai.shawndurrani",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp-registry.shawndurrani.ai/sse",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.shawndurrani/mcp-registry",
      "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.3",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp-registry.shawndurrani.ai/sse"
        }
      ]
    }
  },
  {
    "id": "ai.smithery-222wcnm-bilistalkermcp",
    "name": "ai.smithery/222wcnm-bilistalkermcp",
    "description": "Track Bilibili creators and get the latest updates on videos, dynamics, and articles. Fetch user p…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/222wcnm/BiliStalkerMCP",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@222wcnm/bilistalkermcp/mcp",
    "documentationUrl": "https://github.com/222wcnm/BiliStalkerMCP#readme",
    "homepage": "https://github.com/222wcnm/BiliStalkerMCP",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/222wcnm-bilistalkermcp",
      "description": "Track Bilibili creators and get the latest updates on videos, dynamics, and articles. Fetch user p…",
      "repository": {
        "url": "https://github.com/222wcnm/BiliStalkerMCP",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@222wcnm/bilistalkermcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-Aman-Amith-Shastry-scientific_computation_mcp",
    "name": "ai.smithery/Aman-Amith-Shastry-scientific_computation_mcp",
    "description": "This MCP server enables users to perform scientific computations regarding linear algebra and vect…",
    "category": "ai",
    "version": "1.13.1",
    "author": "ai.smithery",
    "repository": "https://github.com/Aman-Amith-Shastry/scientific_computation_mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@Aman-Amith-Shastry/scientific_computation_mcp/mcp",
    "documentationUrl": "https://github.com/Aman-Amith-Shastry/scientific_computation_mcp#readme",
    "homepage": "https://github.com/Aman-Amith-Shastry/scientific_computation_mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/Aman-Amith-Shastry-scientific_computation_mcp",
      "description": "This MCP server enables users to perform scientific computations regarding linear algebra and vect…",
      "repository": {
        "url": "https://github.com/Aman-Amith-Shastry/scientific_computation_mcp",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Aman-Amith-Shastry/scientific_computation_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-Artin0123-gemini-image-mcp-server",
    "name": "ai.smithery/Artin0123-gemini-image-mcp-server",
    "description": "Analyze images and videos with Gemini to get fast, reliable visual insights. Handle content from U…",
    "category": "ai",
    "version": "1.4.3",
    "author": "ai.smithery",
    "repository": "https://github.com/Artin0123/gemini-vision-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@Artin0123/gemini-image-mcp-server/mcp",
    "documentationUrl": "https://github.com/Artin0123/gemini-vision-mcp#readme",
    "homepage": "https://github.com/Artin0123/gemini-vision-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/Artin0123-gemini-image-mcp-server",
      "description": "Analyze images and videos with Gemini to get fast, reliable visual insights. Handle content from U…",
      "repository": {
        "url": "https://github.com/Artin0123/gemini-vision-mcp",
        "source": "github"
      },
      "version": "1.4.3",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Artin0123/gemini-image-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-BadRooBot-my_test_mcp",
    "name": "ai.smithery/BadRooBot-my_test_mcp",
    "description": "Get current weather for any city and create images from your prompts. Streamline planning, reports…",
    "category": "ai",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/BadRooBot/python_mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@BadRooBot/my_test_mcp/mcp",
    "documentationUrl": "https://github.com/BadRooBot/python_mcp#readme",
    "homepage": "https://github.com/BadRooBot/python_mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/BadRooBot-my_test_mcp",
      "description": "Get current weather for any city and create images from your prompts. Streamline planning, reports…",
      "repository": {
        "url": "https://github.com/BadRooBot/python_mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BadRooBot/my_test_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-BadRooBot-test_m",
    "name": "ai.smithery/BadRooBot-test_m",
    "description": "Send quick greetings, scrape website content, and generate text or images on demand. Perform web s…",
    "category": "web",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/BadRooBot/test_m",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@BadRooBot/test_m/mcp",
    "documentationUrl": "https://github.com/BadRooBot/test_m#readme",
    "homepage": "https://github.com/BadRooBot/test_m",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/BadRooBot-test_m",
      "description": "Send quick greetings, scrape website content, and generate text or images on demand. Perform web s…",
      "repository": {
        "url": "https://github.com/BadRooBot/test_m",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BadRooBot/test_m/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-BigVik193-reddit-ads-mcp",
    "name": "ai.smithery/BigVik193-reddit-ads-mcp",
    "description": "Manage Reddit advertising across accounts, campaigns, ad groups, posts, and ads. List accounts, fu…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/BigVik193/reddit-ads-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@BigVik193/reddit-ads-mcp/mcp",
    "documentationUrl": "https://github.com/BigVik193/reddit-ads-mcp#readme",
    "homepage": "https://github.com/BigVik193/reddit-ads-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/BigVik193-reddit-ads-mcp",
      "description": "Manage Reddit advertising across accounts, campaigns, ad groups, posts, and ads. List accounts, fu…",
      "repository": {
        "url": "https://github.com/BigVik193/reddit-ads-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BigVik193/reddit-ads-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-BigVik193-reddit-ads-mcp-api",
    "name": "ai.smithery/BigVik193-reddit-ads-mcp-api",
    "description": "Manage Reddit advertising end to end across accounts, funding methods, campaigns, ad groups, and a…",
    "category": "web",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/BigVik193/reddit-ads-mcp-api",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@BigVik193/reddit-ads-mcp-api/mcp",
    "documentationUrl": "https://github.com/BigVik193/reddit-ads-mcp-api#readme",
    "homepage": "https://github.com/BigVik193/reddit-ads-mcp-api",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/BigVik193-reddit-ads-mcp-api",
      "description": "Manage Reddit advertising end to end across accounts, funding methods, campaigns, ad groups, and a…",
      "repository": {
        "url": "https://github.com/BigVik193/reddit-ads-mcp-api",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BigVik193/reddit-ads-mcp-api/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-BigVik193-reddit-ads-mcp-test",
    "name": "ai.smithery/BigVik193-reddit-ads-mcp-test",
    "description": "Manage Reddit advertising end-to-end: browse ad accounts and payment methods, and organize campaig…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/BigVik193/reddit-ads-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@BigVik193/reddit-ads-mcp-test/mcp",
    "documentationUrl": "https://github.com/BigVik193/reddit-ads-mcp#readme",
    "homepage": "https://github.com/BigVik193/reddit-ads-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/BigVik193-reddit-ads-mcp-test",
      "description": "Manage Reddit advertising end-to-end: browse ad accounts and payment methods, and organize campaig…",
      "repository": {
        "url": "https://github.com/BigVik193/reddit-ads-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BigVik193/reddit-ads-mcp-test/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-BigVik193-reddit-user-mcp",
    "name": "ai.smithery/BigVik193-reddit-user-mcp",
    "description": "Browse and manage Reddit posts, comments, and threads. Fetch user activity, explore hot/new/rising…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/BigVik193/reddit-user-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@BigVik193/reddit-user-mcp/mcp",
    "documentationUrl": "https://github.com/BigVik193/reddit-user-mcp#readme",
    "homepage": "https://github.com/BigVik193/reddit-user-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/BigVik193-reddit-user-mcp",
      "description": "Browse and manage Reddit posts, comments, and threads. Fetch user activity, explore hot/new/rising…",
      "repository": {
        "url": "https://github.com/BigVik193/reddit-user-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BigVik193/reddit-user-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-BowenXU0126-aistudio_hw3",
    "name": "ai.smithery/BowenXU0126-aistudio_hw3",
    "description": "Send personalized greetings with optional pirate flair. Compose friendly salutations for any name…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/BowenXU0126/aistudio_hw3",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@BowenXU0126/aistudio_hw3/mcp",
    "documentationUrl": "https://github.com/BowenXU0126/aistudio_hw3#readme",
    "homepage": "https://github.com/BowenXU0126/aistudio_hw3",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/BowenXU0126-aistudio_hw3",
      "description": "Send personalized greetings with optional pirate flair. Compose friendly salutations for any name…",
      "repository": {
        "url": "https://github.com/BowenXU0126/aistudio_hw3",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BowenXU0126/aistudio_hw3/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-ChiR24-unreal_mcp",
    "name": "ai.smithery/ChiR24-unreal_mcp",
    "description": "Control Unreal Engine to browse assets, import content, and manage levels and sequences. Automate…",
    "category": "ai",
    "version": "0.4.6",
    "author": "ai.smithery",
    "repository": "https://github.com/ChiR24/Unreal_mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@ChiR24/unreal_mcp/mcp",
    "documentationUrl": "https://github.com/ChiR24/Unreal_mcp#readme",
    "homepage": "https://github.com/ChiR24/Unreal_mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/ChiR24-unreal_mcp",
      "description": "Control Unreal Engine to browse assets, import content, and manage levels and sequences. Automate…",
      "repository": {
        "url": "https://github.com/ChiR24/Unreal_mcp",
        "source": "github"
      },
      "version": "0.4.6",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ChiR24/unreal_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-ChiR24-unreal_mcp_server",
    "name": "ai.smithery/ChiR24-unreal_mcp_server",
    "description": "A comprehensive Model Context Protocol (MCP) server that enables AI assistants to control Unreal E…",
    "category": "ai",
    "version": "0.4.4",
    "author": "ai.smithery",
    "repository": "https://github.com/ChiR24/Unreal_mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@ChiR24/unreal_mcp_server/mcp",
    "documentationUrl": "https://github.com/ChiR24/Unreal_mcp#readme",
    "homepage": "https://github.com/ChiR24/Unreal_mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/ChiR24-unreal_mcp_server",
      "description": "A comprehensive Model Context Protocol (MCP) server that enables AI assistants to control Unreal E…",
      "repository": {
        "url": "https://github.com/ChiR24/Unreal_mcp",
        "source": "github"
      },
      "version": "0.4.4",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ChiR24/unreal_mcp_server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-CollectiveSpend-collectivespend-smithery-mcp",
    "name": "ai.smithery/CollectiveSpend-collectivespend-smithery-mcp",
    "description": "Connect CollectiveSpend with Xero to manage contacts. Retrieve, create, and update contact records…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@CollectiveSpend/collectivespend-smithery-mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/CollectiveSpend-collectivespend-smithery-mcp",
      "description": "Connect CollectiveSpend with Xero to manage contacts. Retrieve, create, and update contact records…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@CollectiveSpend/collectivespend-smithery-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-CryptoCultCurt-appfolio-mcp-server",
    "name": "ai.smithery/CryptoCultCurt-appfolio-mcp-server",
    "description": "Provide seamless access to Appfolio Property Manager Reporting API through a standardized MCP serv…",
    "category": "ai",
    "version": "1.0.1",
    "author": "ai.smithery",
    "repository": "https://github.com/CryptoCultCurt/appfolio-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@CryptoCultCurt/appfolio-mcp-server/mcp",
    "documentationUrl": "https://github.com/CryptoCultCurt/appfolio-mcp-server#readme",
    "homepage": "https://github.com/CryptoCultCurt/appfolio-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/CryptoCultCurt-appfolio-mcp-server",
      "description": "Provide seamless access to Appfolio Property Manager Reporting API through a standardized MCP serv…",
      "repository": {
        "url": "https://github.com/CryptoCultCurt/appfolio-mcp-server",
        "source": "github"
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@CryptoCultCurt/appfolio-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-Danushkumar-V-mcp-discord",
    "name": "ai.smithery/Danushkumar-V-mcp-discord",
    "description": "An MCP server that integrates with Discord to provide AI-powered features.",
    "category": "ai",
    "version": "1.2.0",
    "author": "ai.smithery",
    "repository": "https://github.com/Danushkumar-V/mcp-discord",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@Danushkumar-V/mcp-discord/mcp",
    "documentationUrl": "https://github.com/Danushkumar-V/mcp-discord#readme",
    "homepage": "https://github.com/Danushkumar-V/mcp-discord",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/Danushkumar-V-mcp-discord",
      "description": "An MCP server that integrates with Discord to provide AI-powered features.",
      "repository": {
        "url": "https://github.com/Danushkumar-V/mcp-discord",
        "source": "github"
      },
      "version": "1.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Danushkumar-V/mcp-discord/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-DynamicEndpoints-autogen_mcp",
    "name": "ai.smithery/DynamicEndpoints-autogen_mcp",
    "description": "Create and manage AI agents that collaborate and solve problems through natural language interacti…",
    "category": "ai",
    "version": "0.3.0",
    "author": "ai.smithery",
    "repository": "https://github.com/DynamicEndpoints/Autogen_MCP",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@DynamicEndpoints/autogen_mcp/mcp",
    "documentationUrl": "https://github.com/DynamicEndpoints/Autogen_MCP#readme",
    "homepage": "https://github.com/DynamicEndpoints/Autogen_MCP",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/DynamicEndpoints-autogen_mcp",
      "description": "Create and manage AI agents that collaborate and solve problems through natural language interacti…",
      "repository": {
        "url": "https://github.com/DynamicEndpoints/Autogen_MCP",
        "source": "github"
      },
      "version": "0.3.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@DynamicEndpoints/autogen_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-DynamicEndpoints-m365-core-mcp",
    "name": "ai.smithery/DynamicEndpoints-m365-core-mcp",
    "description": "*Updated June 17th 2025** Manage your Microsoft 365 services effortlessly. Create and manage distr…",
    "category": "ai",
    "version": "1.1.0",
    "author": "ai.smithery",
    "repository": "https://github.com/DynamicEndpoints/m365-core-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@DynamicEndpoints/m365-core-mcp/mcp",
    "documentationUrl": "https://github.com/DynamicEndpoints/m365-core-mcp#readme",
    "homepage": "https://github.com/DynamicEndpoints/m365-core-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/DynamicEndpoints-m365-core-mcp",
      "description": "*Updated June 17th 2025** Manage your Microsoft 365 services effortlessly. Create and manage distr…",
      "repository": {
        "url": "https://github.com/DynamicEndpoints/m365-core-mcp",
        "source": "github"
      },
      "version": "1.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@DynamicEndpoints/m365-core-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-DynamicEndpoints-powershell-exec-mcp-server",
    "name": "ai.smithery/DynamicEndpoints-powershell-exec-mcp-server",
    "description": "Execute PowerShell commands securely with controlled timeouts and input validation. Retrieve syste…",
    "category": "ai",
    "version": "1.13.1",
    "author": "ai.smithery",
    "repository": "https://github.com/DynamicEndpoints/PowerShell-Exec-MCP-Server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@DynamicEndpoints/powershell-exec-mcp-server/mcp",
    "documentationUrl": "https://github.com/DynamicEndpoints/PowerShell-Exec-MCP-Server#readme",
    "homepage": "https://github.com/DynamicEndpoints/PowerShell-Exec-MCP-Server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/DynamicEndpoints-powershell-exec-mcp-server",
      "description": "Execute PowerShell commands securely with controlled timeouts and input validation. Retrieve syste…",
      "repository": {
        "url": "https://github.com/DynamicEndpoints/PowerShell-Exec-MCP-Server",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@DynamicEndpoints/powershell-exec-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-FelixYifeiWang-felix-mcp-smithery",
    "name": "ai.smithery/FelixYifeiWang-felix-mcp-smithery",
    "description": "Streamline your workflow with Felix. Integrate it into your workspace and tailor its behavior to y…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/FelixYifeiWang/felix-mcp-smithery",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@FelixYifeiWang/felix-mcp-smithery/mcp",
    "documentationUrl": "https://github.com/FelixYifeiWang/felix-mcp-smithery#readme",
    "homepage": "https://github.com/FelixYifeiWang/felix-mcp-smithery",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/FelixYifeiWang-felix-mcp-smithery",
      "description": "Streamline your workflow with Felix. Integrate it into your workspace and tailor its behavior to y…",
      "repository": {
        "url": "https://github.com/FelixYifeiWang/felix-mcp-smithery",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@FelixYifeiWang/felix-mcp-smithery/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-Funding-Machine-ghl-mcp-fundingmachine",
    "name": "ai.smithery/Funding-Machine-ghl-mcp-fundingmachine",
    "description": "Automate GoHighLevel across CRM, messaging, calendars, marketing, e-commerce, and billing. Manage…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@Funding-Machine/ghl-mcp-fundingmachine/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/Funding-Machine-ghl-mcp-fundingmachine",
      "description": "Automate GoHighLevel across CRM, messaging, calendars, marketing, e-commerce, and billing. Manage…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Funding-Machine/ghl-mcp-fundingmachine/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-HARJAP-SINGH-3105-splitwise_mcp",
    "name": "ai.smithery/HARJAP-SINGH-3105-splitwise_mcp",
    "description": "Manage Splitwise balances, expenses, and groups from your workspace. Fetch friends and recent acti…",
    "category": "ai",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/HARJAP-SINGH-3105/Splitwise_MCP",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@HARJAP-SINGH-3105/splitwise_mcp/mcp",
    "documentationUrl": "https://github.com/HARJAP-SINGH-3105/Splitwise_MCP#readme",
    "homepage": "https://github.com/HARJAP-SINGH-3105/Splitwise_MCP",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/HARJAP-SINGH-3105-splitwise_mcp",
      "description": "Manage Splitwise balances, expenses, and groups from your workspace. Fetch friends and recent acti…",
      "repository": {
        "url": "https://github.com/HARJAP-SINGH-3105/Splitwise_MCP",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@HARJAP-SINGH-3105/splitwise_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-Hint-Services-obsidian-github-mcp",
    "name": "ai.smithery/Hint-Services-obsidian-github-mcp",
    "description": "Connect AI assistants to your GitHub-hosted Obsidian vault to seamlessly access, search, and analy…",
    "category": "version-control",
    "version": "0.4.0",
    "author": "ai.smithery",
    "repository": "https://github.com/Hint-Services/obsidian-github-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@Hint-Services/obsidian-github-mcp/mcp",
    "documentationUrl": "https://github.com/Hint-Services/obsidian-github-mcp#readme",
    "homepage": "https://github.com/Hint-Services/obsidian-github-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/Hint-Services-obsidian-github-mcp",
      "description": "Connect AI assistants to your GitHub-hosted Obsidian vault to seamlessly access, search, and analy…",
      "repository": {
        "url": "https://github.com/Hint-Services/obsidian-github-mcp",
        "source": "github"
      },
      "version": "0.4.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Hint-Services/obsidian-github-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-IlyaGusev-academia_mcp",
    "name": "ai.smithery/IlyaGusev-academia_mcp",
    "description": "Search arXiv and ACL Anthology, retrieve citations and references, and browse web sources to accel…",
    "category": "web",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/IlyaGusev/academia_mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@IlyaGusev/academia_mcp/mcp",
    "documentationUrl": "https://github.com/IlyaGusev/academia_mcp#readme",
    "homepage": "https://github.com/IlyaGusev/academia_mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/IlyaGusev-academia_mcp",
      "description": "Search arXiv and ACL Anthology, retrieve citations and references, and browse web sources to accel…",
      "repository": {
        "url": "https://github.com/IlyaGusev/academia_mcp",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@IlyaGusev/academia_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-ImRonAI-mcp-server-browserbase",
    "name": "ai.smithery/ImRonAI-mcp-server-browserbase",
    "description": "Automate cloud browsers to navigate websites, interact with elements, and extract structured data.…",
    "category": "web",
    "version": "2.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/ImRonAI/mcp-server-browserbase",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@ImRonAI/mcp-server-browserbase/mcp",
    "documentationUrl": "https://github.com/ImRonAI/mcp-server-browserbase#readme",
    "homepage": "https://github.com/ImRonAI/mcp-server-browserbase",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/ImRonAI-mcp-server-browserbase",
      "description": "Automate cloud browsers to navigate websites, interact with elements, and extract structured data.…",
      "repository": {
        "url": "https://github.com/ImRonAI/mcp-server-browserbase",
        "source": "github"
      },
      "version": "2.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ImRonAI/mcp-server-browserbase/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-IndianAppGuy-magicslide-mcp",
    "name": "ai.smithery/IndianAppGuy-magicslide-mcp",
    "description": "Generate professional PowerPoint presentations from text, YouTube videos, or structured JSON data.…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@IndianAppGuy/magicslide-mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/IndianAppGuy-magicslide-mcp",
      "description": "Generate professional PowerPoint presentations from text, YouTube videos, or structured JSON data.…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@IndianAppGuy/magicslide-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-IndianAppGuy-magicslide-mcp-actual-test",
    "name": "ai.smithery/IndianAppGuy-magicslide-mcp-actual-test",
    "description": "Generate polished PowerPoint presentations from text prompts, YouTube videos, or structured outlin…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@IndianAppGuy/magicslide-mcp-actual-test/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/IndianAppGuy-magicslide-mcp-actual-test",
      "description": "Generate polished PowerPoint presentations from text prompts, YouTube videos, or structured outlin…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@IndianAppGuy/magicslide-mcp-actual-test/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-JMoak-chrono-mcp",
    "name": "ai.smithery/JMoak-chrono-mcp",
    "description": "Convert and compare dates and times across any timezone with flexible, locale-aware formatting. Ad…",
    "category": "ai",
    "version": "0.2.0",
    "author": "ai.smithery",
    "repository": "https://github.com/JMoak/chrono-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@JMoak/chrono-mcp/mcp",
    "documentationUrl": "https://github.com/JMoak/chrono-mcp#readme",
    "homepage": "https://github.com/JMoak/chrono-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/JMoak-chrono-mcp",
      "description": "Convert and compare dates and times across any timezone with flexible, locale-aware formatting. Ad…",
      "repository": {
        "url": "https://github.com/JMoak/chrono-mcp",
        "source": "github"
      },
      "version": "0.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@JMoak/chrono-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-JunoJunHyun-festival-finder-mcp",
    "name": "ai.smithery/JunoJunHyun-festival-finder-mcp",
    "description": "Discover festivals worldwide by location, date, and genre. Compare options with key details like d…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/JunoJunHyun/Festival-Finder-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@JunoJunHyun/festival-finder-mcp/mcp",
    "documentationUrl": "https://github.com/JunoJunHyun/Festival-Finder-mcp#readme",
    "homepage": "https://github.com/JunoJunHyun/Festival-Finder-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/JunoJunHyun-festival-finder-mcp",
      "description": "Discover festivals worldwide by location, date, and genre. Compare options with key details like d…",
      "repository": {
        "url": "https://github.com/JunoJunHyun/Festival-Finder-mcp",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@JunoJunHyun/festival-finder-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-Kim-soung-won-mcp-smithery-exam",
    "name": "ai.smithery/Kim-soung-won-mcp-smithery-exam",
    "description": "Craft quick, personalized greetings by name. Generate ready-to-use greeting prompts for a consiste…",
    "category": "ai",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/Kim-soung-won/mcp-smithery-exam",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@Kim-soung-won/mcp-smithery-exam/mcp",
    "documentationUrl": "https://github.com/Kim-soung-won/mcp-smithery-exam#readme",
    "homepage": "https://github.com/Kim-soung-won/mcp-smithery-exam",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/Kim-soung-won-mcp-smithery-exam",
      "description": "Craft quick, personalized greetings by name. Generate ready-to-use greeting prompts for a consiste…",
      "repository": {
        "url": "https://github.com/Kim-soung-won/mcp-smithery-exam",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Kim-soung-won/mcp-smithery-exam/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-Kryptoskatt-mcp-server",
    "name": "ai.smithery/Kryptoskatt-mcp-server",
    "description": "Enable AI assistants to interact seamlessly with the DefiLlama API by translating MCP tool calls i…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@Kryptoskatt/mcp-server/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/Kryptoskatt-mcp-server",
      "description": "Enable AI assistants to interact seamlessly with the DefiLlama API by translating MCP tool calls i…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Kryptoskatt/mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-Leghis-smart-thinking",
    "name": "ai.smithery/Leghis-smart-thinking",
    "description": "Find relevant Smart‑Thinking memories fast. Fetch full entries by ID to get complete context. Spee…",
    "category": "ai",
    "version": "0.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/Leghis/Smart-Thinking",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@Leghis/smart-thinking/mcp",
    "documentationUrl": "https://github.com/Leghis/Smart-Thinking#readme",
    "homepage": "https://github.com/Leghis/Smart-Thinking",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/Leghis-smart-thinking",
      "description": "Find relevant Smart‑Thinking memories fast. Fetch full entries by ID to get complete context. Spee…",
      "repository": {
        "url": "https://github.com/Leghis/Smart-Thinking",
        "source": "github"
      },
      "version": "0.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Leghis/smart-thinking/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-LinkupPlatform-linkup-mcp-server",
    "name": "ai.smithery/LinkupPlatform-linkup-mcp-server",
    "description": "Search the web in real time to get trustworthy, source-backed answers. Find the latest news and co…",
    "category": "web",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/LinkupPlatform/linkup-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@LinkupPlatform/linkup-mcp-server/mcp",
    "documentationUrl": "https://github.com/LinkupPlatform/linkup-mcp-server#readme",
    "homepage": "https://github.com/LinkupPlatform/linkup-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "ai.smithery/LinkupPlatform-linkup-mcp-server",
      "description": "Search the web in real time to get trustworthy, source-backed answers. Find the latest news and co…",
      "repository": {
        "url": "https://github.com/LinkupPlatform/linkup-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@LinkupPlatform/linkup-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-MetehanGZL-pokemcp",
    "name": "ai.smithery/MetehanGZL-pokemcp",
    "description": "Provide detailed Pokémon data and information through a standardized MCP interface. Enable LLMs an…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/MetehanGZL/PokeMCP",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@MetehanGZL/pokemcp/mcp",
    "documentationUrl": "https://github.com/MetehanGZL/PokeMCP#readme",
    "homepage": "https://github.com/MetehanGZL/PokeMCP",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/MetehanGZL-pokemcp",
      "description": "Provide detailed Pokémon data and information through a standardized MCP interface. Enable LLMs an…",
      "repository": {
        "url": "https://github.com/MetehanGZL/PokeMCP",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@MetehanGZL/pokemcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-MisterSandFR-supabase-mcp-selfhosted",
    "name": "ai.smithery/MisterSandFR-supabase-mcp-selfhosted",
    "description": "Manage Supabase projects end to end across database, auth, storage, realtime, and migrations. Moni…",
    "category": "database",
    "version": "1.14.1",
    "author": "ai.smithery",
    "repository": "https://github.com/MisterSandFR/Supabase-MCP-SelfHosted",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@MisterSandFR/supabase-mcp-selfhosted/mcp",
    "documentationUrl": "https://github.com/MisterSandFR/Supabase-MCP-SelfHosted#readme",
    "homepage": "https://github.com/MisterSandFR/Supabase-MCP-SelfHosted",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/MisterSandFR-supabase-mcp-selfhosted",
      "description": "Manage Supabase projects end to end across database, auth, storage, realtime, and migrations. Moni…",
      "repository": {
        "url": "https://github.com/MisterSandFR/Supabase-MCP-SelfHosted",
        "source": "github"
      },
      "version": "1.14.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@MisterSandFR/supabase-mcp-selfhosted/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-Nekzus-npm-sentinel-mcp",
    "name": "ai.smithery/Nekzus-npm-sentinel-mcp",
    "description": "Provide AI-powered real-time analysis and intelligence on NPM packages, including security, depend…",
    "category": "ai",
    "version": "1.11.8",
    "author": "ai.smithery",
    "repository": "https://github.com/Nekzus/npm-sentinel-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@Nekzus/npm-sentinel-mcp/mcp",
    "documentationUrl": "https://github.com/Nekzus/npm-sentinel-mcp#readme",
    "homepage": "https://github.com/Nekzus/npm-sentinel-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/Nekzus-npm-sentinel-mcp",
      "description": "Provide AI-powered real-time analysis and intelligence on NPM packages, including security, depend…",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.11.8",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Nekzus/npm-sentinel-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-Open-Scout-mcp",
    "name": "ai.smithery/Open-Scout-mcp",
    "description": "Create and publish one-pagers and boards for your organization. Upload images from the web, update…",
    "category": "web",
    "version": "0.1.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@Open-Scout/mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/Open-Scout-mcp",
      "description": "Create and publish one-pagers and boards for your organization. Upload images from the web, update…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Open-Scout/mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-PabloLec-keyprobe-mcp",
    "name": "ai.smithery/PabloLec-keyprobe-mcp",
    "description": "Audit certificates and keystores to surface expiry risks, weak algorithms, and misconfigurations.…",
    "category": "ai",
    "version": "1.13.1",
    "author": "ai.smithery",
    "repository": "https://github.com/PabloLec/KeyProbe-MCP",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@PabloLec/keyprobe-mcp/mcp",
    "documentationUrl": "https://github.com/PabloLec/KeyProbe-MCP#readme",
    "homepage": "https://github.com/PabloLec/KeyProbe-MCP",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/PabloLec-keyprobe-mcp",
      "description": "Audit certificates and keystores to surface expiry risks, weak algorithms, and misconfigurations.…",
      "repository": {
        "url": "https://github.com/PabloLec/KeyProbe-MCP",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@PabloLec/keyprobe-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-Parc-Dev-task-breakdown-server",
    "name": "ai.smithery/Parc-Dev-task-breakdown-server",
    "description": "Break down complex problems into clear, actionable steps. Adapt on the fly by iterating, revising,…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@Parc-Dev/task-breakdown-server/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/Parc-Dev-task-breakdown-server",
      "description": "Break down complex problems into clear, actionable steps. Adapt on the fly by iterating, revising,…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Parc-Dev/task-breakdown-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-Phionx-mcp-hello-server",
    "name": "ai.smithery/Phionx-mcp-hello-server",
    "description": "Send personalized greetings to anyone. Enable Pirate Mode for swashbuckling salutations. Explore t…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/Phionx/mcp-hello-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@Phionx/mcp-hello-server/mcp",
    "documentationUrl": "https://github.com/Phionx/mcp-hello-server#readme",
    "homepage": "https://github.com/Phionx/mcp-hello-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/Phionx-mcp-hello-server",
      "description": "Send personalized greetings to anyone. Enable Pirate Mode for swashbuckling salutations. Explore t…",
      "repository": {
        "url": "https://github.com/Phionx/mcp-hello-server",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Phionx/mcp-hello-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-PixdataOrg-coderide",
    "name": "ai.smithery/PixdataOrg-coderide",
    "description": "CodeRide eliminates the context reset cycle once and for all. Through MCP integration, it seamless…",
    "category": "ai",
    "version": "0.9.1",
    "author": "ai.smithery",
    "repository": "https://github.com/PixdataOrg/coderide-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@PixdataOrg/coderide/mcp",
    "documentationUrl": "https://github.com/PixdataOrg/coderide-mcp#readme",
    "homepage": "https://github.com/PixdataOrg/coderide-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/PixdataOrg-coderide",
      "description": "CodeRide eliminates the context reset cycle once and for all. Through MCP integration, it seamless…",
      "repository": {
        "url": "https://github.com/PixdataOrg/coderide-mcp",
        "source": "github"
      },
      "version": "0.9.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@PixdataOrg/coderide/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-Pratiksha-Kanoja-magicslide-mcp-test",
    "name": "ai.smithery/Pratiksha-Kanoja-magicslide-mcp-test",
    "description": "Create polished slide decks from text or YouTube links in seconds. Fetch video transcripts to tran…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/Pratiksha-Kanoja/magicslide-mcp-test",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@Pratiksha-Kanoja/magicslide-mcp-test/mcp",
    "documentationUrl": "https://github.com/Pratiksha-Kanoja/magicslide-mcp-test#readme",
    "homepage": "https://github.com/Pratiksha-Kanoja/magicslide-mcp-test",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/Pratiksha-Kanoja-magicslide-mcp-test",
      "description": "Create polished slide decks from text or YouTube links in seconds. Fetch video transcripts to tran…",
      "repository": {
        "url": "https://github.com/Pratiksha-Kanoja/magicslide-mcp-test",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Pratiksha-Kanoja/magicslide-mcp-test/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-ProfessionalWiki-mediawiki-mcp-server",
    "name": "ai.smithery/ProfessionalWiki-mediawiki-mcp-server",
    "description": "Enable Large Language Model clients to interact seamlessly with any MediaWiki wiki. Perform action…",
    "category": "ai",
    "version": "0.1.1",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@ProfessionalWiki/mediawiki-mcp-server/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/ProfessionalWiki-mediawiki-mcp-server",
      "description": "Enable Large Language Model clients to interact seamlessly with any MediaWiki wiki. Perform action…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ProfessionalWiki/mediawiki-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-RectiFlex-centerassist-mcp",
    "name": "ai.smithery/RectiFlex-centerassist-mcp",
    "description": "Streamline field service and construction operations with CenterPoint Connect. Manage companies, o…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@RectiFlex/centerassist-mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/RectiFlex-centerassist-mcp",
      "description": "Streamline field service and construction operations with CenterPoint Connect. Manage companies, o…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@RectiFlex/centerassist-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-RectiFlex-centerassist-mcp-cp",
    "name": "ai.smithery/RectiFlex-centerassist-mcp-cp",
    "description": "Streamline property management, construction, and service workflows with CenterPoint Connect. Sear…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@RectiFlex/centerassist-mcp-cp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/RectiFlex-centerassist-mcp-cp",
      "description": "Streamline property management, construction, and service workflows with CenterPoint Connect. Sear…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@RectiFlex/centerassist-mcp-cp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-RectiFlex-centerassist-mcp-cp1",
    "name": "ai.smithery/RectiFlex-centerassist-mcp-cp1",
    "description": "Access and manage CenterPoint Connect data for property management, construction, and service oper…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@RectiFlex/centerassist-mcp-cp1/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/RectiFlex-centerassist-mcp-cp1",
      "description": "Access and manage CenterPoint Connect data for property management, construction, and service oper…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@RectiFlex/centerassist-mcp-cp1/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-RectiFlex-centerassist-mcp1",
    "name": "ai.smithery/RectiFlex-centerassist-mcp1",
    "description": "Manage CenterPoint Connect data across properties, companies, employees, invoices, materials, and…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@RectiFlex/centerassist-mcp1/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/RectiFlex-centerassist-mcp1",
      "description": "Manage CenterPoint Connect data across properties, companies, employees, invoices, materials, and…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@RectiFlex/centerassist-mcp1/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-STUzhy-py_execute_mcp",
    "name": "ai.smithery/STUzhy-py_execute_mcp",
    "description": "Run Python code in a secure sandbox without local setup. Declare inline dependencies and execute s…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@STUzhy/py_execute_mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/STUzhy-py_execute_mcp",
      "description": "Run Python code in a secure sandbox without local setup. Declare inline dependencies and execute s…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@STUzhy/py_execute_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-ScrapeGraphAI-scrapegraph-mcp",
    "name": "ai.smithery/ScrapeGraphAI-scrapegraph-mcp",
    "description": "Enable language models to perform advanced AI-powered web scraping with enterprise-grade reliabili…",
    "category": "web",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/ScrapeGraphAI/scrapegraph-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@ScrapeGraphAI/scrapegraph-mcp/mcp",
    "documentationUrl": "https://github.com/ScrapeGraphAI/scrapegraph-mcp#readme",
    "homepage": "https://github.com/ScrapeGraphAI/scrapegraph-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "ai.smithery/ScrapeGraphAI-scrapegraph-mcp",
      "description": "Enable language models to perform advanced AI-powered web scraping with enterprise-grade reliabili…",
      "repository": {
        "url": "https://github.com/ScrapeGraphAI/scrapegraph-mcp",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ScrapeGraphAI/scrapegraph-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-TakoData-tako-mcp",
    "name": "ai.smithery/TakoData-tako-mcp",
    "description": "Provide real-time data querying and visualization by integrating Tako with your agents. Generate o…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/TakoData/tako-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@TakoData/tako-mcp/mcp",
    "documentationUrl": "https://github.com/TakoData/tako-mcp#readme",
    "homepage": "https://github.com/TakoData/tako-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/TakoData-tako-mcp",
      "description": "Provide real-time data querying and visualization by integrating Tako with your agents. Generate o…",
      "repository": {
        "url": "https://github.com/TakoData/tako-mcp",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@TakoData/tako-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-a-ariff-canvas-instant-mcp",
    "name": "ai.smithery/a-ariff-canvas-instant-mcp",
    "description": "Manage your Canvas coursework with quick access to courses, assignments, and grades. Track upcomin…",
    "category": "ai",
    "version": "2.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/a-ariff/canvas-instant-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@a-ariff/canvas-instant-mcp/mcp",
    "documentationUrl": "https://github.com/a-ariff/canvas-instant-mcp#readme",
    "homepage": "https://github.com/a-ariff/canvas-instant-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/a-ariff-canvas-instant-mcp",
      "description": "Manage your Canvas coursework with quick access to courses, assignments, and grades. Track upcomin…",
      "repository": {
        "url": "https://github.com/a-ariff/canvas-instant-mcp",
        "source": "github"
      },
      "version": "2.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@a-ariff/canvas-instant-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-aamangeldi-dad-jokes-mcp",
    "name": "ai.smithery/aamangeldi-dad-jokes-mcp",
    "description": "Get a random dad joke or search by keyword to fit any moment. Retrieve specific jokes by ID for re…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/aamangeldi/dad-jokes-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@aamangeldi/dad-jokes-mcp/mcp",
    "documentationUrl": "https://github.com/aamangeldi/dad-jokes-mcp#readme",
    "homepage": "https://github.com/aamangeldi/dad-jokes-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/aamangeldi-dad-jokes-mcp",
      "description": "Get a random dad joke or search by keyword to fit any moment. Retrieve specific jokes by ID for re…",
      "repository": {
        "url": "https://github.com/aamangeldi/dad-jokes-mcp",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@aamangeldi/dad-jokes-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-adamamer20-paper-search-mcp-openai",
    "name": "ai.smithery/adamamer20-paper-search-mcp-openai",
    "description": "Search and download academic papers from arXiv, PubMed, bioRxiv, medRxiv, Google Scholar, Semantic…",
    "category": "ai",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/adamamer20/paper-search-mcp-openai",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@adamamer20/paper-search-mcp-openai/mcp",
    "documentationUrl": "https://github.com/adamamer20/paper-search-mcp-openai#readme",
    "homepage": "https://github.com/adamamer20/paper-search-mcp-openai",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/adamamer20-paper-search-mcp-openai",
      "description": "Search and download academic papers from arXiv, PubMed, bioRxiv, medRxiv, Google Scholar, Semantic…",
      "repository": {
        "url": "https://github.com/adamamer20/paper-search-mcp-openai",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@adamamer20/paper-search-mcp-openai/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-afgong-sqlite-mcp-server",
    "name": "ai.smithery/afgong-sqlite-mcp-server",
    "description": "Explore your Messages SQLite database to browse tables and inspect schemas with ease. Run flexible…",
    "category": "database",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/afgong/sqlite-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@afgong/sqlite-mcp-server/mcp",
    "documentationUrl": "https://github.com/afgong/sqlite-mcp-server#readme",
    "homepage": "https://github.com/afgong/sqlite-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/afgong-sqlite-mcp-server",
      "description": "Explore your Messages SQLite database to browse tables and inspect schemas with ease. Run flexible…",
      "repository": {
        "url": "https://github.com/afgong/sqlite-mcp-server",
        "source": "github",
        "subfolder": "sqlite-explorer-fastmcp-mcp-server"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@afgong/sqlite-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-aicastle-school-openai-api-agent-project",
    "name": "ai.smithery/aicastle-school-openai-api-agent-project",
    "description": "Fetch current stock prices and key data for symbols across global markets. Look up companies like…",
    "category": "web",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/aicastle-school/openai-api-agent-project",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@aicastle-school/openai-api-agent-project/mcp",
    "documentationUrl": "https://github.com/aicastle-school/openai-api-agent-project#readme",
    "homepage": "https://github.com/aicastle-school/openai-api-agent-project",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/aicastle-school-openai-api-agent-project",
      "description": "Fetch current stock prices and key data for symbols across global markets. Look up companies like…",
      "repository": {
        "url": "https://github.com/aicastle-school/openai-api-agent-project",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@aicastle-school/openai-api-agent-project/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-aicastle-school-openai-api-agent-project11",
    "name": "ai.smithery/aicastle-school-openai-api-agent-project11",
    "description": "Fetch the latest available stock quotes by ticker symbol across international markets. Check price…",
    "category": "web",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/aicastle-school/openai-api-agent-project",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@aicastle-school/openai-api-agent-project11/mcp",
    "documentationUrl": "https://github.com/aicastle-school/openai-api-agent-project#readme",
    "homepage": "https://github.com/aicastle-school/openai-api-agent-project",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/aicastle-school-openai-api-agent-project11",
      "description": "Fetch the latest available stock quotes by ticker symbol across international markets. Check price…",
      "repository": {
        "url": "https://github.com/aicastle-school/openai-api-agent-project",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@aicastle-school/openai-api-agent-project11/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-airmang-hwpx-mcp",
    "name": "ai.smithery/airmang-hwpx-mcp",
    "description": "자동화하여 HWPX 문서의 로딩, 탐색, 편집, 검증을 한 번에 처리합니다. 문단·표·주석 추가, 텍스트 일괄 치환, 머리말·꼬리말 설정 등 반복 작업을 신속히 수행합니다. 기…",
    "category": "ai",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/airmang/hwpx-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@airmang/hwpx-mcp/mcp",
    "documentationUrl": "https://github.com/airmang/hwpx-mcp#readme",
    "homepage": "https://github.com/airmang/hwpx-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/airmang-hwpx-mcp",
      "description": "자동화하여 HWPX 문서의 로딩, 탐색, 편집, 검증을 한 번에 처리합니다. 문단·표·주석 추가, 텍스트 일괄 치환, 머리말·꼬리말 설정 등 반복 작업을 신속히 수행합니다. 기…",
      "repository": {
        "url": "https://github.com/airmang/hwpx-mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@airmang/hwpx-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-akilat-spec-leave-manager-mcp",
    "name": "ai.smithery/akilat-spec-leave-manager-mcp",
    "description": "Track and manage employee time off with quick balance lookups and streamlined applications. Find t…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/akilat-spec/leave-manager-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@akilat-spec/leave-manager-mcp/mcp",
    "documentationUrl": "https://github.com/akilat-spec/leave-manager-mcp#readme",
    "homepage": "https://github.com/akilat-spec/leave-manager-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/akilat-spec-leave-manager-mcp",
      "description": "Track and manage employee time off with quick balance lookups and streamlined applications. Find t…",
      "repository": {
        "url": "https://github.com/akilat-spec/leave-manager-mcp",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@akilat-spec/leave-manager-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-alex-llm-attack-mcp-server",
    "name": "ai.smithery/alex-llm-attack-mcp-server",
    "description": "Query and retrieve information about various adversarial tactics and techniques used in cyber atta…",
    "category": "ai",
    "version": "2.1",
    "author": "ai.smithery",
    "repository": "https://github.com/alex-llm/attAck-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@alex-llm/attack-mcp-server/mcp",
    "documentationUrl": "https://github.com/alex-llm/attAck-mcp-server#readme",
    "homepage": "https://github.com/alex-llm/attAck-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/alex-llm-attack-mcp-server",
      "description": "Query and retrieve information about various adversarial tactics and techniques used in cyber atta…",
      "repository": {
        "url": "https://github.com/alex-llm/attAck-mcp-server",
        "source": "github"
      },
      "version": "2.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@alex-llm/attack-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-alphago2580-naramarketmcp",
    "name": "ai.smithery/alphago2580-naramarketmcp",
    "description": "Access Korea’s G2B procurement and Nara Market data for bid notices, awards, contracts, statistics…",
    "category": "ai",
    "version": "1.14.1",
    "author": "ai.smithery",
    "repository": "https://github.com/alphago2580/naramarketmcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@alphago2580/naramarketmcp/mcp",
    "documentationUrl": "https://github.com/alphago2580/naramarketmcp#readme",
    "homepage": "https://github.com/alphago2580/naramarketmcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/alphago2580-naramarketmcp",
      "description": "Access Korea’s G2B procurement and Nara Market data for bid notices, awards, contracts, statistics…",
      "repository": {
        "url": "https://github.com/alphago2580/naramarketmcp",
        "source": "github"
      },
      "version": "1.14.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@alphago2580/naramarketmcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-anirbanbasu-frankfurtermcp",
    "name": "ai.smithery/anirbanbasu-frankfurtermcp",
    "description": "A MCP server for the Frankfurter API for currency exchange rates.",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/anirbanbasu/frankfurtermcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@anirbanbasu/frankfurtermcp/mcp",
    "documentationUrl": "https://github.com/anirbanbasu/frankfurtermcp#readme",
    "homepage": "https://github.com/anirbanbasu/frankfurtermcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/anirbanbasu-frankfurtermcp",
      "description": "A MCP server for the Frankfurter API for currency exchange rates.",
      "repository": {
        "url": "https://github.com/anirbanbasu/frankfurtermcp",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@anirbanbasu/frankfurtermcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-anirbanbasu-pymcp",
    "name": "ai.smithery/anirbanbasu-pymcp",
    "description": "Primarily to be used as a template repository for developing MCP servers with FastMCP in Python, P…",
    "category": "ai",
    "version": "0.1.7",
    "author": "ai.smithery",
    "repository": "https://github.com/anirbanbasu/pymcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@anirbanbasu/pymcp/mcp",
    "documentationUrl": "https://github.com/anirbanbasu/pymcp#readme",
    "homepage": "https://github.com/anirbanbasu/pymcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/anirbanbasu-pymcp",
      "description": "Primarily to be used as a template repository for developing MCP servers with FastMCP in Python, P…",
      "repository": {
        "url": "https://github.com/anirbanbasu/pymcp",
        "source": "github"
      },
      "version": "0.1.7",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@anirbanbasu/pymcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-ahoy",
    "name": "ai.smithery/arjunkmrm-ahoy",
    "description": "Send friendly, personalized greetings by name. Switch to a playful pirate voice for themed salutat…",
    "category": "ai",
    "version": "1.13.1",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/ahoy",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/ahoy/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/ahoy#readme",
    "homepage": "https://github.com/arjunkmrm/ahoy",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/arjunkmrm-ahoy",
      "description": "Send friendly, personalized greetings by name. Switch to a playful pirate voice for themed salutat…",
      "repository": {
        "url": "https://github.com/arjunkmrm/ahoy",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/ahoy/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-ahoy2",
    "name": "ai.smithery/arjunkmrm-ahoy2",
    "description": "Create friendly greetings by name, with an optional pirate tone. Explore the origin of 'Hello, Wor…",
    "category": "ai",
    "version": "1.13.1",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/ahoy",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/ahoy2/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/ahoy#readme",
    "homepage": "https://github.com/arjunkmrm/ahoy",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/arjunkmrm-ahoy2",
      "description": "Create friendly greetings by name, with an optional pirate tone. Explore the origin of 'Hello, Wor…",
      "repository": {
        "url": "https://github.com/arjunkmrm/ahoy",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/ahoy2/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-boba-tea",
    "name": "ai.smithery/arjunkmrm-boba-tea",
    "description": "Send friendly greetings to people by name. Discover the origin story behind 'Hello, World' for qui…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/boba-tea/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-boba-tea",
      "description": "Send friendly greetings to people by name. Discover the origin story behind 'Hello, World' for qui…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/boba-tea/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-bobo",
    "name": "ai.smithery/arjunkmrm-bobo",
    "description": "Send friendly, personalized greetings on command. Explore the origin of 'Hello, World' for quick c…",
    "category": "ai",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/bobo/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/arjunkmrm-bobo",
      "description": "Send friendly, personalized greetings on command. Explore the origin of 'Hello, World' for quick c…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/bobo/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-brave-search-mcp-server",
    "name": "ai.smithery/arjunkmrm-brave-search-mcp-server",
    "description": "Search the web, images, videos, news, and local businesses with robust filters, freshness controls…",
    "category": "web",
    "version": "2.0.25",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/brave-search-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/brave-search-mcp-server/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/brave-search-mcp-server#readme",
    "homepage": "https://github.com/arjunkmrm/brave-search-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-brave-search-mcp-server",
      "description": "Search the web, images, videos, news, and local businesses with robust filters, freshness controls…",
      "repository": {
        "url": "https://github.com/arjunkmrm/brave-search-mcp-server",
        "source": "github"
      },
      "version": "2.0.25",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/brave-search-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-clock",
    "name": "ai.smithery/arjunkmrm-clock",
    "description": "Check the current time instantly and explore world timezones by region. Browse available continent…",
    "category": "ai",
    "version": "1.14.1",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/clock",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/clock/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/clock#readme",
    "homepage": "https://github.com/arjunkmrm/clock",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/arjunkmrm-clock",
      "description": "Check the current time instantly and explore world timezones by region. Browse available continent…",
      "repository": {
        "url": "https://github.com/arjunkmrm/clock",
        "source": "github"
      },
      "version": "1.14.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/clock/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-fetch",
    "name": "ai.smithery/arjunkmrm-fetch",
    "description": "Fetch web pages and extract exactly the content you need. Select elements with CSS and retrieve co…",
    "category": "web",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/fetch",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/fetch/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/fetch#readme",
    "homepage": "https://github.com/arjunkmrm/fetch",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-fetch",
      "description": "Fetch web pages and extract exactly the content you need. Select elements with CSS and retrieve co…",
      "repository": {
        "url": "https://github.com/arjunkmrm/fetch",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/fetch/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-local-test2",
    "name": "ai.smithery/arjunkmrm-local-test2",
    "description": "Send friendly greetings instantly. Learn the origin of 'Hello, World' to add a fun fact to your me…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/local-test2/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/arjunkmrm-local-test2",
      "description": "Send friendly greetings instantly. Learn the origin of 'Hello, World' to add a fun fact to your me…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/local-test2/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-local001",
    "name": "ai.smithery/arjunkmrm-local001",
    "description": "Get the current time in your preferred timezone or any region you specify. Browse concise informat…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/time",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/local001/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/time#readme",
    "homepage": "https://github.com/arjunkmrm/time",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-local001",
      "description": "Get the current time in your preferred timezone or any region you specify. Browse concise informat…",
      "repository": {
        "url": "https://github.com/arjunkmrm/time",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/local001/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-local01",
    "name": "ai.smithery/arjunkmrm-local01",
    "description": "Greet people warmly or roast them with playful banter. Explore the origin of 'Hello, World' for qu…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/local01/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-local01",
      "description": "Greet people warmly or roast them with playful banter. Explore the origin of 'Hello, World' for qu…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/local01/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-local02",
    "name": "ai.smithery/arjunkmrm-local02",
    "description": "Get the current time in your chosen timezone and view common timezone information. Simplify schedu…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/time",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/local02/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/time#readme",
    "homepage": "https://github.com/arjunkmrm/time",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-local02",
      "description": "Get the current time in your chosen timezone and view common timezone information. Simplify schedu…",
      "repository": {
        "url": "https://github.com/arjunkmrm/time",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/local02/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-lta-mcp",
    "name": "ai.smithery/arjunkmrm-lta-mcp",
    "description": "Provide real-time transportation data including bus arrivals, train service alerts, carpark availa…",
    "category": "ai",
    "version": "0.1.0",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/lta-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/lta-mcp/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/lta-mcp#readme",
    "homepage": "https://github.com/arjunkmrm/lta-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/arjunkmrm-lta-mcp",
      "description": "Provide real-time transportation data including bus arrivals, train service alerts, carpark availa…",
      "repository": {
        "url": "https://github.com/arjunkmrm/lta-mcp",
        "source": "github"
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/lta-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-mango-sago",
    "name": "ai.smithery/arjunkmrm-mango-sago",
    "description": "Create cheerful, personalized greetings in seconds. Switch to playful pirate-speak for extra flair…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/mango-sago",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/mango-sago/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/mango-sago#readme",
    "homepage": "https://github.com/arjunkmrm/mango-sago",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-mango-sago",
      "description": "Create cheerful, personalized greetings in seconds. Switch to playful pirate-speak for extra flair…",
      "repository": {
        "url": "https://github.com/arjunkmrm/mango-sago",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/mango-sago/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-perplexity-search",
    "name": "ai.smithery/arjunkmrm-perplexity-search",
    "description": "Enable AI assistants to perform web searches using Perplexity's Sonar Pro.",
    "category": "web",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/perplexity-search",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/perplexity-search/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/perplexity-search#readme",
    "homepage": "https://github.com/arjunkmrm/perplexity-search",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/arjunkmrm-perplexity-search",
      "description": "Enable AI assistants to perform web searches using Perplexity's Sonar Pro.",
      "repository": {
        "url": "https://github.com/arjunkmrm/perplexity-search",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/perplexity-search/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-py-test-0",
    "name": "ai.smithery/arjunkmrm-py-test-0",
    "description": "Send personalized greetings by name, with an optional pirate tone. Generate greeting prompts and e…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/py-test-0/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-py-test-0",
      "description": "Send personalized greetings by name, with an optional pirate tone. Generate greeting prompts and e…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/py-test-0/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-py-test-2",
    "name": "ai.smithery/arjunkmrm-py-test-2",
    "description": "Greet people by name with friendly, customizable messages. Toggle Pirate Mode to speak like a swas…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/mango-sago",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/py-test-2/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/mango-sago#readme",
    "homepage": "https://github.com/arjunkmrm/mango-sago",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-py-test-2",
      "description": "Greet people by name with friendly, customizable messages. Toggle Pirate Mode to speak like a swas…",
      "repository": {
        "url": "https://github.com/arjunkmrm/mango-sago",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/py-test-2/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-scrapermcp_el",
    "name": "ai.smithery/arjunkmrm-scrapermcp_el",
    "description": "Extract and parse web pages into clean HTML, links, or Markdown. Handle dynamic, complex, or block…",
    "category": "web",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/ScraperMcp_el",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/scrapermcp_el/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/ScraperMcp_el#readme",
    "homepage": "https://github.com/arjunkmrm/ScraperMcp_el",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/arjunkmrm-scrapermcp_el",
      "description": "Extract and parse web pages into clean HTML, links, or Markdown. Handle dynamic, complex, or block…",
      "repository": {
        "url": "https://github.com/arjunkmrm/ScraperMcp_el",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/scrapermcp_el/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-sg-bus-test",
    "name": "ai.smithery/arjunkmrm-sg-bus-test",
    "description": "Get real-time bus arrival times for any Singapore bus stop by code, with optional service filterin…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/sg-bus-test",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/sg-bus-test/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/sg-bus-test#readme",
    "homepage": "https://github.com/arjunkmrm/sg-bus-test",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-sg-bus-test",
      "description": "Get real-time bus arrival times for any Singapore bus stop by code, with optional service filterin…",
      "repository": {
        "url": "https://github.com/arjunkmrm/sg-bus-test",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/sg-bus-test/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-test0",
    "name": "ai.smithery/arjunkmrm-test0",
    "description": "Get the current time in any timezone and quickly look up common timezone info. Set a default timez…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/time",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/test0/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/time#readme",
    "homepage": "https://github.com/arjunkmrm/time",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-test0",
      "description": "Get the current time in any timezone and quickly look up common timezone info. Set a default timez…",
      "repository": {
        "url": "https://github.com/arjunkmrm/time",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/test0/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-test01",
    "name": "ai.smithery/arjunkmrm-test01",
    "description": "Get the current time in any timezone. Explore concise timezone info to pick the right region. Simp…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/time",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/test01/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/time#readme",
    "homepage": "https://github.com/arjunkmrm/time",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-test01",
      "description": "Get the current time in any timezone. Explore concise timezone info to pick the right region. Simp…",
      "repository": {
        "url": "https://github.com/arjunkmrm/time",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/test01/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-test2",
    "name": "ai.smithery/arjunkmrm-test2",
    "description": "Greet anyone by name with a friendly message. Explore the origin of 'Hello, World' to add context…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/test2/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/arjunkmrm-test2",
      "description": "Greet anyone by name with a friendly message. Explore the origin of 'Hello, World' to add context…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/test2/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-time",
    "name": "ai.smithery/arjunkmrm-time",
    "description": "Get the current time anywhere and access concise timezone information. Set your preferred timezone…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/time",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/time/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/time#readme",
    "homepage": "https://github.com/arjunkmrm/time",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-time",
      "description": "Get the current time anywhere and access concise timezone information. Set your preferred timezone…",
      "repository": {
        "url": "https://github.com/arjunkmrm/time",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/time/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-ts-test-2",
    "name": "ai.smithery/arjunkmrm-ts-test-2",
    "description": "Greet anyone with a friendly, personalized hello. Explore the origin story of 'Hello, World.' Jump…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/ts-test-2/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-ts-test-2",
      "description": "Greet anyone with a friendly, personalized hello. Explore the origin story of 'Hello, World.' Jump…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/ts-test-2/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-tutorials",
    "name": "ai.smithery/arjunkmrm-tutorials",
    "description": "Analyze stocks and SEC filings to surface key insights, from price and volume to insider activity…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/tutorials",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/tutorials/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/tutorials#readme",
    "homepage": "https://github.com/arjunkmrm/tutorials",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/arjunkmrm-tutorials",
      "description": "Analyze stocks and SEC filings to surface key insights, from price and volume to insider activity…",
      "repository": {
        "url": "https://github.com/arjunkmrm/tutorials",
        "source": "github",
        "subfolder": "smithery-example/financial-server"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/tutorials/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-arjunkmrm-watch2",
    "name": "ai.smithery/arjunkmrm-watch2",
    "description": "Get the current time in your chosen timezone. Browse available continents and regions to pick the…",
    "category": "ai",
    "version": "1.14.1",
    "author": "ai.smithery",
    "repository": "https://github.com/arjunkmrm/clock",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@arjunkmrm/watch2/mcp",
    "documentationUrl": "https://github.com/arjunkmrm/clock#readme",
    "homepage": "https://github.com/arjunkmrm/clock",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/arjunkmrm-watch2",
      "description": "Get the current time in your chosen timezone. Browse available continents and regions to pick the…",
      "repository": {
        "url": "https://github.com/arjunkmrm/clock",
        "source": "github"
      },
      "version": "1.14.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/watch2/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-aryankeluskar-poke-video-mcp",
    "name": "ai.smithery/aryankeluskar-poke-video-mcp",
    "description": "Search your Flashback video library with natural language to instantly find relevant moments. Get…",
    "category": "ai",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/aryankeluskar/poke-video-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@aryankeluskar/poke-video-mcp/mcp",
    "documentationUrl": "https://github.com/aryankeluskar/poke-video-mcp#readme",
    "homepage": "https://github.com/aryankeluskar/poke-video-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/aryankeluskar-poke-video-mcp",
      "description": "Search your Flashback video library with natural language to instantly find relevant moments. Get…",
      "repository": {
        "url": "https://github.com/aryankeluskar/poke-video-mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@aryankeluskar/poke-video-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-bergeramit-bergeramit-hw3-tech",
    "name": "ai.smithery/bergeramit-bergeramit-hw3-tech",
    "description": "Create friendly greetings and add two numbers instantly. Speed up simple tasks and streamline ligh…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/bergeramit/bergeramit-hw3-tech",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@bergeramit/bergeramit-hw3-tech/mcp",
    "documentationUrl": "https://github.com/bergeramit/bergeramit-hw3-tech#readme",
    "homepage": "https://github.com/bergeramit/bergeramit-hw3-tech",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/bergeramit-bergeramit-hw3-tech",
      "description": "Create friendly greetings and add two numbers instantly. Speed up simple tasks and streamline ligh…",
      "repository": {
        "url": "https://github.com/bergeramit/bergeramit-hw3-tech",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@bergeramit/bergeramit-hw3-tech/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-bergeramit-bergeramit-hw3-tech-1",
    "name": "ai.smithery/bergeramit-bergeramit-hw3-tech-1",
    "description": "Add two numbers instantly and generate friendly greetings on demand. Speed up quick math and perso…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/bergeramit/bergeramit-hw3-tech",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@bergeramit/bergeramit-hw3-tech-1/mcp",
    "documentationUrl": "https://github.com/bergeramit/bergeramit-hw3-tech#readme",
    "homepage": "https://github.com/bergeramit/bergeramit-hw3-tech",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/bergeramit-bergeramit-hw3-tech-1",
      "description": "Add two numbers instantly and generate friendly greetings on demand. Speed up quick math and perso…",
      "repository": {
        "url": "https://github.com/bergeramit/bergeramit-hw3-tech",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@bergeramit/bergeramit-hw3-tech-1/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-bhushangitfull-file-mcp-smith",
    "name": "ai.smithery/bhushangitfull-file-mcp-smith",
    "description": "Manage files and folders directly from your workspace. Read and write files, list directories, cre…",
    "category": "filesystem",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/bhushangitfull/file-mcp-smith",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@bhushangitfull/file-mcp-smith/mcp",
    "documentationUrl": "https://github.com/bhushangitfull/file-mcp-smith#readme",
    "homepage": "https://github.com/bhushangitfull/file-mcp-smith",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/bhushangitfull-file-mcp-smith",
      "description": "Manage files and folders directly from your workspace. Read and write files, list directories, cre…",
      "repository": {
        "url": "https://github.com/bhushangitfull/file-mcp-smith",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@bhushangitfull/file-mcp-smith/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-bielacki-igdb-mcp-server",
    "name": "ai.smithery/bielacki-igdb-mcp-server",
    "description": "Explore and discover video games from the Internet Game Database. Search titles, view detailed inf…",
    "category": "database",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/bielacki/igdb-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@bielacki/igdb-mcp-server/mcp",
    "documentationUrl": "https://github.com/bielacki/igdb-mcp-server#readme",
    "homepage": "https://github.com/bielacki/igdb-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/bielacki-igdb-mcp-server",
      "description": "Explore and discover video games from the Internet Game Database. Search titles, view detailed inf…",
      "repository": {
        "url": "https://github.com/bielacki/igdb-mcp-server",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@bielacki/igdb-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-blacklotusdev8-test_m",
    "name": "ai.smithery/blacklotusdev8-test_m",
    "description": "Greet anyone by name with a friendly hello. Scrape webpages to extract content for quick reference…",
    "category": "web",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/blacklotusdev8/test_m",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@blacklotusdev8/test_m/mcp",
    "documentationUrl": "https://github.com/blacklotusdev8/test_m#readme",
    "homepage": "https://github.com/blacklotusdev8/test_m",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/blacklotusdev8-test_m",
      "description": "Greet anyone by name with a friendly hello. Scrape webpages to extract content for quick reference…",
      "repository": {
        "url": "https://github.com/blacklotusdev8/test_m",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@blacklotusdev8/test_m/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-blbl147-xhs-mcp",
    "name": "ai.smithery/blbl147-xhs-mcp",
    "description": "搜索笔记、浏览首页推荐、查看笔记内容与评论，并发表你的评论。直接在工作流中与小红书内容互动，高效跟进话题。",
    "category": "ai",
    "version": "1.6.0",
    "author": "ai.smithery",
    "repository": "https://github.com/blbl147/xhs-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@blbl147/xhs-mcp/mcp",
    "documentationUrl": "https://github.com/blbl147/xhs-mcp#readme",
    "homepage": "https://github.com/blbl147/xhs-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/blbl147-xhs-mcp",
      "description": "搜索笔记、浏览首页推荐、查看笔记内容与评论，并发表你的评论。直接在工作流中与小红书内容互动，高效跟进话题。",
      "repository": {
        "url": "https://github.com/blbl147/xhs-mcp",
        "source": "github"
      },
      "version": "1.6.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@blbl147/xhs-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-blockscout-mcp-server",
    "name": "ai.smithery/blockscout-mcp-server",
    "description": "Provide AI agents and automation tools with contextual access to blockchain data including balance…",
    "category": "ai",
    "version": "1.13.1",
    "author": "ai.smithery",
    "repository": "https://github.com/blockscout/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@blockscout/mcp-server/mcp",
    "documentationUrl": "https://github.com/blockscout/mcp-server#readme",
    "homepage": "https://github.com/blockscout/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/blockscout-mcp-server",
      "description": "Provide AI agents and automation tools with contextual access to blockchain data including balance…",
      "repository": {
        "url": "https://github.com/blockscout/mcp-server",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@blockscout/mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-brandonbosco-sigao-scf-mcp",
    "name": "ai.smithery/brandonbosco-sigao-scf-mcp",
    "description": "Provides access to Civic Plus - See Click Fix, allowing you to interact with your data via an LLM.���",
    "category": "ai",
    "version": "1.0.1",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@brandonbosco/sigao-scf-mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/brandonbosco-sigao-scf-mcp",
      "description": "Provides access to Civic Plus - See Click Fix, allowing you to interact with your data via an LLM.���",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@brandonbosco/sigao-scf-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-brave",
    "name": "ai.smithery/brave",
    "description": "Visit https://brave.com/search/api/ for a free API key. Search the web, local businesses, images,…",
    "category": "web",
    "version": "2.0.58",
    "author": "ai.smithery",
    "repository": "https://github.com/brave/brave-search-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/brave/mcp",
    "documentationUrl": "https://github.com/brave/brave-search-mcp-server#readme",
    "homepage": "https://github.com/brave/brave-search-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "ai.smithery/brave",
      "description": "Visit https://brave.com/search/api/ for a free API key. Search the web, local businesses, images,…",
      "repository": {
        "url": "https://github.com/brave/brave-search-mcp-server",
        "source": "github"
      },
      "version": "2.0.58",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/brave/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-browserbasehq-mcp-browserbase",
    "name": "ai.smithery/browserbasehq-mcp-browserbase",
    "description": "Provides cloud browser automation capabilities using Stagehand and Browserbase, enabling LLMs to i…",
    "category": "cloud",
    "version": "2.2.0",
    "author": "ai.smithery",
    "repository": "https://github.com/browserbase/mcp-server-browserbase",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@browserbasehq/mcp-browserbase/mcp",
    "documentationUrl": "https://github.com/browserbase/mcp-server-browserbase#readme",
    "homepage": "https://github.com/browserbase/mcp-server-browserbase",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/browserbasehq-mcp-browserbase",
      "description": "Provides cloud browser automation capabilities using Stagehand and Browserbase, enabling LLMs to i…",
      "repository": {
        "url": "https://github.com/browserbase/mcp-server-browserbase",
        "source": "github"
      },
      "version": "2.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@browserbasehq/mcp-browserbase/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-callmybot-cookbook-mcp-server",
    "name": "ai.smithery/callmybot-cookbook-mcp-server",
    "description": "Count occurrences of any character in your text instantly. Specify the character and get precise c…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/callmybot/cookbook-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@callmybot/cookbook-mcp-server/mcp",
    "documentationUrl": "https://github.com/callmybot/cookbook-mcp-server#readme",
    "homepage": "https://github.com/callmybot/cookbook-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/callmybot-cookbook-mcp-server",
      "description": "Count occurrences of any character in your text instantly. Specify the character and get precise c…",
      "repository": {
        "url": "https://github.com/callmybot/cookbook-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@callmybot/cookbook-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-callmybot-domoticz",
    "name": "ai.smithery/callmybot-domoticz",
    "description": "Greet anyone by name with a friendly hello. Explore the origin of 'Hello, World' for context in de…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/callmybot/domoticz",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@callmybot/domoticz/mcp",
    "documentationUrl": "https://github.com/callmybot/domoticz#readme",
    "homepage": "https://github.com/callmybot/domoticz",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/callmybot-domoticz",
      "description": "Greet anyone by name with a friendly hello. Explore the origin of 'Hello, World' for context in de…",
      "repository": {
        "url": "https://github.com/callmybot/domoticz",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@callmybot/domoticz/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-callmybot-hello-mcp-server",
    "name": "ai.smithery/callmybot-hello-mcp-server",
    "description": "Generate quick, friendly greetings by name. Personalize salutations for any context. Explore the o…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/callmybot/hello-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@callmybot/hello-mcp-server/mcp",
    "documentationUrl": "https://github.com/callmybot/hello-mcp-server#readme",
    "homepage": "https://github.com/callmybot/hello-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/callmybot-hello-mcp-server",
      "description": "Generate quick, friendly greetings by name. Personalize salutations for any context. Explore the o…",
      "repository": {
        "url": "https://github.com/callmybot/hello-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@callmybot/hello-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-cc25a-openai-api-agent-project123123123",
    "name": "ai.smithery/cc25a-openai-api-agent-project123123123",
    "description": "Look up the latest stock prices by ticker symbol across global markets. Get current price and esse…",
    "category": "web",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/cc25a/openai-api-agent-project",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@cc25a/openai-api-agent-project123123123/mcp",
    "documentationUrl": "https://github.com/cc25a/openai-api-agent-project#readme",
    "homepage": "https://github.com/cc25a/openai-api-agent-project",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/cc25a-openai-api-agent-project123123123",
      "description": "Look up the latest stock prices by ticker symbol across global markets. Get current price and esse…",
      "repository": {
        "url": "https://github.com/cc25a/openai-api-agent-project",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@cc25a/openai-api-agent-project123123123/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-cindyloo-dropbox-mcp-server",
    "name": "ai.smithery/cindyloo-dropbox-mcp-server",
    "description": "Search, browse, and read your Dropbox files. Find documents by name or content, list folders, and…",
    "category": "filesystem",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/cindyloo/dropbox-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@cindyloo/dropbox-mcp-server/mcp",
    "documentationUrl": "https://github.com/cindyloo/dropbox-mcp-server#readme",
    "homepage": "https://github.com/cindyloo/dropbox-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/cindyloo-dropbox-mcp-server",
      "description": "Search, browse, and read your Dropbox files. Find documents by name or content, list folders, and…",
      "repository": {
        "url": "https://github.com/cindyloo/dropbox-mcp-server",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@cindyloo/dropbox-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-clpi-clp-mcp",
    "name": "ai.smithery/clpi-clp-mcp",
    "description": "Manage simple context workflows with quick init and add actions. Access the 'Hello, World' origin…",
    "category": "ai",
    "version": "0.0.1",
    "author": "ai.smithery",
    "repository": "https://github.com/clpi/clp-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@clpi/clp-mcp/mcp",
    "documentationUrl": "https://github.com/clpi/clp-mcp#readme",
    "homepage": "https://github.com/clpi/clp-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/clpi-clp-mcp",
      "description": "Manage simple context workflows with quick init and add actions. Access the 'Hello, World' origin…",
      "repository": {
        "url": "https://github.com/clpi/clp-mcp",
        "source": "github"
      },
      "version": "0.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@clpi/clp-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-cpretzinger-ai-assistant-simple",
    "name": "ai.smithery/cpretzinger-ai-assistant-simple",
    "description": "UPDATED 9/1/2025! NEW TOOLS! Use the Redis Stream tools with n8n MCP Client Node for use anywhere!…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@cpretzinger/ai-assistant-simple/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/cpretzinger-ai-assistant-simple",
      "description": "UPDATED 9/1/2025! NEW TOOLS! Use the Redis Stream tools with n8n MCP Client Node for use anywhere!…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@cpretzinger/ai-assistant-simple/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-cristianoaredes-mcp-dadosbr",
    "name": "ai.smithery/cristianoaredes-mcp-dadosbr",
    "description": "# MCP DadosBR Servidor MCP focado em dados públicos do Brasil. Oferece duas ferramentas simples e…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/cristianoaredes/mcp-dadosbr",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@cristianoaredes/mcp-dadosbr/mcp",
    "documentationUrl": "https://github.com/cristianoaredes/mcp-dadosbr#readme",
    "homepage": "https://github.com/cristianoaredes/mcp-dadosbr",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/cristianoaredes-mcp-dadosbr",
      "description": "# MCP DadosBR Servidor MCP focado em dados públicos do Brasil. Oferece duas ferramentas simples e…",
      "repository": {
        "url": "https://github.com/cristianoaredes/mcp-dadosbr",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@cristianoaredes/mcp-dadosbr/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-ctaylor86-mcp-video-download-server",
    "name": "ai.smithery/ctaylor86-mcp-video-download-server",
    "description": "Connect your video workflows to cloud storage. Organize and access video assets across projects wi…",
    "category": "cloud",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/ctaylor86/mcp-video-download-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@ctaylor86/mcp-video-download-server/mcp",
    "documentationUrl": "https://github.com/ctaylor86/mcp-video-download-server#readme",
    "homepage": "https://github.com/ctaylor86/mcp-video-download-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/ctaylor86-mcp-video-download-server",
      "description": "Connect your video workflows to cloud storage. Organize and access video assets across projects wi…",
      "repository": {
        "url": "https://github.com/ctaylor86/mcp-video-download-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ctaylor86/mcp-video-download-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-cuongpo-coti-mcp",
    "name": "ai.smithery/cuongpo-coti-mcp",
    "description": "Connect to the COTI blockchain to manage accounts, transfer native tokens, and deploy and operate…",
    "category": "ai",
    "version": "0.2.1",
    "author": "ai.smithery",
    "repository": "https://github.com/cuongpo/coti-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@cuongpo/coti-mcp/mcp",
    "documentationUrl": "https://github.com/cuongpo/coti-mcp#readme",
    "homepage": "https://github.com/cuongpo/coti-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/cuongpo-coti-mcp",
      "description": "Connect to the COTI blockchain to manage accounts, transfer native tokens, and deploy and operate…",
      "repository": {
        "url": "https://github.com/cuongpo/coti-mcp",
        "source": "github"
      },
      "version": "0.2.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@cuongpo/coti-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-cuongpo-coti-mcp-1",
    "name": "ai.smithery/cuongpo-coti-mcp-1",
    "description": "Manage COTI accounts, deploy private ERC20 and ERC721 contracts, and transfer tokens and NFTs with…",
    "category": "ai",
    "version": "0.2.1",
    "author": "ai.smithery",
    "repository": "https://github.com/cuongpo/coti-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@cuongpo/coti-mcp-1/mcp",
    "documentationUrl": "https://github.com/cuongpo/coti-mcp#readme",
    "homepage": "https://github.com/cuongpo/coti-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/cuongpo-coti-mcp-1",
      "description": "Manage COTI accounts, deploy private ERC20 and ERC721 contracts, and transfer tokens and NFTs with…",
      "repository": {
        "url": "https://github.com/cuongpo/coti-mcp",
        "source": "github"
      },
      "version": "0.2.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@cuongpo/coti-mcp-1/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-data-mindset-sts-google-forms-mcp",
    "name": "ai.smithery/data-mindset-sts-google-forms-mcp",
    "description": "Create and manage Google Forms to run surveys and collect data. Add text and multiple-choice quest…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/data-mindset/sts-google-forms-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@data-mindset/sts-google-forms-mcp/mcp",
    "documentationUrl": "https://github.com/data-mindset/sts-google-forms-mcp#readme",
    "homepage": "https://github.com/data-mindset/sts-google-forms-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/data-mindset-sts-google-forms-mcp",
      "description": "Create and manage Google Forms to run surveys and collect data. Add text and multiple-choice quest…",
      "repository": {
        "url": "https://github.com/data-mindset/sts-google-forms-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@data-mindset/sts-google-forms-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-demomagic-duckchain-mcp",
    "name": "ai.smithery/demomagic-duckchain-mcp",
    "description": "Explore blockchain data across addresses, tokens, blocks, and transactions. Investigate any transa…",
    "category": "ai",
    "version": "1.13.1",
    "author": "ai.smithery",
    "repository": "https://github.com/demomagic/duckchain-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@demomagic/duckchain-mcp/mcp",
    "documentationUrl": "https://github.com/demomagic/duckchain-mcp#readme",
    "homepage": "https://github.com/demomagic/duckchain-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/demomagic-duckchain-mcp",
      "description": "Explore blockchain data across addresses, tokens, blocks, and transactions. Investigate any transa…",
      "repository": {
        "url": "https://github.com/demomagic/duckchain-mcp",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@demomagic/duckchain-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-devbrother2024-typescript-mcp-server-boilerplate",
    "name": "ai.smithery/devbrother2024-typescript-mcp-server-boilerplate",
    "description": "Kickstart development with a customizable TypeScript template featuring sample tools for greeting,…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/devbrother2024/typescript-mcp-server-boilerplate",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@devbrother2024/typescript-mcp-server-boilerplate/mcp",
    "documentationUrl": "https://github.com/devbrother2024/typescript-mcp-server-boilerplate#readme",
    "homepage": "https://github.com/devbrother2024/typescript-mcp-server-boilerplate",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/devbrother2024-typescript-mcp-server-boilerplate",
      "description": "Kickstart development with a customizable TypeScript template featuring sample tools for greeting,…",
      "repository": {
        "url": "https://github.com/devbrother2024/typescript-mcp-server-boilerplate",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@devbrother2024/typescript-mcp-server-boilerplate/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-docfork-mcp",
    "name": "ai.smithery/docfork-mcp",
    "description": "@latest documentation and code examples to 9000+ libraries for LLMs and AI code editors in a singl…",
    "category": "ai",
    "version": "0.7.0",
    "author": "ai.smithery",
    "repository": "https://github.com/docfork/docfork-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@docfork/mcp/mcp",
    "documentationUrl": "https://github.com/docfork/docfork-mcp#readme",
    "homepage": "https://github.com/docfork/docfork-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/docfork-mcp",
      "description": "@latest documentation and code examples to 9000+ libraries for LLMs and AI code editors in a singl…",
      "repository": {
        "url": "https://github.com/docfork/docfork-mcp",
        "source": "github"
      },
      "version": "0.7.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@docfork/mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-dsharipova-mcp-hw",
    "name": "ai.smithery/dsharipova-mcp-hw",
    "description": "Create personalized greetings by name in the tone you choose. Get quick suggestions for friendly i…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/dsharipova/mcp-hw",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@dsharipova/mcp-hw/mcp",
    "documentationUrl": "https://github.com/dsharipova/mcp-hw#readme",
    "homepage": "https://github.com/dsharipova/mcp-hw",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/dsharipova-mcp-hw",
      "description": "Create personalized greetings by name in the tone you choose. Get quick suggestions for friendly i…",
      "repository": {
        "url": "https://github.com/dsharipova/mcp-hw",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@dsharipova/mcp-hw/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-duvomike-mcp",
    "name": "ai.smithery/duvomike-mcp",
    "description": "Transform numbers by doubling them and adding 5. Get instant results with a clear breakdown of the…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@duvomike/mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/duvomike-mcp",
      "description": "Transform numbers by doubling them and adding 5. Get instant results with a clear breakdown of the…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@duvomike/mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-eliu243-oura-mcp-server",
    "name": "ai.smithery/eliu243-oura-mcp-server",
    "description": "Connect your Oura Ring account and enable access to your wellness data in apps and automations. In…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/eliu243/oura-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@eliu243/oura-mcp-server/mcp",
    "documentationUrl": "https://github.com/eliu243/oura-mcp-server#readme",
    "homepage": "https://github.com/eliu243/oura-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/eliu243-oura-mcp-server",
      "description": "Connect your Oura Ring account and enable access to your wellness data in apps and automations. In…",
      "repository": {
        "url": "https://github.com/eliu243/oura-mcp-server",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@eliu243/oura-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-eliu243-oura-mcp-server-2",
    "name": "ai.smithery/eliu243-oura-mcp-server-2",
    "description": "Connect your Oura Ring account to enable secure, authenticated access in your workflows. Generate…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/eliu243/oura-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@eliu243/oura-mcp-server-2/mcp",
    "documentationUrl": "https://github.com/eliu243/oura-mcp-server#readme",
    "homepage": "https://github.com/eliu243/oura-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/eliu243-oura-mcp-server-2",
      "description": "Connect your Oura Ring account to enable secure, authenticated access in your workflows. Generate…",
      "repository": {
        "url": "https://github.com/eliu243/oura-mcp-server",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@eliu243/oura-mcp-server-2/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-eliu243-oura-mcp-server-eliu",
    "name": "ai.smithery/eliu243-oura-mcp-server-eliu",
    "description": "Connect your Oura Ring account securely in minutes. Enable authorized access to your sleep, activi…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/eliu243/oura-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@eliu243/oura-mcp-server-eliu/mcp",
    "documentationUrl": "https://github.com/eliu243/oura-mcp-server#readme",
    "homepage": "https://github.com/eliu243/oura-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/eliu243-oura-mcp-server-eliu",
      "description": "Connect your Oura Ring account securely in minutes. Enable authorized access to your sleep, activi…",
      "repository": {
        "url": "https://github.com/eliu243/oura-mcp-server",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@eliu243/oura-mcp-server-eliu/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-exa-labs-exa-code-mcp",
    "name": "ai.smithery/exa-labs-exa-code-mcp",
    "description": "Find open-source libraries and fetch contextual code snippets by version to accelerate development…",
    "category": "ai",
    "version": "0.0.1",
    "author": "ai.smithery",
    "repository": "https://github.com/exa-labs/exa-code-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@exa-labs/exa-code-mcp/mcp",
    "documentationUrl": "https://github.com/exa-labs/exa-code-mcp#readme",
    "homepage": "https://github.com/exa-labs/exa-code-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/exa-labs-exa-code-mcp",
      "description": "Find open-source libraries and fetch contextual code snippets by version to accelerate development…",
      "repository": {
        "url": "https://github.com/exa-labs/exa-code-mcp",
        "source": "github"
      },
      "version": "0.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@exa-labs/exa-code-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-faithk7-gmail-mcp",
    "name": "ai.smithery/faithk7-gmail-mcp",
    "description": "Manage Gmail messages, threads, labels, drafts, and settings from your workflows. Send and organiz…",
    "category": "ai",
    "version": "1.7.4",
    "author": "ai.smithery",
    "repository": "https://github.com/faithk7/gmail-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@faithk7/gmail-mcp/mcp",
    "documentationUrl": "https://github.com/faithk7/gmail-mcp#readme",
    "homepage": "https://github.com/faithk7/gmail-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/faithk7-gmail-mcp",
      "description": "Manage Gmail messages, threads, labels, drafts, and settings from your workflows. Send and organiz…",
      "repository": {
        "url": "https://github.com/faithk7/gmail-mcp",
        "source": "github"
      },
      "version": "1.7.4",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@faithk7/gmail-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-feeefapp-mcp",
    "name": "ai.smithery/feeefapp-mcp",
    "description": "Enable AI assistants to interact seamlessly with Feeef e-commerce stores, products, and orders usi…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@feeefapp/mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/feeefapp-mcp",
      "description": "Enable AI assistants to interact seamlessly with Feeef e-commerce stores, products, and orders usi…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@feeefapp/mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-fengyinxia-jimeng-mcp",
    "name": "ai.smithery/fengyinxia-jimeng-mcp",
    "description": "Create images and videos from prompts, with options for image mixing, reference images, and start/…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/fengyinxia/jimeng-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@fengyinxia/jimeng-mcp/mcp",
    "documentationUrl": "https://github.com/fengyinxia/jimeng-mcp#readme",
    "homepage": "https://github.com/fengyinxia/jimeng-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/fengyinxia-jimeng-mcp",
      "description": "Create images and videos from prompts, with options for image mixing, reference images, and start/…",
      "repository": {
        "url": "https://github.com/fengyinxia/jimeng-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@fengyinxia/jimeng-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-fitaf-ai-fitaf-ai-mcp",
    "name": "ai.smithery/fitaf-ai-fitaf-ai-mcp",
    "description": "Manage workouts, nutrition, goals, and progress across the FitAF platform. Connect wearables, sync…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@fitaf-ai/fitaf-ai-mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/fitaf-ai-fitaf-ai-mcp",
      "description": "Manage workouts, nutrition, goals, and progress across the FitAF platform. Connect wearables, sync…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@fitaf-ai/fitaf-ai-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-fitaf-ai-fitaf-mcp",
    "name": "ai.smithery/fitaf-ai-fitaf-mcp",
    "description": "Track workouts, nutrition, body metrics, habits, and SMART goals with insights and trends. Connect…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@fitaf-ai/fitaf-mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/fitaf-ai-fitaf-mcp",
      "description": "Track workouts, nutrition, body metrics, habits, and SMART goals with insights and trends. Connect…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@fitaf-ai/fitaf-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-flight505-mcp_dincoder",
    "name": "ai.smithery/flight505-mcp_dincoder",
    "description": "Driven Intent Negotiation — Contract-Oriented Deterministic Executable Runtime DinCoder brings the…",
    "category": "ai",
    "version": "0.1.15",
    "author": "ai.smithery",
    "repository": "https://github.com/flight505/MCP_DinCoder",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@flight505/mcp_dincoder/mcp",
    "documentationUrl": "https://github.com/flight505/MCP_DinCoder#readme",
    "homepage": "https://github.com/flight505/MCP_DinCoder",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/flight505-mcp_dincoder",
      "description": "Driven Intent Negotiation — Contract-Oriented Deterministic Executable Runtime DinCoder brings the…",
      "repository": {
        "url": "https://github.com/flight505/MCP_DinCoder",
        "source": "github"
      },
      "version": "0.1.15",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@flight505/mcp_dincoder/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-hithereiamaliff-mcp-datagovmy",
    "name": "ai.smithery/hithereiamaliff-mcp-datagovmy",
    "description": "This MCP server provides seamless access to Malaysia's government open data, including datasets, w…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/hithereiamaliff/mcp-datagovmy",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@hithereiamaliff/mcp-datagovmy/mcp",
    "documentationUrl": "https://github.com/hithereiamaliff/mcp-datagovmy#readme",
    "homepage": "https://github.com/hithereiamaliff/mcp-datagovmy",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/hithereiamaliff-mcp-datagovmy",
      "description": "This MCP server provides seamless access to Malaysia's government open data, including datasets, w…",
      "repository": {
        "url": "https://github.com/hithereiamaliff/mcp-datagovmy",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@hithereiamaliff/mcp-datagovmy/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-hithereiamaliff-mcp-nextcloud",
    "name": "ai.smithery/hithereiamaliff-mcp-nextcloud",
    "description": "A comprehensive Model Context Protocol (MCP) server that enables AI assistants to interact with yo…",
    "category": "cloud",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/hithereiamaliff/mcp-nextcloud",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@hithereiamaliff/mcp-nextcloud/mcp",
    "documentationUrl": "https://github.com/hithereiamaliff/mcp-nextcloud#readme",
    "homepage": "https://github.com/hithereiamaliff/mcp-nextcloud",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/hithereiamaliff-mcp-nextcloud",
      "description": "A comprehensive Model Context Protocol (MCP) server that enables AI assistants to interact with yo…",
      "repository": {
        "url": "https://github.com/hithereiamaliff/mcp-nextcloud",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@hithereiamaliff/mcp-nextcloud/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-hjsh200219-pharminfo-mcp",
    "name": "ai.smithery/hjsh200219-pharminfo-mcp",
    "description": "Look up Korean drug ingredient and product data by HIRA component and product codes via Pilldoc. V…",
    "category": "ai",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/hjsh200219/pharminfo-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@hjsh200219/pharminfo-mcp/mcp",
    "documentationUrl": "https://github.com/hjsh200219/pharminfo-mcp#readme",
    "homepage": "https://github.com/hjsh200219/pharminfo-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/hjsh200219-pharminfo-mcp",
      "description": "Look up Korean drug ingredient and product data by HIRA component and product codes via Pilldoc. V…",
      "repository": {
        "url": "https://github.com/hjsh200219/pharminfo-mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@hjsh200219/pharminfo-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-hollaugo-financial-research-mcp-server",
    "name": "ai.smithery/hollaugo-financial-research-mcp-server",
    "description": "Analyze stocks with summaries, price targets, and analyst recommendations. Track SEC filings, divi…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/hollaugo/tutorials",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@hollaugo/financial-research-mcp-server/mcp",
    "documentationUrl": "https://github.com/hollaugo/tutorials#readme",
    "homepage": "https://github.com/hollaugo/tutorials",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/hollaugo-financial-research-mcp-server",
      "description": "Analyze stocks with summaries, price targets, and analyst recommendations. Track SEC filings, divi…",
      "repository": {
        "url": "https://github.com/hollaugo/tutorials",
        "source": "github",
        "subfolder": "smithery-example/financial-server"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@hollaugo/financial-research-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-hustcc-mcp-mermaid",
    "name": "ai.smithery/hustcc-mcp-mermaid",
    "description": "Generate dynamic Mermaid diagrams and charts with AI assistance. Customize styles and export diagr…",
    "category": "ai",
    "version": "0.1.3",
    "author": "ai.smithery",
    "repository": "https://github.com/hustcc/mcp-mermaid",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@hustcc/mcp-mermaid/mcp",
    "documentationUrl": "https://github.com/hustcc/mcp-mermaid#readme",
    "homepage": "https://github.com/hustcc/mcp-mermaid",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/hustcc-mcp-mermaid",
      "description": "Generate dynamic Mermaid diagrams and charts with AI assistance. Customize styles and export diagr…",
      "repository": {
        "url": "https://github.com/hustcc/mcp-mermaid",
        "source": "github"
      },
      "version": "0.1.3",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@hustcc/mcp-mermaid/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-huuthangntk-claude-vision-mcp-server",
    "name": "ai.smithery/huuthangntk-claude-vision-mcp-server",
    "description": "Analyze images from multiple angles to extract detailed insights or quick summaries. Describe visu…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/huuthangntk/claude-vision-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@huuthangntk/claude-vision-mcp-server/mcp",
    "documentationUrl": "https://github.com/huuthangntk/claude-vision-mcp-server#readme",
    "homepage": "https://github.com/huuthangntk/claude-vision-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/huuthangntk-claude-vision-mcp-server",
      "description": "Analyze images from multiple angles to extract detailed insights or quick summaries. Describe visu…",
      "repository": {
        "url": "https://github.com/huuthangntk/claude-vision-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@huuthangntk/claude-vision-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-infranodus-mcp-server-infranodus",
    "name": "ai.smithery/infranodus-mcp-server-infranodus",
    "description": "Map text into knowledge graphs to create a structured representation of conceptual relations and t…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/infranodus/mcp-server-infranodus",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@infranodus/mcp-server-infranodus/mcp",
    "documentationUrl": "https://github.com/infranodus/mcp-server-infranodus#readme",
    "homepage": "https://github.com/infranodus/mcp-server-infranodus",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/infranodus-mcp-server-infranodus",
      "description": "Map text into knowledge graphs to create a structured representation of conceptual relations and t…",
      "repository": {
        "url": "https://github.com/infranodus/mcp-server-infranodus",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@infranodus/mcp-server-infranodus/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-isnow890-data4library-mcp",
    "name": "ai.smithery/isnow890-data4library-mcp",
    "description": "책 싫어하는 제가 책에 대해 아는척하고 싶어서 만들었습니다.. 내 주변 도서관 실시간 대출 확인 읽고 싶은 책을 검색하면 주변 도서관 대출 가능 여부를 즉시 확인 굳이 도서관…",
    "category": "ai",
    "version": "1.0.5",
    "author": "ai.smithery",
    "repository": "https://github.com/isnow890/data4library-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@isnow890/data4library-mcp/mcp",
    "documentationUrl": "https://github.com/isnow890/data4library-mcp#readme",
    "homepage": "https://github.com/isnow890/data4library-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/isnow890-data4library-mcp",
      "description": "책 싫어하는 제가 책에 대해 아는척하고 싶어서 만들었습니다.. 내 주변 도서관 실시간 대출 확인 읽고 싶은 책을 검색하면 주변 도서관 대출 가능 여부를 즉시 확인 굳이 도서관…",
      "repository": {
        "url": "https://github.com/isnow890/data4library-mcp",
        "source": "github"
      },
      "version": "1.0.5",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@isnow890/data4library-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-jekakos-mcp-user-data-enrichment",
    "name": "ai.smithery/jekakos-mcp-user-data-enrichment",
    "description": "Enrich user data by adding social network links based on provided personal information. Integrate…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/jekakos/mcp-user-data-enrichment",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@jekakos/mcp-user-data-enrichment/mcp",
    "documentationUrl": "https://github.com/jekakos/mcp-user-data-enrichment#readme",
    "homepage": "https://github.com/jekakos/mcp-user-data-enrichment",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/jekakos-mcp-user-data-enrichment",
      "description": "Enrich user data by adding social network links based on provided personal information. Integrate…",
      "repository": {
        "url": "https://github.com/jekakos/mcp-user-data-enrichment",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@jekakos/mcp-user-data-enrichment/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-jenniferjiang0511-mit-ai-studio-hw3",
    "name": "ai.smithery/jenniferjiang0511-mit-ai-studio-hw3",
    "description": "Greet people by name and check local forecasts and weather alerts across the U.S. Switch to a play…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/jenniferjiang0511/MIT-AI-studio-HW3",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@jenniferjiang0511/mit-ai-studio-hw3/mcp",
    "documentationUrl": "https://github.com/jenniferjiang0511/MIT-AI-studio-HW3#readme",
    "homepage": "https://github.com/jenniferjiang0511/MIT-AI-studio-HW3",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/jenniferjiang0511-mit-ai-studio-hw3",
      "description": "Greet people by name and check local forecasts and weather alerts across the U.S. Switch to a play…",
      "repository": {
        "url": "https://github.com/jenniferjiang0511/MIT-AI-studio-HW3",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@jenniferjiang0511/mit-ai-studio-hw3/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-jessicayanwang-test",
    "name": "ai.smithery/jessicayanwang-test",
    "description": "Fetch latest and historical currency exchange rates from Frankfurter. Convert amounts between curr…",
    "category": "ai",
    "version": "1.13.1",
    "author": "ai.smithery",
    "repository": "https://github.com/jessicayanwang/frankfurtermcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@jessicayanwang/test/mcp",
    "documentationUrl": "https://github.com/jessicayanwang/frankfurtermcp#readme",
    "homepage": "https://github.com/jessicayanwang/frankfurtermcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/jessicayanwang-test",
      "description": "Fetch latest and historical currency exchange rates from Frankfurter. Convert amounts between curr…",
      "repository": {
        "url": "https://github.com/jessicayanwang/frankfurtermcp",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@jessicayanwang/test/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-jirispilka-actors-mcp-server",
    "name": "ai.smithery/jirispilka-actors-mcp-server",
    "description": "Greet anyone by name with friendly, personalized messages. Explore the origin of Hello, World thro…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/jirispilka/actors-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@jirispilka/actors-mcp-server/mcp",
    "documentationUrl": "https://github.com/jirispilka/actors-mcp-server#readme",
    "homepage": "https://github.com/jirispilka/actors-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/jirispilka-actors-mcp-server",
      "description": "Greet anyone by name with friendly, personalized messages. Explore the origin of Hello, World thro…",
      "repository": {
        "url": "https://github.com/jirispilka/actors-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@jirispilka/actors-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-jjlabsio-korea-stock-mcp",
    "name": "ai.smithery/jjlabsio-korea-stock-mcp",
    "description": "Search company disclosures and financial statements from the Korean market. Retrieve stock profile…",
    "category": "filesystem",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/jjlabsio/korea-stock-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@jjlabsio/korea-stock-mcp/mcp",
    "documentationUrl": "https://github.com/jjlabsio/korea-stock-mcp#readme",
    "homepage": "https://github.com/jjlabsio/korea-stock-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/jjlabsio-korea-stock-mcp",
      "description": "Search company disclosures and financial statements from the Korean market. Retrieve stock profile…",
      "repository": {
        "url": "https://github.com/jjlabsio/korea-stock-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@jjlabsio/korea-stock-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-jweingardt12-mlb_mcp",
    "name": "ai.smithery/jweingardt12-mlb_mcp",
    "description": "Provides easy access to MLB, Baseball Savant, Statcast, and Fangraphs baseball data. Query detaile…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@jweingardt12/mlb_mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/jweingardt12-mlb_mcp",
      "description": "Provides easy access to MLB, Baseball Savant, Statcast, and Fangraphs baseball data. Query detaile…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@jweingardt12/mlb_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-kaszek-kaszek-attio-mcp",
    "name": "ai.smithery/kaszek-kaszek-attio-mcp",
    "description": "Automate Attio CRM workflows with fast search and bulk operations across companies, people, deals,…",
    "category": "ai",
    "version": "0.2.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@kaszek/kaszek-attio-mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/kaszek-kaszek-attio-mcp",
      "description": "Automate Attio CRM workflows with fast search and bulk operations across companies, people, deals,…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kaszek/kaszek-attio-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-keithah-hostex-mcp",
    "name": "ai.smithery/keithah-hostex-mcp",
    "description": "Manage your Hostex vacation rentals—properties, reservations, availability, listings, and guest me…",
    "category": "ai",
    "version": "0.2.0",
    "author": "ai.smithery",
    "repository": "https://github.com/keithah/hostex-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@keithah/hostex-mcp/mcp",
    "documentationUrl": "https://github.com/keithah/hostex-mcp#readme",
    "homepage": "https://github.com/keithah/hostex-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/keithah-hostex-mcp",
      "description": "Manage your Hostex vacation rentals—properties, reservations, availability, listings, and guest me…",
      "repository": {
        "url": "https://github.com/keithah/hostex-mcp",
        "source": "github"
      },
      "version": "0.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@keithah/hostex-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-keithah-tessie-mcp",
    "name": "ai.smithery/keithah-tessie-mcp",
    "description": "Unofficial integration! ## ✨ Key Features ### 💰 Financial Intelligence - **Smart Charging Cost An…",
    "category": "ai",
    "version": "1.1.1",
    "author": "ai.smithery",
    "repository": "https://github.com/keithah/tessie-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@keithah/tessie-mcp/mcp",
    "documentationUrl": "https://github.com/keithah/tessie-mcp#readme",
    "homepage": "https://github.com/keithah/tessie-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/keithah-tessie-mcp",
      "description": "Unofficial integration! ## ✨ Key Features ### 💰 Financial Intelligence - **Smart Charging Cost An…",
      "repository": {
        "url": "https://github.com/keithah/tessie-mcp",
        "source": "github"
      },
      "version": "1.1.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@keithah/tessie-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-keremurat-json",
    "name": "ai.smithery/keremurat-json",
    "description": "Compare two JSON files deeply without worrying about key or array order. Detect missing, extra, an…",
    "category": "filesystem",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/keremurat/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@keremurat/json/mcp",
    "documentationUrl": "https://github.com/keremurat/mcp#readme",
    "homepage": "https://github.com/keremurat/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/keremurat-json",
      "description": "Compare two JSON files deeply without worrying about key or array order. Detect missing, extra, an…",
      "repository": {
        "url": "https://github.com/keremurat/mcp",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@keremurat/json/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-keremurat-jsonmcp",
    "name": "ai.smithery/keremurat-jsonmcp",
    "description": "Compare two JSON files deeply, ignoring order, to surface every difference. Get a clear, structure…",
    "category": "filesystem",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/keremurat/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@keremurat/jsonmcp/mcp",
    "documentationUrl": "https://github.com/keremurat/mcp#readme",
    "homepage": "https://github.com/keremurat/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/keremurat-jsonmcp",
      "description": "Compare two JSON files deeply, ignoring order, to surface every difference. Get a clear, structure…",
      "repository": {
        "url": "https://github.com/keremurat/mcp",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@keremurat/jsonmcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-keremurat-mcp",
    "name": "ai.smithery/keremurat-mcp",
    "description": "Compare two JSON files deeply, regardless of order. Get a detailed difference report highlighting…",
    "category": "filesystem",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/keremurat/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@keremurat/mcp/mcp",
    "documentationUrl": "https://github.com/keremurat/mcp#readme",
    "homepage": "https://github.com/keremurat/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/keremurat-mcp",
      "description": "Compare two JSON files deeply, regardless of order. Get a detailed difference report highlighting…",
      "repository": {
        "url": "https://github.com/keremurat/mcp",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@keremurat/mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-kesslerio-attio-mcp-server",
    "name": "ai.smithery/kesslerio-attio-mcp-server",
    "description": "Connect AI to your Attio CRM. Manage contacts, companies, deals, and sales pipelines. Create tasks…",
    "category": "ai",
    "version": "1.1.1",
    "author": "ai.smithery",
    "repository": "https://github.com/kesslerio/attio-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@kesslerio/attio-mcp-server/mcp",
    "documentationUrl": "https://github.com/kesslerio/attio-mcp-server#readme",
    "homepage": "https://github.com/kesslerio/attio-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/kesslerio-attio-mcp-server",
      "description": "Connect AI to your Attio CRM. Manage contacts, companies, deals, and sales pipelines. Create tasks…",
      "repository": {
        "url": "https://github.com/kesslerio/attio-mcp-server",
        "source": "github"
      },
      "version": "1.1.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kesslerio/attio-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-kesslerio-attio-mcp-server-beta",
    "name": "ai.smithery/kesslerio-attio-mcp-server-beta",
    "description": "Streamline your Attio workflows using natural language to search, create, update, and organize com…",
    "category": "ai",
    "version": "1.1.1",
    "author": "ai.smithery",
    "repository": "https://github.com/kesslerio/attio-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@kesslerio/attio-mcp-server-beta/mcp",
    "documentationUrl": "https://github.com/kesslerio/attio-mcp-server#readme",
    "homepage": "https://github.com/kesslerio/attio-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/kesslerio-attio-mcp-server-beta",
      "description": "Streamline your Attio workflows using natural language to search, create, update, and organize com…",
      "repository": {
        "url": "https://github.com/kesslerio/attio-mcp-server",
        "source": "github"
      },
      "version": "1.1.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kesslerio/attio-mcp-server-beta/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-kirbah-mcp-youtube",
    "name": "ai.smithery/kirbah-mcp-youtube",
    "description": "Provide token-optimized, structured YouTube data to enhance your LLM applications. Access efficien…",
    "category": "ai",
    "version": "0.2.6",
    "author": "ai.smithery",
    "repository": "https://github.com/kirbah/mcp-youtube",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@kirbah/mcp-youtube/mcp",
    "documentationUrl": "https://github.com/kirbah/mcp-youtube#readme",
    "homepage": "https://github.com/kirbah/mcp-youtube",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/kirbah-mcp-youtube",
      "description": "Provide token-optimized, structured YouTube data to enhance your LLM applications. Access efficien…",
      "repository": {
        "url": "https://github.com/kirbah/mcp-youtube",
        "source": "github"
      },
      "version": "0.2.6",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kirbah/mcp-youtube/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-kkjdaniel-bgg-mcp",
    "name": "ai.smithery/kkjdaniel-bgg-mcp",
    "description": "BGG MCP provides access to the BoardGameGeek API through the Model Context Protocol, enabling retr…",
    "category": "ai",
    "version": "1.3.2",
    "author": "ai.smithery",
    "repository": "https://github.com/kkjdaniel/bgg-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@kkjdaniel/bgg-mcp/mcp",
    "documentationUrl": "https://github.com/kkjdaniel/bgg-mcp#readme",
    "homepage": "https://github.com/kkjdaniel/bgg-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/kkjdaniel-bgg-mcp",
      "description": "BGG MCP provides access to the BoardGameGeek API through the Model Context Protocol, enabling retr…",
      "repository": {
        "url": "https://github.com/kkjdaniel/bgg-mcp",
        "source": "github"
      },
      "version": "1.3.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kkjdaniel/bgg-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-kodey-ai-mapwise-mcp",
    "name": "ai.smithery/kodey-ai-mapwise-mcp",
    "description": "Send friendly, personalized greetings on demand. Generate quick salutations with a simple prompt.…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@kodey-ai/mapwise-mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/kodey-ai-mapwise-mcp",
      "description": "Send friendly, personalized greetings on demand. Generate quick salutations with a simple prompt.…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kodey-ai/mapwise-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-kodey-ai-salesforce-mcp",
    "name": "ai.smithery/kodey-ai-salesforce-mcp",
    "description": "Run SOQL queries to explore and retrieve Salesforce data. Inspect records, fields, and relationshi…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/kodey-ai/salesforce-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@kodey-ai/salesforce-mcp/mcp",
    "documentationUrl": "https://github.com/kodey-ai/salesforce-mcp#readme",
    "homepage": "https://github.com/kodey-ai/salesforce-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/kodey-ai-salesforce-mcp",
      "description": "Run SOQL queries to explore and retrieve Salesforce data. Inspect records, fields, and relationshi…",
      "repository": {
        "url": "https://github.com/kodey-ai/salesforce-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kodey-ai/salesforce-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-kodey-ai-salesforce-mcp-kodey",
    "name": "ai.smithery/kodey-ai-salesforce-mcp-kodey",
    "description": "Run SOQL queries against your Salesforce org to explore and retrieve data. Quickly iterate on filt…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/kodey-ai/salesforce-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@kodey-ai/salesforce-mcp-kodey/mcp",
    "documentationUrl": "https://github.com/kodey-ai/salesforce-mcp#readme",
    "homepage": "https://github.com/kodey-ai/salesforce-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/kodey-ai-salesforce-mcp-kodey",
      "description": "Run SOQL queries against your Salesforce org to explore and retrieve data. Quickly iterate on filt…",
      "repository": {
        "url": "https://github.com/kodey-ai/salesforce-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kodey-ai/salesforce-mcp-kodey/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-kodey-ai-salesforce-mcp-minimal",
    "name": "ai.smithery/kodey-ai-salesforce-mcp-minimal",
    "description": "Run SOQL queries to explore and retrieve Salesforce data. Access accounts, contacts, opportunities…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/kodey-ai/salesforce-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@kodey-ai/salesforce-mcp-minimal/mcp",
    "documentationUrl": "https://github.com/kodey-ai/salesforce-mcp#readme",
    "homepage": "https://github.com/kodey-ai/salesforce-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/kodey-ai-salesforce-mcp-minimal",
      "description": "Run SOQL queries to explore and retrieve Salesforce data. Access accounts, contacts, opportunities…",
      "repository": {
        "url": "https://github.com/kodey-ai/salesforce-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kodey-ai/salesforce-mcp-minimal/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-kodey-ai-salesforce-mcp-server",
    "name": "ai.smithery/kodey-ai-salesforce-mcp-server",
    "description": "Run SOQL queries against your Salesforce org to retrieve records and insights. Explore objects, fi…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/kodey-ai/salesforce-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@kodey-ai/salesforce-mcp-server/mcp",
    "documentationUrl": "https://github.com/kodey-ai/salesforce-mcp#readme",
    "homepage": "https://github.com/kodey-ai/salesforce-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/kodey-ai-salesforce-mcp-server",
      "description": "Run SOQL queries against your Salesforce org to retrieve records and insights. Explore objects, fi…",
      "repository": {
        "url": "https://github.com/kodey-ai/salesforce-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kodey-ai/salesforce-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-kwp-lab-rss-reader-mcp",
    "name": "ai.smithery/kwp-lab-rss-reader-mcp",
    "description": "Track and browse RSS feeds with ease. Fetch the latest entries from any feed URL and extract full…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/kwp-lab/rss-reader-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@kwp-lab/rss-reader-mcp/mcp",
    "documentationUrl": "https://github.com/kwp-lab/rss-reader-mcp#readme",
    "homepage": "https://github.com/kwp-lab/rss-reader-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/kwp-lab-rss-reader-mcp",
      "description": "Track and browse RSS feeds with ease. Fetch the latest entries from any feed URL and extract full…",
      "repository": {
        "url": "https://github.com/kwp-lab/rss-reader-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kwp-lab/rss-reader-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-leandrogavidia-vechain-mcp-server",
    "name": "ai.smithery/leandrogavidia-vechain-mcp-server",
    "description": "Search VeChain documentation, query on-chain data, and fetch fee suggestions with direct links to…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/leandrogavidia/vechain-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@leandrogavidia/vechain-mcp-server/mcp",
    "documentationUrl": "https://github.com/leandrogavidia/vechain-mcp-server#readme",
    "homepage": "https://github.com/leandrogavidia/vechain-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/leandrogavidia-vechain-mcp-server",
      "description": "Search VeChain documentation, query on-chain data, and fetch fee suggestions with direct links to…",
      "repository": {
        "url": "https://github.com/leandrogavidia/vechain-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@leandrogavidia/vechain-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-lineex-pubmed-mcp-smithery",
    "name": "ai.smithery/lineex-pubmed-mcp-smithery",
    "description": "Search PubMed with precision using keyword and journal filters and smart sorting. Uncover MeSH ter…",
    "category": "ai",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/lineex/pubmed-mcp-smithery",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@lineex/pubmed-mcp-smithery/mcp",
    "documentationUrl": "https://github.com/lineex/pubmed-mcp-smithery#readme",
    "homepage": "https://github.com/lineex/pubmed-mcp-smithery",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/lineex-pubmed-mcp-smithery",
      "description": "Search PubMed with precision using keyword and journal filters and smart sorting. Uncover MeSH ter…",
      "repository": {
        "url": "https://github.com/lineex/pubmed-mcp-smithery",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@lineex/pubmed-mcp-smithery/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-lukaskostka99-marketing-miner-mcp",
    "name": "ai.smithery/lukaskostka99-marketing-miner-mcp",
    "description": "Discover high-impact keyword ideas across Central and Eastern European and English markets. Analyz…",
    "category": "ai",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/lukaskostka99/marketing-miner-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@lukaskostka99/marketing-miner-mcp/mcp",
    "documentationUrl": "https://github.com/lukaskostka99/marketing-miner-mcp#readme",
    "homepage": "https://github.com/lukaskostka99/marketing-miner-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/lukaskostka99-marketing-miner-mcp",
      "description": "Discover high-impact keyword ideas across Central and Eastern European and English markets. Analyz…",
      "repository": {
        "url": "https://github.com/lukaskostka99/marketing-miner-mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@lukaskostka99/marketing-miner-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-luminati-io-brightdata-mcp",
    "name": "ai.smithery/luminati-io-brightdata-mcp",
    "description": "One MCP for the Web. Easily search, crawl, navigate, and extract websites without getting blocked.…",
    "category": "web",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/brightdata/brightdata-mcp-sse",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@luminati-io/brightdata-mcp/mcp",
    "documentationUrl": "https://github.com/brightdata/brightdata-mcp-sse#readme",
    "homepage": "https://github.com/brightdata/brightdata-mcp-sse",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/luminati-io-brightdata-mcp",
      "description": "One MCP for the Web. Easily search, crawl, navigate, and extract websites without getting blocked.…",
      "repository": {
        "url": "https://github.com/brightdata/brightdata-mcp-sse",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@luminati-io/brightdata-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-magenie33-quality-dimension-generator",
    "name": "ai.smithery/magenie33-quality-dimension-generator",
    "description": "Generate tailored quality criteria and scoring guides from your task descriptions. Refine objectiv…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/magenie33/quality-dimension-generator",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@magenie33/quality-dimension-generator/mcp",
    "documentationUrl": "https://github.com/magenie33/quality-dimension-generator#readme",
    "homepage": "https://github.com/magenie33/quality-dimension-generator",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/magenie33-quality-dimension-generator",
      "description": "Generate tailored quality criteria and scoring guides from your task descriptions. Refine objectiv…",
      "repository": {
        "url": "https://github.com/magenie33/quality-dimension-generator",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@magenie33/quality-dimension-generator/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-mayla-debug-mcp-google-calendar2",
    "name": "ai.smithery/mayla-debug-mcp-google-calendar2",
    "description": "Schedule and manage Google Calendar events directly from your workspace. Check availability, view…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/mayla-debug/mcp-google-calendar2",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@mayla-debug/mcp-google-calendar2/mcp",
    "documentationUrl": "https://github.com/mayla-debug/mcp-google-calendar2#readme",
    "homepage": "https://github.com/mayla-debug/mcp-google-calendar2",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/mayla-debug-mcp-google-calendar2",
      "description": "Schedule and manage Google Calendar events directly from your workspace. Check availability, view…",
      "repository": {
        "url": "https://github.com/mayla-debug/mcp-google-calendar2",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@mayla-debug/mcp-google-calendar2/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-mfukushim-map-traveler-mcp",
    "name": "ai.smithery/mfukushim-map-traveler-mcp",
    "description": "Create immersive travel experiences by instructing an avatar to navigate Google Maps. Report on th…",
    "category": "ai",
    "version": "0.2.0",
    "author": "ai.smithery",
    "repository": "https://github.com/mfukushim/map-traveler-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@mfukushim/map-traveler-mcp/mcp",
    "documentationUrl": "https://github.com/mfukushim/map-traveler-mcp#readme",
    "homepage": "https://github.com/mfukushim/map-traveler-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/mfukushim-map-traveler-mcp",
      "description": "Create immersive travel experiences by instructing an avatar to navigate Google Maps. Report on th…",
      "repository": {
        "url": "https://github.com/mfukushim/map-traveler-mcp",
        "source": "github"
      },
      "version": "0.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@mfukushim/map-traveler-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-miguelgarzons-mcp-cun",
    "name": "ai.smithery/miguelgarzons-mcp-cun",
    "description": "Greet people by name with friendly, personalized messages. Add a warm touch to onboarding, demos,…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/miguelgarzons/mcp-cun",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@miguelgarzons/mcp-cun/mcp",
    "documentationUrl": "https://github.com/miguelgarzons/mcp-cun#readme",
    "homepage": "https://github.com/miguelgarzons/mcp-cun",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/miguelgarzons-mcp-cun",
      "description": "Greet people by name with friendly, personalized messages. Add a warm touch to onboarding, demos,…",
      "repository": {
        "url": "https://github.com/miguelgarzons/mcp-cun",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@miguelgarzons/mcp-cun/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-minionszyw-bazi",
    "name": "ai.smithery/minionszyw-bazi",
    "description": "Generate BaZi charts from birth details. Explore Four Pillars, solar terms, and Luck Pillars for d…",
    "category": "ai",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/minionszyw/bazi",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@minionszyw/bazi/mcp",
    "documentationUrl": "https://github.com/minionszyw/bazi#readme",
    "homepage": "https://github.com/minionszyw/bazi",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/minionszyw-bazi",
      "description": "Generate BaZi charts from birth details. Explore Four Pillars, solar terms, and Luck Pillars for d…",
      "repository": {
        "url": "https://github.com/minionszyw/bazi",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@minionszyw/bazi/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-mjucius-cozi_mcp",
    "name": "ai.smithery/mjucius-cozi_mcp",
    "description": "Manage your family's calendars and lists in Cozi. View, create, and update appointments; organize…",
    "category": "ai",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/mjucius/cozi_mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@mjucius/cozi_mcp/mcp",
    "documentationUrl": "https://github.com/mjucius/cozi_mcp#readme",
    "homepage": "https://github.com/mjucius/cozi_mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/mjucius-cozi_mcp",
      "description": "Manage your family's calendars and lists in Cozi. View, create, and update appointments; organize…",
      "repository": {
        "url": "https://github.com/mjucius/cozi_mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@mjucius/cozi_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-morosss-sdfsdf",
    "name": "ai.smithery/morosss-sdfsdf",
    "description": "Find academic papers across major sources like arXiv, PubMed, bioRxiv, and more. Download PDFs whe…",
    "category": "ai",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/morosss/sdfsdf",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@morosss/sdfsdf/mcp",
    "documentationUrl": "https://github.com/morosss/sdfsdf#readme",
    "homepage": "https://github.com/morosss/sdfsdf",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/morosss-sdfsdf",
      "description": "Find academic papers across major sources like arXiv, PubMed, bioRxiv, and more. Download PDFs whe…",
      "repository": {
        "url": "https://github.com/morosss/sdfsdf",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@morosss/sdfsdf/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-motorboy1-my-mcp-server",
    "name": "ai.smithery/motorboy1-my-mcp-server",
    "description": "Send friendly greetings by name. Discover the origin story of 'Hello, World' for quick context.",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/motorboy1/my-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@motorboy1/my-mcp-server/mcp",
    "documentationUrl": "https://github.com/motorboy1/my-mcp-server#readme",
    "homepage": "https://github.com/motorboy1/my-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/motorboy1-my-mcp-server",
      "description": "Send friendly greetings by name. Discover the origin story of 'Hello, World' for quick context.",
      "repository": {
        "url": "https://github.com/motorboy1/my-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@motorboy1/my-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-mrugankpednekar-bill_splitter_mcp",
    "name": "ai.smithery/mrugankpednekar-bill_splitter_mcp",
    "description": "Track and split shared expenses across trips, events, and groups. Create groups, add expenses, and…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/mrugankpednekar/bill_splitter_mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@mrugankpednekar/bill_splitter_mcp/mcp",
    "documentationUrl": "https://github.com/mrugankpednekar/bill_splitter_mcp#readme",
    "homepage": "https://github.com/mrugankpednekar/bill_splitter_mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/mrugankpednekar-bill_splitter_mcp",
      "description": "Track and split shared expenses across trips, events, and groups. Create groups, add expenses, and…",
      "repository": {
        "url": "https://github.com/mrugankpednekar/bill_splitter_mcp",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@mrugankpednekar/bill_splitter_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-mrugankpednekar-mcp-optimizer",
    "name": "ai.smithery/mrugankpednekar-mcp-optimizer",
    "description": "Optimize crew and workforce schedules, resource allocation, and routing with linear and mixed-inte…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/mrugankpednekar/mcp-optimizer",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@mrugankpednekar/mcp-optimizer/mcp",
    "documentationUrl": "https://github.com/mrugankpednekar/mcp-optimizer#readme",
    "homepage": "https://github.com/mrugankpednekar/mcp-optimizer",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/mrugankpednekar-mcp-optimizer",
      "description": "Optimize crew and workforce schedules, resource allocation, and routing with linear and mixed-inte…",
      "repository": {
        "url": "https://github.com/mrugankpednekar/mcp-optimizer",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@mrugankpednekar/mcp-optimizer/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-neverinfamous-memory-journal-mcp",
    "name": "ai.smithery/neverinfamous-memory-journal-mcp",
    "description": "A MCP server built for developers enabling Git based project management with project and personal…",
    "category": "version-control",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/neverinfamous/memory-journal-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@neverinfamous/memory-journal-mcp/mcp",
    "documentationUrl": "https://github.com/neverinfamous/memory-journal-mcp#readme",
    "homepage": "https://github.com/neverinfamous/memory-journal-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/neverinfamous-memory-journal-mcp",
      "description": "A MCP server built for developers enabling Git based project management with project and personal…",
      "repository": {
        "url": "https://github.com/neverinfamous/memory-journal-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@neverinfamous/memory-journal-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-nickthelegend-test-mcp",
    "name": "ai.smithery/nickthelegend-test-mcp",
    "description": "Create friendly, personalized greetings in seconds. Toggle Pirate Mode to speak like a pirate for…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@nickthelegend/test-mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/nickthelegend-test-mcp",
      "description": "Create friendly, personalized greetings in seconds. Toggle Pirate Mode to speak like a pirate for…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@nickthelegend/test-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-oxylabs-oxylabs-mcp",
    "name": "ai.smithery/oxylabs-oxylabs-mcp",
    "description": "Fetch and process content from specified URLs using the Oxylabs Web Scraper API.",
    "category": "web",
    "version": "1.13.1",
    "author": "ai.smithery",
    "repository": "https://github.com/oxylabs/oxylabs-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@oxylabs/oxylabs-mcp/mcp",
    "documentationUrl": "https://github.com/oxylabs/oxylabs-mcp#readme",
    "homepage": "https://github.com/oxylabs/oxylabs-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/oxylabs-oxylabs-mcp",
      "description": "Fetch and process content from specified URLs using the Oxylabs Web Scraper API.",
      "repository": {
        "url": "https://github.com/oxylabs/oxylabs-mcp",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@oxylabs/oxylabs-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-pinion05-supabase-mcp-lite",
    "name": "ai.smithery/pinion05-supabase-mcp-lite",
    "description": "Same functionality, consuming only 1/20 of the context window tokens.",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/pinion05/supabase-mcp-lite",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@pinion05/supabase-mcp-lite/mcp",
    "documentationUrl": "https://github.com/pinion05/supabase-mcp-lite#readme",
    "homepage": "https://github.com/pinion05/supabase-mcp-lite",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/pinion05-supabase-mcp-lite",
      "description": "Same functionality, consuming only 1/20 of the context window tokens.",
      "repository": {
        "url": "https://github.com/pinion05/supabase-mcp-lite",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@pinion05/supabase-mcp-lite/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-pinkpixel-dev-web-scout-mcp",
    "name": "ai.smithery/pinkpixel-dev-web-scout-mcp",
    "description": "Search the web and extract clean, readable text from webpages. Process multiple URLs at once to sp…",
    "category": "web",
    "version": "1.5.5",
    "author": "ai.smithery",
    "repository": "https://github.com/pinkpixel-dev/web-scout-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@pinkpixel-dev/web-scout-mcp/mcp",
    "documentationUrl": "https://github.com/pinkpixel-dev/web-scout-mcp#readme",
    "homepage": "https://github.com/pinkpixel-dev/web-scout-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/pinkpixel-dev-web-scout-mcp",
      "description": "Search the web and extract clean, readable text from webpages. Process multiple URLs at once to sp…",
      "repository": {
        "url": "https://github.com/pinkpixel-dev/web-scout-mcp",
        "source": "github"
      },
      "version": "1.5.5",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@pinkpixel-dev/web-scout-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-plainyogurt21-clintrials-mcp",
    "name": "ai.smithery/plainyogurt21-clintrials-mcp",
    "description": "Provide structured access to ClinicalTrials.gov data for searching, retrieving, and analyzing clin…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@plainyogurt21/clintrials-mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/plainyogurt21-clintrials-mcp",
      "description": "Provide structured access to ClinicalTrials.gov data for searching, retrieving, and analyzing clin…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@plainyogurt21/clintrials-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-plainyogurt21-sec-edgar-mcp",
    "name": "ai.smithery/plainyogurt21-sec-edgar-mcp",
    "description": "Provide AI assistants with real-time access to official SEC EDGAR filings and financial data. Enab…",
    "category": "ai",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/plainyogurt21/sec-edgar-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@plainyogurt21/sec-edgar-mcp/mcp",
    "documentationUrl": "https://github.com/plainyogurt21/sec-edgar-mcp#readme",
    "homepage": "https://github.com/plainyogurt21/sec-edgar-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/plainyogurt21-sec-edgar-mcp",
      "description": "Provide AI assistants with real-time access to official SEC EDGAR filings and financial data. Enab…",
      "repository": {
        "url": "https://github.com/plainyogurt21/sec-edgar-mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@plainyogurt21/sec-edgar-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-proflulab-documentassistant",
    "name": "ai.smithery/proflulab-documentassistant",
    "description": "Convert files between formats without quality loss. Speed up your workflow with fast, reliable con…",
    "category": "filesystem",
    "version": "1.14.1",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@proflulab/documentassistant/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/proflulab-documentassistant",
      "description": "Convert files between formats without quality loss. Speed up your workflow with fast, reliable con…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.14.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@proflulab/documentassistant/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-pythondev-pro-egw_writings_mcp_server",
    "name": "ai.smithery/pythondev-pro-egw_writings_mcp_server",
    "description": "Search Ellen G. White’s writings by keyword to surface relevant quotations. Retrieve exact passage…",
    "category": "ai",
    "version": "1.12.4",
    "author": "ai.smithery",
    "repository": "https://github.com/pythondev-pro/egw_writings_mcp_server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@pythondev-pro/egw_writings_mcp_server/mcp",
    "documentationUrl": "https://github.com/pythondev-pro/egw_writings_mcp_server#readme",
    "homepage": "https://github.com/pythondev-pro/egw_writings_mcp_server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/pythondev-pro-egw_writings_mcp_server",
      "description": "Search Ellen G. White’s writings by keyword to surface relevant quotations. Retrieve exact passage…",
      "repository": {
        "url": "https://github.com/pythondev-pro/egw_writings_mcp_server",
        "source": "github"
      },
      "version": "1.12.4",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@pythondev-pro/egw_writings_mcp_server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-rainbowgore-stealthee-mcp-tools",
    "name": "ai.smithery/rainbowgore-stealthee-mcp-tools",
    "description": "Spot pre-launch products before they trend. Search the web and tech sites, extract and parse pages…",
    "category": "web",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/rainbowgore/stealthee-MCP-tools",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@rainbowgore/stealthee-mcp-tools/mcp",
    "documentationUrl": "https://github.com/rainbowgore/stealthee-MCP-tools#readme",
    "homepage": "https://github.com/rainbowgore/stealthee-MCP-tools",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/rainbowgore-stealthee-mcp-tools",
      "description": "Spot pre-launch products before they trend. Search the web and tech sites, extract and parse pages…",
      "repository": {
        "url": "https://github.com/rainbowgore/stealthee-MCP-tools",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@rainbowgore/stealthee-mcp-tools/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-ramadasmr-networkcalc-mcp",
    "name": "ai.smithery/ramadasmr-networkcalc-mcp",
    "description": "Look up DNS information for any domain to troubleshoot issues and gather insights. Get fast, relia…",
    "category": "ai",
    "version": "1.13.0",
    "author": "ai.smithery",
    "repository": "https://github.com/ramadasmr/networkcalc-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@ramadasmr/networkcalc-mcp/mcp",
    "documentationUrl": "https://github.com/ramadasmr/networkcalc-mcp#readme",
    "homepage": "https://github.com/ramadasmr/networkcalc-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/ramadasmr-networkcalc-mcp",
      "description": "Look up DNS information for any domain to troubleshoot issues and gather insights. Get fast, relia…",
      "repository": {
        "url": "https://github.com/ramadasmr/networkcalc-mcp",
        "source": "github"
      },
      "version": "1.13.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ramadasmr/networkcalc-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-ref-tools-ref-tools-mcp",
    "name": "ai.smithery/ref-tools-ref-tools-mcp",
    "description": "Provide your AI coding tools with token-efficient access to up-to-date technical documentation for…",
    "category": "ai",
    "version": "3.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/ref-tools/ref-tools-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@ref-tools/ref-tools-mcp/mcp",
    "documentationUrl": "https://github.com/ref-tools/ref-tools-mcp#readme",
    "homepage": "https://github.com/ref-tools/ref-tools-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "ai.smithery/ref-tools-ref-tools-mcp",
      "description": "Provide your AI coding tools with token-efficient access to up-to-date technical documentation for…",
      "repository": {
        "url": "https://github.com/ref-tools/ref-tools-mcp",
        "source": "github"
      },
      "version": "3.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ref-tools/ref-tools-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-renCosta2025-context7fork",
    "name": "ai.smithery/renCosta2025-context7fork",
    "description": "Get up-to-date, version-specific documentation and code examples from official sources directly in…",
    "category": "ai",
    "version": "1.0.13",
    "author": "ai.smithery",
    "repository": "https://github.com/renCosta2025/context7fork",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@renCosta2025/context7fork/mcp",
    "documentationUrl": "https://github.com/renCosta2025/context7fork#readme",
    "homepage": "https://github.com/renCosta2025/context7fork",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/renCosta2025-context7fork",
      "description": "Get up-to-date, version-specific documentation and code examples from official sources directly in…",
      "repository": {
        "url": "https://github.com/renCosta2025/context7fork",
        "source": "github"
      },
      "version": "1.0.13",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@renCosta2025/context7fork/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-rfdez-pvpc-mcp-server",
    "name": "ai.smithery/rfdez-pvpc-mcp-server",
    "description": "Retrieve daily PVPC electricity tariffs for 2.0 TD consumers, published by Red Eléctrica.",
    "category": "ai",
    "version": "3.2.3",
    "author": "ai.smithery",
    "repository": "https://github.com/rfdez/pvpc-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@rfdez/pvpc-mcp-server/mcp",
    "documentationUrl": "https://github.com/rfdez/pvpc-mcp-server#readme",
    "homepage": "https://github.com/rfdez/pvpc-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/rfdez-pvpc-mcp-server",
      "description": "Retrieve daily PVPC electricity tariffs for 2.0 TD consumers, published by Red Eléctrica.",
      "repository": {
        "url": "https://github.com/rfdez/pvpc-mcp-server",
        "source": "github"
      },
      "version": "3.2.3",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@rfdez/pvpc-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-sachicali-discordmcp-suite",
    "name": "ai.smithery/sachicali-discordmcp-suite",
    "description": "Control your Discord community: send/read messages, manage channels and forums, and handle webhook…",
    "category": "web",
    "version": "1.2.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@sachicali/discordmcp-suite/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/sachicali-discordmcp-suite",
      "description": "Control your Discord community: send/read messages, manage channels and forums, and handle webhook…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@sachicali/discordmcp-suite/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-saidsef-mcp-github-pr-issue-analyser",
    "name": "ai.smithery/saidsef-mcp-github-pr-issue-analyser",
    "description": "A Model Context Protocol (MCP) application for automated GitHub PR analysis and issue management.…",
    "category": "version-control",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/saidsef/mcp-github-pr-issue-analyser",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@saidsef/mcp-github-pr-issue-analyser/mcp",
    "documentationUrl": "https://github.com/saidsef/mcp-github-pr-issue-analyser#readme",
    "homepage": "https://github.com/saidsef/mcp-github-pr-issue-analyser",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/saidsef-mcp-github-pr-issue-analyser",
      "description": "A Model Context Protocol (MCP) application for automated GitHub PR analysis and issue management.…",
      "repository": {
        "url": "https://github.com/saidsef/mcp-github-pr-issue-analyser",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@saidsef/mcp-github-pr-issue-analyser/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-samihalawa-whatsapp-go-mcp",
    "name": "ai.smithery/samihalawa-whatsapp-go-mcp",
    "description": "Scan QR codes and go! No more troublesome autos or APIs! Send text messages, images, links, locati…",
    "category": "ai",
    "version": "v7.5.0",
    "author": "ai.smithery",
    "repository": "https://github.com/samihalawa/whatsapp-go-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@samihalawa/whatsapp-go-mcp/mcp",
    "documentationUrl": "https://github.com/samihalawa/whatsapp-go-mcp#readme",
    "homepage": "https://github.com/samihalawa/whatsapp-go-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/samihalawa-whatsapp-go-mcp",
      "description": "Scan QR codes and go! No more troublesome autos or APIs! Send text messages, images, links, locati…",
      "repository": {
        "url": "https://github.com/samihalawa/whatsapp-go-mcp",
        "source": "github"
      },
      "version": "v7.5.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@samihalawa/whatsapp-go-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-sasabasara-where_is_my_bus_mcp",
    "name": "ai.smithery/sasabasara-where_is_my_bus_mcp",
    "description": "Get real-time NYC bus arrivals, live vehicle locations, and service alerts. Plan trips between any…",
    "category": "ai",
    "version": "2.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@sasabasara/where_is_my_bus_mcp/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/sasabasara-where_is_my_bus_mcp",
      "description": "Get real-time NYC bus arrivals, live vehicle locations, and service alerts. Plan trips between any…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@sasabasara/where_is_my_bus_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-sebastianall1977-gmail-mcp",
    "name": "ai.smithery/sebastianall1977-gmail-mcp",
    "description": "Manage Gmail end-to-end: search, read, send, draft, label, and organize threads. Automate workflow…",
    "category": "ai",
    "version": "1.7.4",
    "author": "ai.smithery",
    "repository": "https://github.com/sebastianall1977/gmail-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@sebastianall1977/gmail-mcp/mcp",
    "documentationUrl": "https://github.com/sebastianall1977/gmail-mcp#readme",
    "homepage": "https://github.com/sebastianall1977/gmail-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/sebastianall1977-gmail-mcp",
      "description": "Manage Gmail end-to-end: search, read, send, draft, label, and organize threads. Automate workflow…",
      "repository": {
        "url": "https://github.com/sebastianall1977/gmail-mcp",
        "source": "github"
      },
      "version": "1.7.4",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@sebastianall1977/gmail-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-serkan-ozal-driflyte-mcp-server",
    "name": "ai.smithery/serkan-ozal-driflyte-mcp-server",
    "description": "Discover available topics and explore up-to-date, topic-tagged web content. Search to surface the…",
    "category": "web",
    "version": "0.1.15",
    "author": "ai.smithery",
    "repository": "https://github.com/serkan-ozal/driflyte-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@serkan-ozal/driflyte-mcp-server/mcp",
    "documentationUrl": "https://github.com/serkan-ozal/driflyte-mcp-server#readme",
    "homepage": "https://github.com/serkan-ozal/driflyte-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/serkan-ozal-driflyte-mcp-server",
      "description": "Discover available topics and explore up-to-date, topic-tagged web content. Search to surface the…",
      "repository": {
        "url": "https://github.com/serkan-ozal/driflyte-mcp-server",
        "source": "github"
      },
      "version": "0.1.15",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@serkan-ozal/driflyte-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-shoumikdc-arxiv-mcp",
    "name": "ai.smithery/shoumikdc-arxiv-mcp",
    "description": "Discover the latest arXiv papers by category and keyword. Control how many results you get to spee…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/shoumikdc/arXiv-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@shoumikdc/arxiv-mcp/mcp",
    "documentationUrl": "https://github.com/shoumikdc/arXiv-mcp#readme",
    "homepage": "https://github.com/shoumikdc/arXiv-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/shoumikdc-arxiv-mcp",
      "description": "Discover the latest arXiv papers by category and keyword. Control how many results you get to spee…",
      "repository": {
        "url": "https://github.com/shoumikdc/arXiv-mcp",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@shoumikdc/arxiv-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-skr-cloudify-clickup-mcp-server-new",
    "name": "ai.smithery/skr-cloudify-clickup-mcp-server-new",
    "description": "Manage your ClickUp workspace by creating, updating, and organizing tasks, lists, folders, and tag…",
    "category": "cloud",
    "version": "0.8.5",
    "author": "ai.smithery",
    "repository": "https://github.com/skr-cloudify/clickup-mcp-server-new",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@skr-cloudify/clickup-mcp-server-new/mcp",
    "documentationUrl": "https://github.com/skr-cloudify/clickup-mcp-server-new#readme",
    "homepage": "https://github.com/skr-cloudify/clickup-mcp-server-new",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/skr-cloudify-clickup-mcp-server-new",
      "description": "Manage your ClickUp workspace by creating, updating, and organizing tasks, lists, folders, and tag…",
      "repository": {
        "url": "https://github.com/skr-cloudify/clickup-mcp-server-new",
        "source": "github"
      },
      "version": "0.8.5",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@skr-cloudify/clickup-mcp-server-new/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-slhad-aha-mcp",
    "name": "ai.smithery/slhad-aha-mcp",
    "description": "A TypeScript MCP server for Home Assistant, enabling programmatic management of entities, automati…",
    "category": "ai",
    "version": "0.1.0",
    "author": "ai.smithery",
    "repository": "https://github.com/slhad/aha-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@slhad/aha-mcp/mcp",
    "documentationUrl": "https://github.com/slhad/aha-mcp#readme",
    "homepage": "https://github.com/slhad/aha-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/slhad-aha-mcp",
      "description": "A TypeScript MCP server for Home Assistant, enabling programmatic management of entities, automati…",
      "repository": {
        "url": "https://github.com/slhad/aha-mcp",
        "source": "github"
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@slhad/aha-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-smithery-ai-cookbook-python-quickstart",
    "name": "ai.smithery/smithery-ai-cookbook-python-quickstart",
    "description": "A simple MCP server built with FastMCP and python",
    "category": "ai",
    "version": "1.13.1",
    "author": "ai.smithery",
    "repository": "https://github.com/smithery-ai/smithery-cookbook",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@smithery-ai/cookbook-python-quickstart/mcp",
    "documentationUrl": "https://github.com/smithery-ai/smithery-cookbook#readme",
    "homepage": "https://github.com/smithery-ai/smithery-cookbook",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/smithery-ai-cookbook-python-quickstart",
      "description": "A simple MCP server built with FastMCP and python",
      "repository": {
        "url": "https://github.com/smithery-ai/smithery-cookbook",
        "source": "github",
        "subfolder": "servers/python/quickstart"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/cookbook-python-quickstart/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-smithery-ai-cookbook-ts-smithery-cli",
    "name": "ai.smithery/smithery-ai-cookbook-ts-smithery-cli",
    "description": "A simple Typescript MCP server built using the official MCP Typescript SDK and smithery/cli. This…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/smithery-ai/smithery-cookbook",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@smithery-ai/cookbook-ts-smithery-cli/mcp",
    "documentationUrl": "https://github.com/smithery-ai/smithery-cookbook#readme",
    "homepage": "https://github.com/smithery-ai/smithery-cookbook",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/smithery-ai-cookbook-ts-smithery-cli",
      "description": "A simple Typescript MCP server built using the official MCP Typescript SDK and smithery/cli. This…",
      "repository": {
        "url": "https://github.com/smithery-ai/smithery-cookbook",
        "source": "github",
        "subfolder": "servers/typescript/migrate_stdio_to_http/server_with_smithery_cli"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/cookbook-ts-smithery-cli/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-smithery-ai-fetch",
    "name": "ai.smithery/smithery-ai-fetch",
    "description": "A simple tool that performs a fetch request to a webpage.",
    "category": "web",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/smithery-ai/mcp-servers",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@smithery-ai/fetch/mcp",
    "documentationUrl": "https://github.com/smithery-ai/mcp-servers#readme",
    "homepage": "https://github.com/smithery-ai/mcp-servers",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/smithery-ai-fetch",
      "description": "A simple tool that performs a fetch request to a webpage.",
      "repository": {
        "url": "https://github.com/smithery-ai/mcp-servers",
        "source": "github",
        "subfolder": "fetch"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/fetch/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-smithery-ai-github",
    "name": "ai.smithery/smithery-ai-github",
    "description": "Access the GitHub API, enabling file operations, repository management, search functionality, and…",
    "category": "filesystem",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/smithery-ai/mcp-servers",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@smithery-ai/github/mcp",
    "documentationUrl": "https://github.com/smithery-ai/mcp-servers#readme",
    "homepage": "https://github.com/smithery-ai/mcp-servers",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/smithery-ai-github",
      "description": "Access the GitHub API, enabling file operations, repository management, search functionality, and…",
      "repository": {
        "url": "https://github.com/smithery-ai/mcp-servers",
        "source": "github",
        "subfolder": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/github/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-smithery-ai-national-weather-service",
    "name": "ai.smithery/smithery-ai-national-weather-service",
    "description": "Provide real-time and forecast weather information for locations in the United States using natura…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/smithery-ai/mcp-servers",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@smithery-ai/national-weather-service/mcp",
    "documentationUrl": "https://github.com/smithery-ai/mcp-servers#readme",
    "homepage": "https://github.com/smithery-ai/mcp-servers",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/smithery-ai-national-weather-service",
      "description": "Provide real-time and forecast weather information for locations in the United States using natura…",
      "repository": {
        "url": "https://github.com/smithery-ai/mcp-servers",
        "source": "github",
        "subfolder": "weather"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/national-weather-service/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-smithery-ai-slack",
    "name": "ai.smithery/smithery-ai-slack",
    "description": "Enable interaction with Slack workspaces. Supports subscribing to Slack events through Resources.",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/smithery-ai/mcp-servers",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@smithery-ai/slack/mcp",
    "documentationUrl": "https://github.com/smithery-ai/mcp-servers#readme",
    "homepage": "https://github.com/smithery-ai/mcp-servers",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/smithery-ai-slack",
      "description": "Enable interaction with Slack workspaces. Supports subscribing to Slack events through Resources.",
      "repository": {
        "url": "https://github.com/smithery-ai/mcp-servers",
        "source": "github",
        "subfolder": "slack"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/slack/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-smithery-notion",
    "name": "ai.smithery/smithery-notion",
    "description": "A Notion workspace is a collaborative environment where teams can organize work, manage projects,…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/smithery-ai/mcp-servers",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@smithery/notion/mcp",
    "documentationUrl": "https://github.com/smithery-ai/mcp-servers#readme",
    "homepage": "https://github.com/smithery-ai/mcp-servers",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/smithery-notion",
      "description": "A Notion workspace is a collaborative environment where teams can organize work, manage projects,…",
      "repository": {
        "url": "https://github.com/smithery-ai/mcp-servers",
        "source": "github",
        "subfolder": "notion"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery/notion/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-smithery-toolbox",
    "name": "ai.smithery/smithery-toolbox",
    "description": "Toolbox dynamically routes to all MCPs in the Smithery registry based on your agent's need. When a…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@smithery/toolbox/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/smithery-toolbox",
      "description": "Toolbox dynamically routes to all MCPs in the Smithery registry based on your agent's need. When a…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery/toolbox/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-sunub-obsidian-mcp-server",
    "name": "ai.smithery/sunub-obsidian-mcp-server",
    "description": "Search your Obsidian vault to quickly find notes by title or keyword, summarize related content, a…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/sunub/obsidian-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@sunub/obsidian-mcp-server/mcp",
    "documentationUrl": "https://github.com/sunub/obsidian-mcp-server#readme",
    "homepage": "https://github.com/sunub/obsidian-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/sunub-obsidian-mcp-server",
      "description": "Search your Obsidian vault to quickly find notes by title or keyword, summarize related content, a…",
      "repository": {
        "url": "https://github.com/sunub/obsidian-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@sunub/obsidian-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-szge-lolwiki-mcp",
    "name": "ai.smithery/szge-lolwiki-mcp",
    "description": "Generate friendly greetings for any audience. Toggle Pirate Mode for a playful, swashbuckling styl…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/szge/lolwiki-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@szge/lolwiki-mcp/mcp",
    "documentationUrl": "https://github.com/szge/lolwiki-mcp#readme",
    "homepage": "https://github.com/szge/lolwiki-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/szge-lolwiki-mcp",
      "description": "Generate friendly greetings for any audience. Toggle Pirate Mode for a playful, swashbuckling styl…",
      "repository": {
        "url": "https://github.com/szge/lolwiki-mcp",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@szge/lolwiki-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-truss44-mcp-crypto-price",
    "name": "ai.smithery/truss44-mcp-crypto-price",
    "description": "Provide real-time cryptocurrency price data and market analysis.",
    "category": "ai",
    "version": "2.1.0",
    "author": "ai.smithery",
    "repository": "https://github.com/truss44/mcp-crypto-price",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@truss44/mcp-crypto-price/mcp",
    "documentationUrl": "https://github.com/truss44/mcp-crypto-price#readme",
    "homepage": "https://github.com/truss44/mcp-crypto-price",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/truss44-mcp-crypto-price",
      "description": "Provide real-time cryptocurrency price data and market analysis.",
      "repository": {
        "url": "https://github.com/truss44/mcp-crypto-price",
        "source": "github"
      },
      "version": "2.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@truss44/mcp-crypto-price/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-turnono-datacommons-mcp-server",
    "name": "ai.smithery/turnono-datacommons-mcp-server",
    "description": "Discover statistical indicators and topics in Data Commons. Retrieve observations for specific var…",
    "category": "ai",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/turnono/datacommons-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@turnono/datacommons-mcp-server/mcp",
    "documentationUrl": "https://github.com/turnono/datacommons-mcp-server#readme",
    "homepage": "https://github.com/turnono/datacommons-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/turnono-datacommons-mcp-server",
      "description": "Discover statistical indicators and topics in Data Commons. Retrieve observations for specific var…",
      "repository": {
        "url": "https://github.com/turnono/datacommons-mcp-server",
        "source": "github"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@turnono/datacommons-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-wgong-sqlite-mcp-server",
    "name": "ai.smithery/wgong-sqlite-mcp-server",
    "description": "Explore, query, and inspect SQLite databases with ease. List tables, preview results, and view det…",
    "category": "database",
    "version": "1.16.0",
    "author": "ai.smithery",
    "repository": "https://github.com/wgong/sqlite-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@wgong/sqlite-mcp-server/mcp",
    "documentationUrl": "https://github.com/wgong/sqlite-mcp-server#readme",
    "homepage": "https://github.com/wgong/sqlite-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/wgong-sqlite-mcp-server",
      "description": "Explore, query, and inspect SQLite databases with ease. List tables, preview results, and view det…",
      "repository": {
        "url": "https://github.com/wgong/sqlite-mcp-server",
        "source": "github",
        "subfolder": "sqlite-explorer-fastmcp-mcp-server"
      },
      "version": "1.16.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@wgong/sqlite-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-xinkuang-china-stock-mcp",
    "name": "ai.smithery/xinkuang-china-stock-mcp",
    "description": "Access real-time and historical market data for China A-shares and Hong Kong stocks, along with ne…",
    "category": "ai",
    "version": "1.15.0",
    "author": "ai.smithery",
    "repository": "https://github.com/xinkuang/china-stock-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@xinkuang/china-stock-mcp/mcp",
    "documentationUrl": "https://github.com/xinkuang/china-stock-mcp#readme",
    "homepage": "https://github.com/xinkuang/china-stock-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/xinkuang-china-stock-mcp",
      "description": "Access real-time and historical market data for China A-shares and Hong Kong stocks, along with ne…",
      "repository": {
        "url": "https://github.com/xinkuang/china-stock-mcp",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@xinkuang/china-stock-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-yuhuison-mediawiki-mcp-server-auth",
    "name": "ai.smithery/yuhuison-mediawiki-mcp-server-auth",
    "description": "Connect to your MediaWiki using simple credentials and manage content without OAuth. Search, read,…",
    "category": "ai",
    "version": "1.0.1",
    "author": "ai.smithery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@yuhuison/mediawiki-mcp-server-auth/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/yuhuison-mediawiki-mcp-server-auth",
      "description": "Connect to your MediaWiki using simple credentials and manage content without OAuth. Search, read,…",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuhuison/mediawiki-mcp-server-auth/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-yuna0x0-anilist-mcp",
    "name": "ai.smithery/yuna0x0-anilist-mcp",
    "description": "Access and interact with anime and manga data seamlessly. Retrieve detailed information about your…",
    "category": "ai",
    "version": "1.3.7",
    "author": "ai.smithery",
    "repository": "https://github.com/yuna0x0/anilist-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@yuna0x0/anilist-mcp/mcp",
    "documentationUrl": "https://github.com/yuna0x0/anilist-mcp#readme",
    "homepage": "https://github.com/yuna0x0/anilist-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/yuna0x0-anilist-mcp",
      "description": "Access and interact with anime and manga data seamlessly. Retrieve detailed information about your…",
      "repository": {
        "url": "https://github.com/yuna0x0/anilist-mcp",
        "source": "github"
      },
      "version": "1.3.7",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuna0x0/anilist-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-yuna0x0-hackmd-mcp",
    "name": "ai.smithery/yuna0x0-hackmd-mcp",
    "description": "Interact with your HackMD notes and teams seamlessly. Manage your notes, view reading history, and…",
    "category": "ai",
    "version": "1.5.3",
    "author": "ai.smithery",
    "repository": "https://github.com/yuna0x0/hackmd-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@yuna0x0/hackmd-mcp/mcp",
    "documentationUrl": "https://github.com/yuna0x0/hackmd-mcp#readme",
    "homepage": "https://github.com/yuna0x0/hackmd-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/yuna0x0-hackmd-mcp",
      "description": "Interact with your HackMD notes and teams seamlessly. Manage your notes, view reading history, and…",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.5.3",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuna0x0/hackmd-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-zeta-chain-cli",
    "name": "ai.smithery/zeta-chain-cli",
    "description": "Create friendly, customizable greetings for any name or audience. Break the ice in demos, onboardi…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/zeta-chain/cli",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@zeta-chain/cli/mcp",
    "documentationUrl": "https://github.com/zeta-chain/cli#readme",
    "homepage": "https://github.com/zeta-chain/cli",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/zeta-chain-cli",
      "description": "Create friendly, customizable greetings for any name or audience. Break the ice in demos, onboardi…",
      "repository": {
        "url": "https://github.com/zeta-chain/cli",
        "source": "github",
        "subfolder": "src/mcp"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@zeta-chain/cli/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-zhaoganghao-hellomcp",
    "name": "ai.smithery/zhaoganghao-hellomcp",
    "description": "Greet people by name with friendly, concise messages. Explore the origin of 'Hello, World' for fun…",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.smithery",
    "repository": "https://github.com/zhaoganghao/hellomcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@zhaoganghao/hellomcp/mcp",
    "documentationUrl": "https://github.com/zhaoganghao/hellomcp#readme",
    "homepage": "https://github.com/zhaoganghao/hellomcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/zhaoganghao-hellomcp",
      "description": "Greet people by name with friendly, concise messages. Explore the origin of 'Hello, World' for fun…",
      "repository": {
        "url": "https://github.com/zhaoganghao/hellomcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@zhaoganghao/hellomcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.smithery-zwldarren-akshare-one-mcp",
    "name": "ai.smithery/zwldarren-akshare-one-mcp",
    "description": "Provide access to Chinese stock market data including historical prices, real-time data, news, and…",
    "category": "ai",
    "version": "1.14.0",
    "author": "ai.smithery",
    "repository": "https://github.com/zwldarren/akshare-one-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://server.smithery.ai/@zwldarren/akshare-one-mcp/mcp",
    "documentationUrl": "https://github.com/zwldarren/akshare-one-mcp#readme",
    "homepage": "https://github.com/zwldarren/akshare-one-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.smithery/zwldarren-akshare-one-mcp",
      "description": "Provide access to Chinese stock market data including historical prices, real-time data, news, and…",
      "repository": {
        "url": "https://github.com/zwldarren/akshare-one-mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@zwldarren/akshare-one-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.tickettailor-mcp",
    "name": "ai.tickettailor/mcp",
    "description": "Provides event organisers with tools to interact with a Ticket Tailor box office account.",
    "category": "ai",
    "version": "1.0.0",
    "author": "ai.tickettailor",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.tickettailor.ai/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.tickettailor/mcp",
      "description": "Provides event organisers with tools to interact with a Ticket Tailor box office account.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.tickettailor.ai/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.tickettailor.ai/sse"
        }
      ]
    }
  },
  {
    "id": "ai.toolprint-hypertool-mcp",
    "name": "ai.toolprint/hypertool-mcp",
    "description": "Dynamically expose tools from proxied servers based on an Agent Persona",
    "category": "ai",
    "version": "0.0.42",
    "author": "ai.toolprint",
    "repository": "https://github.com/toolprint/hypertool-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @toolprint/hypertool-mcp",
    "documentationUrl": "https://github.com/toolprint/hypertool-mcp#readme",
    "homepage": "https://github.com/toolprint/hypertool-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.toolprint/hypertool-mcp",
      "description": "Dynamically expose tools from proxied servers based on an Agent Persona",
      "repository": {
        "url": "https://github.com/toolprint/hypertool-mcp",
        "source": "github"
      },
      "version": "0.0.42",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@toolprint/hypertool-mcp",
          "version": "0.0.42",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "ai.waystation-airtable",
    "name": "ai.waystation/airtable",
    "description": "Access and manage your Airtable bases, tables, and records seamlessly",
    "category": "ai",
    "version": "0.3.1",
    "author": "ai.waystation",
    "repository": "https://github.com/waystation-ai/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://waystation.ai/airtable/mcp",
    "documentationUrl": "https://github.com/waystation-ai/mcp#readme",
    "homepage": "https://github.com/waystation-ai/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.waystation/airtable",
      "description": "Access and manage your Airtable bases, tables, and records seamlessly",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/airtable/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/airtable/mcp/sse"
        }
      ]
    }
  },
  {
    "id": "ai.waystation-gmail",
    "name": "ai.waystation/gmail",
    "description": "Read emails, send messages, and manage labels in your Gmail account.",
    "category": "ai",
    "version": "0.3.1",
    "author": "ai.waystation",
    "repository": "https://github.com/waystation-ai/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://waystation.ai/gmail/mcp",
    "documentationUrl": "https://github.com/waystation-ai/mcp#readme",
    "homepage": "https://github.com/waystation-ai/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.waystation/gmail",
      "description": "Read emails, send messages, and manage labels in your Gmail account.",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/gmail/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/gmail/mcp/sse"
        }
      ]
    }
  },
  {
    "id": "ai.waystation-jira",
    "name": "ai.waystation/jira",
    "description": "Track issues, manage projects, and streamline workflows in Jira.",
    "category": "ai",
    "version": "0.3.1",
    "author": "ai.waystation",
    "repository": "https://github.com/waystation-ai/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://waystation.ai/jira/mcp",
    "documentationUrl": "https://github.com/waystation-ai/mcp#readme",
    "homepage": "https://github.com/waystation-ai/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.waystation/jira",
      "description": "Track issues, manage projects, and streamline workflows in Jira.",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/jira/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/jira/mcp/sse"
        }
      ]
    }
  },
  {
    "id": "ai.waystation-mcp",
    "name": "ai.waystation/mcp",
    "description": "Ultimate toolbox to connect your LLM to popular productivity tools such as Monday, AirTable, Slack",
    "category": "ai",
    "version": "0.3.1",
    "author": "ai.waystation",
    "repository": "https://github.com/waystation-ai/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://waystation.ai/mcp",
    "documentationUrl": "https://github.com/waystation-ai/mcp#readme",
    "homepage": "https://github.com/waystation-ai/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.waystation/mcp",
      "description": "Ultimate toolbox to connect your LLM to popular productivity tools such as Monday, AirTable, Slack",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/mcp/sse"
        }
      ]
    }
  },
  {
    "id": "ai.waystation-miro",
    "name": "ai.waystation/miro",
    "description": "Collaborate on visual boards with your team using Miro integration.",
    "category": "ai",
    "version": "0.3.1",
    "author": "ai.waystation",
    "repository": "https://github.com/waystation-ai/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://waystation.ai/miro/mcp",
    "documentationUrl": "https://github.com/waystation-ai/mcp#readme",
    "homepage": "https://github.com/waystation-ai/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.waystation/miro",
      "description": "Collaborate on visual boards with your team using Miro integration.",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/miro/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/miro/mcp/sse"
        }
      ]
    }
  },
  {
    "id": "ai.waystation-monday",
    "name": "ai.waystation/monday",
    "description": "Access and manage your Monday.com boards, items, and updates seamlessly",
    "category": "ai",
    "version": "0.3.1",
    "author": "ai.waystation",
    "repository": "https://github.com/waystation-ai/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://waystation.ai/monday/mcp",
    "documentationUrl": "https://github.com/waystation-ai/mcp#readme",
    "homepage": "https://github.com/waystation-ai/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.waystation/monday",
      "description": "Access and manage your Monday.com boards, items, and updates seamlessly",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/monday/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/monday/mcp/sse"
        }
      ]
    }
  },
  {
    "id": "ai.waystation-office",
    "name": "ai.waystation/office",
    "description": "Create, edit, and collaborate on Office documents and spreadsheets.",
    "category": "ai",
    "version": "0.3.1",
    "author": "ai.waystation",
    "repository": "https://github.com/waystation-ai/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://waystation.ai/office/mcp",
    "documentationUrl": "https://github.com/waystation-ai/mcp#readme",
    "homepage": "https://github.com/waystation-ai/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.waystation/office",
      "description": "Create, edit, and collaborate on Office documents and spreadsheets.",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/office/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/office/mcp/sse"
        }
      ]
    }
  },
  {
    "id": "ai.waystation-postgres",
    "name": "ai.waystation/postgres",
    "description": "Connect to your PostgreSQL database to query data and schemas.",
    "category": "database",
    "version": "0.3.1",
    "author": "ai.waystation",
    "repository": "https://github.com/waystation-ai/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://waystation.ai/postgres/mcp",
    "documentationUrl": "https://github.com/waystation-ai/mcp#readme",
    "homepage": "https://github.com/waystation-ai/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.waystation/postgres",
      "description": "Connect to your PostgreSQL database to query data and schemas.",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/postgres/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/postgres/mcp/sse"
        }
      ]
    }
  },
  {
    "id": "ai.waystation-slack",
    "name": "ai.waystation/slack",
    "description": "Send messages, access channels, and manage files in your Slack workspace.",
    "category": "filesystem",
    "version": "0.3.1",
    "author": "ai.waystation",
    "repository": "https://github.com/waystation-ai/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://waystation.ai/slack/mcp",
    "documentationUrl": "https://github.com/waystation-ai/mcp#readme",
    "homepage": "https://github.com/waystation-ai/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.waystation/slack",
      "description": "Send messages, access channels, and manage files in your Slack workspace.",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/slack/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/slack/mcp/sse"
        }
      ]
    }
  },
  {
    "id": "ai.waystation-supabase",
    "name": "ai.waystation/supabase",
    "description": "Connect to your Supabase database to query data and schemas.",
    "category": "database",
    "version": "0.3.1",
    "author": "ai.waystation",
    "repository": "https://github.com/waystation-ai/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://waystation.ai/supabase/mcp",
    "documentationUrl": "https://github.com/waystation-ai/mcp#readme",
    "homepage": "https://github.com/waystation-ai/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.waystation/supabase",
      "description": "Connect to your Supabase database to query data and schemas.",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/supabase/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/supabase/mcp/sse"
        }
      ]
    }
  },
  {
    "id": "ai.waystation-teams",
    "name": "ai.waystation/teams",
    "description": "Collaborate, chat, and manage meetings in Microsoft Teams.",
    "category": "ai",
    "version": "0.3.1",
    "author": "ai.waystation",
    "repository": "https://github.com/waystation-ai/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://waystation.ai/teams/mcp",
    "documentationUrl": "https://github.com/waystation-ai/mcp#readme",
    "homepage": "https://github.com/waystation-ai/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.waystation/teams",
      "description": "Collaborate, chat, and manage meetings in Microsoft Teams.",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/teams/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/teams/mcp/sse"
        }
      ]
    }
  },
  {
    "id": "ai.waystation-wrike",
    "name": "ai.waystation/wrike",
    "description": "Manage projects, tasks, and workflows with Wrike project management.",
    "category": "ai",
    "version": "0.3.1",
    "author": "ai.waystation",
    "repository": "https://github.com/waystation-ai/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://waystation.ai/wrike/mcp",
    "documentationUrl": "https://github.com/waystation-ai/mcp#readme",
    "homepage": "https://github.com/waystation-ai/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.waystation/wrike",
      "description": "Manage projects, tasks, and workflows with Wrike project management.",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/wrike/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/wrike/mcp/sse"
        }
      ]
    }
  },
  {
    "id": "ai.wild-card-deepcontext",
    "name": "ai.wild-card/deepcontext",
    "description": "Advanced codebase indexing and semantic search MCP server",
    "category": "ai",
    "version": "0.1.15",
    "author": "ai.wild-card",
    "repository": "https://github.com/Wildcard-Official/deepcontext",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @wildcard-ai/deepcontext",
    "documentationUrl": "https://github.com/Wildcard-Official/deepcontext#readme",
    "homepage": "https://github.com/Wildcard-Official/deepcontext",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.wild-card/deepcontext",
      "description": "Advanced codebase indexing and semantic search MCP server",
      "repository": {
        "url": "https://github.com/Wildcard-Official/deepcontext",
        "source": "github"
      },
      "version": "0.1.15",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@wildcard-ai/deepcontext",
          "version": "0.1.15",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Jina AI API key for embeddings generation",
              "format": "string",
              "isSecret": true,
              "name": "JINA_API_KEY"
            },
            {
              "description": "Turbopuffer API key for vector storage",
              "format": "string",
              "isSecret": true,
              "name": "TURBOPUFFER_API_KEY"
            },
            {
              "description": "Wildcard API key for authentication",
              "format": "string",
              "isSecret": true,
              "name": "WILDCARD_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "ai.zine-mcp",
    "name": "ai.zine/mcp",
    "description": "Your memory, everywhere AI goes. Build knowledge once, access it via MCP anywhere.",
    "category": "ai",
    "version": "1.0.1",
    "author": "ai.zine",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://www.zine.ai/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ai.zine/mcp",
      "description": "Your memory, everywhere AI goes. Build knowledge once, access it via MCP anywhere.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://www.zine.ai/mcp"
        }
      ]
    }
  },
  {
    "id": "app.getdialer-dialer",
    "name": "app.getdialer/dialer",
    "description": "An MCP server that provides lets you make outbound phone calls using your own phone number",
    "category": "other",
    "version": "1.0.1",
    "author": "app.getdialer",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://getdialer.app/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "app.getdialer/dialer",
      "description": "An MCP server that provides lets you make outbound phone calls using your own phone number",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://getdialer.app/mcp"
        },
        {
          "type": "sse",
          "url": "https://getdialer.app/sse"
        }
      ]
    }
  },
  {
    "id": "app.linear-linear",
    "name": "app.linear/linear",
    "description": "MCP server for Linear project management and issue tracking",
    "category": "other",
    "version": "1.0.0",
    "author": "app.linear",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.linear.app/sse",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "app.linear/linear",
      "description": "MCP server for Linear project management and issue tracking",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.linear.app/sse"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.linear.app/mcp"
        }
      ]
    }
  },
  {
    "id": "app.thoughtspot-mcp-server",
    "name": "app.thoughtspot/mcp-server",
    "description": "MCP Server for ThoughtSpot - provides OAuth authentication and tools for querying data",
    "category": "other",
    "version": "1.0.1",
    "author": "app.thoughtspot",
    "repository": "https://github.com/thoughtspot/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://agent.thoughtspot.app/mcp",
    "documentationUrl": "https://github.com/thoughtspot/mcp-server#readme",
    "homepage": "https://github.com/thoughtspot/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "app.thoughtspot/mcp-server",
      "description": "MCP Server for ThoughtSpot - provides OAuth authentication and tools for querying data",
      "repository": {
        "url": "https://github.com/thoughtspot/mcp-server",
        "source": "github"
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://agent.thoughtspot.app/mcp"
        },
        {
          "type": "sse",
          "url": "https://agent.thoughtspot.app/sse"
        },
        {
          "type": "streamable-http",
          "url": "https://agent.thoughtspot.app/bearer/mcp",
          "headers": [
            {
              "description": "Bearer token for authentication, have the ts-host as 'token@ts-host' or as a separate 'x-ts-host' header",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            },
            {
              "description": "ThoughtSpot instance URL, if not provided in the authorization header",
              "name": "X-TS-Host"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://agent.thoughtspot.app/bearer/sse",
          "headers": [
            {
              "description": "Bearer token for authentication, have the ts-host as 'token@ts-host' or as a separate 'x-ts-host' header",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            },
            {
              "description": "ThoughtSpot instance URL, if not provided in the authorization header",
              "name": "X-TS-Host"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "app.zenable-zenable",
    "name": "app.zenable/zenable",
    "description": "Zenable cleans up sloppy AI code and prevents vulnerabilities with deterministic guardrails",
    "category": "ai",
    "version": "2.0.0",
    "author": "app.zenable",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.zenable.app/",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "app.zenable/zenable",
      "description": "Zenable cleans up sloppy AI code and prevents vulnerabilities with deterministic guardrails",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.zenable.app/"
        }
      ]
    }
  },
  {
    "id": "biz.icecat-mcp",
    "name": "biz.icecat/mcp",
    "description": "Icecat Product Content",
    "category": "other",
    "version": "1.0.0",
    "author": "biz.icecat",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.icecat.biz",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "biz.icecat/mcp",
      "description": "Icecat Product Content",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.icecat.biz"
        }
      ]
    }
  },
  {
    "id": "ch.martinelli-jooq-mcp",
    "name": "ch.martinelli/jooq-mcp",
    "description": "An MCP server that provides access to the jOOQ documentation",
    "category": "other",
    "version": "1.0.0",
    "author": "ch.martinelli",
    "repository": "https://github.com/martinellich/jooq-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://jooq-mcp.martinelli.ch/sse",
    "documentationUrl": "https://github.com/martinellich/jooq-mcp#readme",
    "homepage": "https://github.com/martinellich/jooq-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ch.martinelli/jooq-mcp",
      "description": "An MCP server that provides access to the jOOQ documentation",
      "repository": {
        "url": "https://github.com/martinellich/jooq-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://jooq-mcp.martinelli.ch/sse"
        }
      ]
    }
  },
  {
    "id": "ci.git-mymlh-mcp-server",
    "name": "ci.git/mymlh-mcp-server",
    "description": "OAuth-enabled MyMLH MCP server for accessing MyMLH data.",
    "category": "version-control",
    "version": "1.0.0",
    "author": "ci.git",
    "repository": "https://github.com/wei/mymlh-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mymlh-mcp.git.ci/mcp",
    "documentationUrl": "https://github.com/wei/mymlh-mcp-server#readme",
    "homepage": "https://github.com/wei/mymlh-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "ci.git/mymlh-mcp-server",
      "description": "OAuth-enabled MyMLH MCP server for accessing MyMLH data.",
      "repository": {
        "url": "https://github.com/wei/mymlh-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mymlh-mcp.git.ci/mcp"
        },
        {
          "type": "sse",
          "url": "https://mymlh-mcp.git.ci/sse"
        }
      ]
    }
  },
  {
    "id": "co.axiom-mcp",
    "name": "co.axiom/mcp",
    "description": "List datasets, schemas, run APL queries, and use prompts for exploration, anomalies, and monitoring.",
    "category": "other",
    "version": "1.0.0",
    "author": "co.axiom",
    "repository": "https://github.com/axiomhq/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.axiom.co/sse",
    "documentationUrl": "https://github.com/axiomhq/mcp#readme",
    "homepage": "https://github.com/axiomhq/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "co.axiom/mcp",
      "description": "List datasets, schemas, run APL queries, and use prompts for exploration, anomalies, and monitoring.",
      "repository": {
        "url": "https://github.com/axiomhq/mcp",
        "source": "github",
        "subfolder": "apps/mcp"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.axiom.co/sse"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.axiom.co/mcp"
        }
      ]
    }
  },
  {
    "id": "co.contraption-mcp",
    "name": "co.contraption/mcp",
    "description": "An MCP server that provides [describe what your server does]",
    "category": "other",
    "version": "1.0.0",
    "author": "co.contraption",
    "repository": "https://github.com/contraptionco/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.contraption.co/",
    "documentationUrl": "https://github.com/contraptionco/mcp#readme",
    "homepage": "https://github.com/contraptionco/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "co.contraption/mcp",
      "description": "An MCP server that provides [describe what your server does]",
      "repository": {
        "url": "https://github.com/contraptionco/mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.contraption.co/"
        }
      ]
    }
  },
  {
    "id": "co.huggingface-hf-mcp-server",
    "name": "co.huggingface/hf-mcp-server",
    "description": "Connect to Hugging Face Hub and thousands of Gradio AI Applications",
    "category": "ai",
    "version": "0.2.33",
    "author": "co.huggingface",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://huggingface.co/mcp?login",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "co.huggingface/hf-mcp-server",
      "description": "Connect to Hugging Face Hub and thousands of Gradio AI Applications",
      "title": "Hugging Face",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.2.33",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://huggingface.co/mcp?login"
        },
        {
          "type": "streamable-http",
          "url": "https://huggingface.co/mcp",
          "headers": [
            {
              "description": "Hugging Face API token for authentication",
              "isSecret": true,
              "placeholder": "Bearer hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://huggingface.co/mcp"
        }
      ]
    }
  },
  {
    "id": "co.pipeboard-meta-ads-mcp",
    "name": "co.pipeboard/meta-ads-mcp",
    "description": "Facebook / Meta Ads automation with AI: analyze performance, test creatives, optimize spend.",
    "category": "ai",
    "version": "1.0.13",
    "author": "co.pipeboard",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install meta-ads-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "co.pipeboard/meta-ads-mcp",
      "description": "Facebook / Meta Ads automation with AI: analyze performance, test creatives, optimize spend.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.13",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "meta-ads-mcp",
          "version": "1.0.13",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.pipeboard.co/meta-ads-mcp"
        }
      ]
    }
  },
  {
    "id": "co.thisdot.docusign-navigator-mcp",
    "name": "co.thisdot.docusign-navigator/mcp",
    "description": "Secure Docusign Navigator integration for AI assistants to access and analyze agreement data.",
    "category": "ai",
    "version": "1.3.0",
    "author": "co.thisdot.docusign-navigator",
    "repository": "https://github.com/thisdot/docusign-navigator-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://docusign-navigator.thisdot.co/mcp",
    "documentationUrl": "https://github.com/thisdot/docusign-navigator-mcp#readme",
    "homepage": "https://github.com/thisdot/docusign-navigator-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "co.thisdot.docusign-navigator/mcp",
      "description": "Secure Docusign Navigator integration for AI assistants to access and analyze agreement data.",
      "title": "Docusign Navigator",
      "repository": {
        "url": "https://github.com/thisdot/docusign-navigator-mcp",
        "source": "github"
      },
      "version": "1.3.0",
      "websiteUrl": "https://docusign-navigator.thisdot.co",
      "icons": [
        {
          "src": "https://docusign-navigator.thisdot.co/thisdot-labs-logo.png",
          "mimeType": "image/png",
          "sizes": [
            "500x122"
          ]
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://docusign-navigator.thisdot.co/mcp"
        }
      ]
    }
  },
  {
    "id": "com.1stdibs-1stDibs",
    "name": "com.1stdibs/1stDibs",
    "description": "MCP server for browsing and searching items on 1stDibs marketplace.",
    "category": "other",
    "version": "1.0.0",
    "author": "com.1stdibs",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://www.1stdibs.com/soa/mcp/",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.1stdibs/1stDibs",
      "description": "MCP server for browsing and searching items on 1stDibs marketplace.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://www.1stdibs.com/soa/mcp/"
        }
      ]
    }
  },
  {
    "id": "com.adspirer-ads",
    "name": "com.adspirer/ads",
    "description": "Remote MCP for cross-platform ad creation (Google Ads, TikTok). OAuth 2.1 with progress streaming.",
    "category": "other",
    "version": "1.0.0",
    "author": "com.adspirer",
    "repository": "https://github.com/amekala/ads-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.adspirer.com/",
    "documentationUrl": "https://github.com/amekala/ads-mcp#readme",
    "homepage": "https://github.com/amekala/ads-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.adspirer/ads",
      "description": "Remote MCP for cross-platform ad creation (Google Ads, TikTok). OAuth 2.1 with progress streaming.",
      "repository": {
        "url": "https://github.com/amekala/ads-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.adspirer.com/"
        }
      ]
    }
  },
  {
    "id": "com.agilitycms-mcp-server",
    "name": "com.agilitycms/mcp-server",
    "description": "An MCP server that provides access to Agility CMS.  See https://mcp.agilitycms.com for more details.",
    "category": "ai",
    "version": "1.0.0",
    "author": "com.agilitycms",
    "repository": "https://github.com/agility/agility-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.agilitycms.com/api/mcp",
    "documentationUrl": "https://github.com/agility/agility-mcp-server#readme",
    "homepage": "https://github.com/agility/agility-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.agilitycms/mcp-server",
      "description": "An MCP server that provides access to Agility CMS.  See https://mcp.agilitycms.com for more details.",
      "repository": {
        "url": "https://github.com/agility/agility-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.agilitycms.com/api/mcp"
        }
      ]
    }
  },
  {
    "id": "com.allstacks-allstacks-mcp",
    "name": "com.allstacks/allstacks-mcp",
    "description": "Provides 208+ tools for AI-native engineering intelligence via Allstacks API.",
    "category": "ai",
    "version": "0.1.3",
    "author": "com.allstacks",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install allstacks-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.allstacks/allstacks-mcp",
      "description": "Provides 208+ tools for AI-native engineering intelligence via Allstacks API.",
      "title": "Allstacks Analytics MCP Server",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.3",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "allstacks-mcp",
          "version": "0.1.3",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "com.amplitude-mcp-server",
    "name": "com.amplitude/mcp-server",
    "description": "Search, access, and get insights on your Amplitude data",
    "category": "other",
    "version": "1.0.0",
    "author": "com.amplitude",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.amplitude.com/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.amplitude/mcp-server",
      "description": "Search, access, and get insights on your Amplitude data",
      "title": "Amplitude",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.amplitude.com/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.eu.amplitude.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.apify-apify-mcp-server",
    "name": "com.apify/apify-mcp-server",
    "description": "Apify MCP server provides access to a marketplace for web scraping and data extraction tools.",
    "category": "web",
    "version": "0.4.15",
    "author": "com.apify",
    "repository": "https://github.com/apify/apify-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.apify.com/",
    "documentationUrl": "https://github.com/apify/apify-mcp-server#readme",
    "homepage": "https://github.com/apify/apify-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.apify/apify-mcp-server",
      "description": "Apify MCP server provides access to a marketplace for web scraping and data extraction tools.",
      "repository": {
        "url": "https://github.com/apify/apify-mcp-server",
        "source": "github"
      },
      "version": "0.4.15",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apify.com/",
          "headers": [
            {
              "description": "Apify API token for authentication with Apify platform services. For example 'Bearer <apify-api-token>'",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.apple-rag-mcp-server",
    "name": "com.apple-rag/mcp-server",
    "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
    "category": "ai",
    "version": "2.9.0",
    "author": "com.apple-rag",
    "repository": "https://github.com/BingoWon/apple-rag-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.apple-rag.com",
    "documentationUrl": "https://github.com/BingoWon/apple-rag-mcp#readme",
    "homepage": "https://github.com/BingoWon/apple-rag-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.apple-rag/mcp-server",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "repository": {
        "url": "https://github.com/BingoWon/apple-rag-mcp",
        "source": "github"
      },
      "version": "2.9.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.aribadernatal-sideways",
    "name": "com.aribadernatal/sideways",
    "description": "Unexpected questions and lateral thinking prompts to break through mental blocks. 86 strategies.",
    "category": "other",
    "version": "1.0.0",
    "author": "com.aribadernatal",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://sideways.aribadernatal.com/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.aribadernatal/sideways",
      "description": "Unexpected questions and lateral thinking prompts to break through mental blocks. 86 strategies.",
      "title": "Sideways",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://sideways.aribadernatal.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://sideways.aribadernatal.com/sse"
        }
      ]
    }
  },
  {
    "id": "com.atlassian-atlassian-mcp-server",
    "name": "com.atlassian/atlassian-mcp-server",
    "description": "Enables secure, permission-aware access to Atlassian Cloud products.",
    "category": "cloud",
    "version": "1.0.0",
    "author": "com.atlassian",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.atlassian.com/v1/sse",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.atlassian/atlassian-mcp-server",
      "description": "Enables secure, permission-aware access to Atlassian Cloud products.",
      "title": "Atlassian Rovo MCP Server",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.atlassian.com/v1/sse"
        }
      ]
    }
  },
  {
    "id": "com.biodnd-agent-fin",
    "name": "com.biodnd/agent-fin",
    "description": "Agent Fin: finance MCP server with market data tools",
    "category": "other",
    "version": "0.1.2",
    "author": "com.biodnd",
    "repository": "https://github.com/markchiang/go-agents",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://agent-fin.biodnd.com/sse",
    "documentationUrl": "https://github.com/markchiang/go-agents#readme",
    "homepage": "https://github.com/markchiang/go-agents",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.biodnd/agent-fin",
      "description": "Agent Fin: finance MCP server with market data tools",
      "repository": {
        "url": "https://github.com/markchiang/go-agents",
        "source": "github",
        "subfolder": "src/go_agents/agents/fin"
      },
      "version": "0.1.2",
      "remotes": [
        {
          "type": "sse",
          "url": "https://agent-fin.biodnd.com/sse"
        }
      ]
    }
  },
  {
    "id": "com.biodnd-agent-ip",
    "name": "com.biodnd/agent-ip",
    "description": "Agent IP: MCP server with patents search tools",
    "category": "other",
    "version": "0.1.2",
    "author": "com.biodnd",
    "repository": "https://github.com/markchiang/go-agents",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://agent-ip.biodnd.com/sse",
    "documentationUrl": "https://github.com/markchiang/go-agents#readme",
    "homepage": "https://github.com/markchiang/go-agents",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.biodnd/agent-ip",
      "description": "Agent IP: MCP server with patents search tools",
      "repository": {
        "url": "https://github.com/markchiang/go-agents",
        "source": "github",
        "subfolder": "src/go_agents/agents/ip"
      },
      "version": "0.1.2",
      "remotes": [
        {
          "type": "sse",
          "url": "https://agent-ip.biodnd.com/sse"
        }
      ]
    }
  },
  {
    "id": "com.biodnd-agent-press",
    "name": "com.biodnd/agent-press",
    "description": "Agent Press: news MCP server streaming company headlines",
    "category": "other",
    "version": "0.1.2",
    "author": "com.biodnd",
    "repository": "https://github.com/markchiang/go-agents",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://agent-press.biodnd.com/sse",
    "documentationUrl": "https://github.com/markchiang/go-agents#readme",
    "homepage": "https://github.com/markchiang/go-agents",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.biodnd/agent-press",
      "description": "Agent Press: news MCP server streaming company headlines",
      "repository": {
        "url": "https://github.com/markchiang/go-agents",
        "source": "github",
        "subfolder": "src/go_agents/agents/press"
      },
      "version": "0.1.2",
      "remotes": [
        {
          "type": "sse",
          "url": "https://agent-press.biodnd.com/sse"
        }
      ]
    }
  },
  {
    "id": "com.blockscout-mcp-server",
    "name": "com.blockscout/mcp-server",
    "description": "MCP server for Blockscout",
    "category": "other",
    "version": "0.11.0",
    "author": "com.blockscout",
    "repository": "https://github.com/blockscout/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.blockscout.com/mcp",
    "documentationUrl": "https://github.com/blockscout/mcp-server#readme",
    "homepage": "https://github.com/blockscout/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.blockscout/mcp-server",
      "description": "MCP server for Blockscout",
      "repository": {
        "url": "https://github.com/blockscout/mcp-server",
        "source": "github"
      },
      "version": "0.11.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.blockscout.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.brokerchooser-broker-safety",
    "name": "com.brokerchooser/broker-safety",
    "description": "MCP server offering regulator-sourced legitimacy checks on investment entities by name or URL.",
    "category": "version-control",
    "version": "1.0.0",
    "author": "com.brokerchooser",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.brokerchooser.com/servers/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.brokerchooser/broker-safety",
      "description": "MCP server offering regulator-sourced legitimacy checks on investment entities by name or URL.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.brokerchooser.com/servers/mcp"
        }
      ]
    }
  },
  {
    "id": "com.bullpenstrategygroup.rotunda-mcp",
    "name": "com.bullpenstrategygroup.rotunda/mcp",
    "description": "An MCP server that provides congressional transcripts",
    "category": "other",
    "version": "1.0.0",
    "author": "com.bullpenstrategygroup.rotunda",
    "repository": "https://github.com/CorporateEntity101/rotunda",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://rotunda.bullpenstrategygroup.com/mcp",
    "documentationUrl": "https://github.com/CorporateEntity101/rotunda#readme",
    "homepage": "https://github.com/CorporateEntity101/rotunda",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.bullpenstrategygroup.rotunda/mcp",
      "description": "An MCP server that provides congressional transcripts",
      "repository": {
        "url": "https://github.com/CorporateEntity101/rotunda",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://rotunda.bullpenstrategygroup.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.close-close-mcp",
    "name": "com.close/close-mcp",
    "description": "Close CRM to manage your sales pipeline. Learn more at https://close.com or https://mcp.close.com",
    "category": "other",
    "version": "1.0.1",
    "author": "com.close",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.close.com/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.close/close-mcp",
      "description": "Close CRM to manage your sales pipeline. Learn more at https://close.com or https://mcp.close.com",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.close.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.cloudflare.mcp-mcp",
    "name": "com.cloudflare.mcp/mcp",
    "description": "Cloudflare MCP servers",
    "category": "cloud",
    "version": "1.0.0",
    "author": "com.cloudflare.mcp",
    "repository": "https://github.com/cloudflare/mcp-server-cloudflare",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://docs.mcp.cloudflare.com/mcp",
    "documentationUrl": "https://github.com/cloudflare/mcp-server-cloudflare#readme",
    "homepage": "https://github.com/cloudflare/mcp-server-cloudflare",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.cloudflare.mcp/mcp",
      "description": "Cloudflare MCP servers",
      "repository": {
        "url": "https://github.com/cloudflare/mcp-server-cloudflare",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://docs.mcp.cloudflare.com/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://observability.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://bindings.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://builds.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://radar.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://containers.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://browser.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://logs.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://ai-gateway.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://autorag.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://auditlogs.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://dns-analytics.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://dex.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://casb.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://graphql.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://docs.mcp.cloudflare.com/sse"
        },
        {
          "type": "sse",
          "url": "https://observability.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://bindings.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://builds.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://radar.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://containers.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://browser.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://logs.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://ai-gateway.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://autorag.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://auditlogs.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://dns-analytics.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://dex.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://casb.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://graphql.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.codescene-codescene-mcp-server",
    "name": "com.codescene/codescene-mcp-server",
    "description": "An MCP server that provides CodeScene Code Health analysis tools.",
    "category": "other",
    "version": "1.0.0",
    "author": "com.codescene",
    "repository": "https://github.com/codescene-oss/codescene-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/codescene/codescene-mcp:latest",
    "documentationUrl": "https://github.com/codescene-oss/codescene-mcp-server#readme",
    "homepage": "https://github.com/codescene-oss/codescene-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.codescene/codescene-mcp-server",
      "description": "An MCP server that provides CodeScene Code Health analysis tools.",
      "repository": {
        "url": "https://github.com/codescene-oss/codescene-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/codescene/codescene-mcp:latest",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "CodeScene Access Token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "CS_ACCESS_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.devcycle-mcp",
    "name": "com.devcycle/mcp",
    "description": "DevCycle MCP server for feature flag management",
    "category": "other",
    "version": "6.1.2",
    "author": "com.devcycle",
    "repository": "https://github.com/DevCycleHQ/cli",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.devcycle.com/mcp",
    "documentationUrl": "https://github.com/DevCycleHQ/cli#readme",
    "homepage": "https://github.com/DevCycleHQ/cli",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.devcycle/mcp",
      "description": "DevCycle MCP server for feature flag management",
      "repository": {
        "url": "https://github.com/DevCycleHQ/cli",
        "source": "github"
      },
      "version": "6.1.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.devcycle.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.devcycle.com/sse"
        }
      ]
    }
  },
  {
    "id": "com.devopness.mcp-server",
    "name": "com.devopness.mcp/server",
    "description": "Devopness MCP server for DevOps happiness! Empower AI Agents to deploy apps and infra, to any cloud.",
    "category": "cloud",
    "version": "1.0.1",
    "author": "com.devopness.mcp",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.devopness.com/mcp/",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.devopness.mcp/server",
      "description": "Devopness MCP server for DevOps happiness! Empower AI Agents to deploy apps and infra, to any cloud.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.devopness.com/mcp/"
        }
      ]
    }
  },
  {
    "id": "com.dexpaprika-dexpaprika",
    "name": "com.dexpaprika/dexpaprika",
    "description": "Real-time DEX data, liquidity pools, token prices, and trading volumes across blockchain networks.",
    "category": "ai",
    "version": "1.1.0",
    "author": "com.dexpaprika",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.dexpaprika.com/streamable-http",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.dexpaprika/dexpaprika",
      "description": "Real-time DEX data, liquidity pools, token prices, and trading volumes across blockchain networks.",
      "title": "DexPaprika",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.dexpaprika.com/streamable-http"
        },
        {
          "type": "sse",
          "url": "https://mcp.dexpaprika.com/sse"
        }
      ]
    }
  },
  {
    "id": "com.docfork-docfork-mcp",
    "name": "com.docfork/docfork-mcp",
    "description": "Up-to-date documentation to 9,000+ libraries for devs and AI agents.",
    "category": "ai",
    "version": "1.0.0",
    "author": "com.docfork",
    "repository": "https://github.com/docfork/docfork-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install docfork",
    "documentationUrl": "https://github.com/docfork/docfork-mcp#readme",
    "homepage": "https://github.com/docfork/docfork-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.docfork/docfork-mcp",
      "description": "Up-to-date documentation to 9,000+ libraries for devs and AI agents.",
      "repository": {
        "url": "https://github.com/docfork/docfork-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "docfork",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.docfork.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.driflyte-driflyte-mcp-server",
    "name": "com.driflyte/driflyte-mcp-server",
    "description": "Driflyte MCP server which lets AI assistants query topic-specific knowledge from web and GitHub.",
    "category": "web",
    "version": "0.1.15",
    "author": "com.driflyte",
    "repository": "https://github.com/serkan-ozal/driflyte-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @driflyte/mcp-server",
    "documentationUrl": "https://github.com/serkan-ozal/driflyte-mcp-server#readme",
    "homepage": "https://github.com/serkan-ozal/driflyte-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.driflyte/driflyte-mcp-server",
      "description": "Driflyte MCP server which lets AI assistants query topic-specific knowledge from web and GitHub.",
      "repository": {
        "url": "https://github.com/serkan-ozal/driflyte-mcp-server",
        "source": "github"
      },
      "version": "0.1.15",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@driflyte/mcp-server",
          "version": "0.1.15",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/openai"
        }
      ]
    }
  },
  {
    "id": "com.enigma-enigma-mcp-server",
    "name": "com.enigma/enigma-mcp-server",
    "description": "An MCP server that provides access to trusted data about business identity and activity",
    "category": "other",
    "version": "1.0.0",
    "author": "com.enigma",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.enigma.com/http",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.enigma/enigma-mcp-server",
      "description": "An MCP server that provides access to trusted data about business identity and activity",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.enigma.com/http"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.enigma.com/http-token",
          "headers": [
            {
              "description": "Bearer token of Enigma API key. Used to enable authentication without presenting the user with an oAuth login.",
              "isRequired": true,
              "isSecret": true,
              "name": "X-API-Key"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.enigma.com/sse"
        }
      ]
    }
  },
  {
    "id": "com.epidemicsound-mcp-server",
    "name": "com.epidemicsound/mcp-server",
    "description": "Cloud-hosted MCP server for Epidemic Sound",
    "category": "cloud",
    "version": "1.0.0",
    "author": "com.epidemicsound",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://www.epidemicsound.com/a/mcp-server/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.epidemicsound/mcp-server",
      "description": "Cloud-hosted MCP server for Epidemic Sound",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "websiteUrl": "https://www.epidemicsound.com",
      "remotes": [
        {
          "type": "sse",
          "url": "https://www.epidemicsound.com/a/mcp-server/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://www.epidemicsound.com/a/mcp-server/mcp"
        }
      ]
    }
  },
  {
    "id": "com.falkordb-QueryWeaver",
    "name": "com.falkordb/QueryWeaver",
    "description": "An MCP server for Text2SQL: transforms natural language into SQL using graph schema understanding.",
    "category": "other",
    "version": "0.0.11",
    "author": "com.falkordb",
    "repository": "https://github.com/FalkorDB/QueryWeaver",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/falkordb/queryweaver:0.0.11",
    "documentationUrl": "https://github.com/FalkorDB/QueryWeaver#readme",
    "homepage": "https://github.com/FalkorDB/QueryWeaver",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.falkordb/QueryWeaver",
      "description": "An MCP server for Text2SQL: transforms natural language into SQL using graph schema understanding.",
      "repository": {
        "url": "https://github.com/FalkorDB/QueryWeaver",
        "source": "github"
      },
      "version": "0.0.11",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/falkordb/queryweaver:0.0.11",
          "transport": {
            "type": "streamable-http",
            "url": "https://localhost:5000/mcp"
          }
        }
      ]
    }
  },
  {
    "id": "com.figma.mcp-mcp",
    "name": "com.figma.mcp/mcp",
    "description": "The Figma MCP server brings Figma design context directly into your AI workflow.",
    "category": "ai",
    "version": "1.0.3",
    "author": "com.figma.mcp",
    "repository": "https://github.com/figma/mcp-server-guide",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.figma.com/mcp",
    "documentationUrl": "https://github.com/figma/mcp-server-guide#readme",
    "homepage": "https://github.com/figma/mcp-server-guide",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.figma.mcp/mcp",
      "description": "The Figma MCP server brings Figma design context directly into your AI workflow.",
      "title": "Figma MCP Server",
      "repository": {
        "url": "https://github.com/figma/mcp-server-guide",
        "source": "github"
      },
      "version": "1.0.3",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.figma.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.files-python-mcp",
    "name": "com.files/python-mcp",
    "description": "Securely give LLMs controlled access to real-world operations inside your Files.com environment",
    "category": "filesystem",
    "version": "1.0.40",
    "author": "com.files",
    "repository": "https://github.com/Files-com/files-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install files-com-mcp",
    "documentationUrl": "https://github.com/Files-com/files-mcp#readme",
    "homepage": "https://github.com/Files-com/files-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.files/python-mcp",
      "description": "Securely give LLMs controlled access to real-world operations inside your Files.com environment",
      "repository": {
        "url": "https://github.com/Files-com/files-mcp",
        "source": "github"
      },
      "version": "1.0.40",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "files-com-mcp",
          "version": "1.0.40",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Files.com API Key. Create at <your-site>.files.com/ui/apiKeys.",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "FILES_COM_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.findyourfivepm-mcp-server",
    "name": "com.findyourfivepm/mcp-server",
    "description": "Discover cities where it's currently 5PM around the world with timezone and location data.",
    "category": "other",
    "version": "1.0.2",
    "author": "com.findyourfivepm",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.findyourfivepm.com",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.findyourfivepm/mcp-server",
      "description": "Discover cities where it's currently 5PM around the world with timezone and location data.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.findyourfivepm.com"
        }
      ]
    }
  },
  {
    "id": "com.generect-generect-mcp",
    "name": "com.generect/generect-mcp",
    "description": "B2B lead generation and company search through Generect Live API for sales prospecting.",
    "category": "other",
    "version": "0.1.2",
    "author": "com.generect",
    "repository": "https://github.com/generect/generect_mcp.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.generect.com/mcp",
    "documentationUrl": "https://github.com/generect/generect_mcp.git#readme",
    "homepage": "https://github.com/generect/generect_mcp.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.generect/generect-mcp",
      "description": "B2B lead generation and company search through Generect Live API for sales prospecting.",
      "repository": {
        "url": "https://github.com/generect/generect_mcp.git",
        "source": "github"
      },
      "version": "0.1.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.generect.com/mcp",
          "headers": [
            {
              "description": "Bearer Token YOUR_GENERECT_API_KEY from https://beta.generect.com",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.getclockwise-clockwise-mcp",
    "name": "com.getclockwise/clockwise-mcp",
    "description": "An MCP server for managing your calendar, via Clockwise",
    "category": "other",
    "version": "1.0.0",
    "author": "com.getclockwise",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.getclockwise.com/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.getclockwise/clockwise-mcp",
      "description": "An MCP server for managing your calendar, via Clockwise",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.getclockwise.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.getunblocked-unblocked-mcp",
    "name": "com.getunblocked/unblocked-mcp",
    "description": "Unblocked MCP Server",
    "category": "other",
    "version": "1.0.0",
    "author": "com.getunblocked",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://getunblocked.com/api/mcpsse",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.getunblocked/unblocked-mcp",
      "description": "Unblocked MCP Server",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://getunblocked.com/api/mcpsse"
        }
      ]
    }
  },
  {
    "id": "com.gibsonai-mcp",
    "name": "com.gibsonai/mcp",
    "description": "GibsonAI MCP server: manage your databases with natural language",
    "category": "database",
    "version": "1.0.0",
    "author": "com.gibsonai",
    "repository": "https://github.com/gibsonai/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.gibsonai.com/",
    "documentationUrl": "https://github.com/gibsonai/mcp#readme",
    "homepage": "https://github.com/gibsonai/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.gibsonai/mcp",
      "description": "GibsonAI MCP server: manage your databases with natural language",
      "repository": {
        "url": "https://github.com/gibsonai/mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.gibsonai.com/"
        }
      ]
    }
  },
  {
    "id": "com.gitkraken-gk-cli",
    "name": "com.gitkraken/gk-cli",
    "description": "The GitKraken MCP Server for managing repos, PRs, issues across GitHub, GitLab, Bitbucket and more.",
    "category": "version-control",
    "version": "3.1.45",
    "author": "com.gitkraken",
    "repository": "https://github.com/gitkraken/gk-cli",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @gitkraken/gk",
    "documentationUrl": "https://github.com/gitkraken/gk-cli#readme",
    "homepage": "https://github.com/gitkraken/gk-cli",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.gitkraken/gk-cli",
      "description": "The GitKraken MCP Server for managing repos, PRs, issues across GitHub, GitLab, Bitbucket and more.",
      "repository": {
        "url": "https://github.com/gitkraken/gk-cli",
        "source": "github"
      },
      "version": "3.1.45",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@gitkraken/gk",
          "version": "3.1.45",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "mcp",
              "type": "positional"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.gitlab-mcp",
    "name": "com.gitlab/mcp",
    "description": "Official GitLab MCP Server",
    "category": "version-control",
    "version": "0.0.1",
    "author": "com.gitlab",
    "repository": "https://gitlab.com/gitlab-org/gitlab",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://gitlab.com/api/v4/mcp",
    "documentationUrl": "https://gitlab.com/gitlab-org/gitlab#readme",
    "homepage": "https://gitlab.com/gitlab-org/gitlab",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.gitlab/mcp",
      "description": "Official GitLab MCP Server",
      "repository": {
        "url": "https://gitlab.com/gitlab-org/gitlab",
        "source": "gitlab"
      },
      "version": "0.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gitlab.com/api/v4/mcp"
        }
      ]
    }
  },
  {
    "id": "com.hellobasestation-pdfkit",
    "name": "com.hellobasestation/pdfkit",
    "description": "AI-powered PDF tools: fill forms, merge, extract data, and split PDFs",
    "category": "ai",
    "version": "1.0.4",
    "author": "com.hellobasestation",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install pdfkit-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.hellobasestation/pdfkit",
      "description": "AI-powered PDF tools: fill forms, merge, extract data, and split PDFs",
      "title": "PDF Kit",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.4",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "pdfkit-mcp",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.hellobasestation.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.infobip-mcp",
    "name": "com.infobip/mcp",
    "description": "Infobip MCP server for omnichannel communication and messaging. SMS, RCS, WhatsApp, Viber and more.",
    "category": "other",
    "version": "2.0.0",
    "author": "com.infobip",
    "repository": "https://github.com/infobip/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.infobip.com/sms",
    "documentationUrl": "https://github.com/infobip/mcp#readme",
    "homepage": "https://github.com/infobip/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.infobip/mcp",
      "description": "Infobip MCP server for omnichannel communication and messaging. SMS, RCS, WhatsApp, Viber and more.",
      "repository": {
        "url": "https://github.com/infobip/mcp",
        "source": "github"
      },
      "version": "2.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.infobip.com/sms",
          "headers": [
            {
              "description": "Infobip API key",
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.infobip.com/sms/sse",
          "headers": [
            {
              "description": "Infobip API key",
              "isRequired": true,
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.infobip.com/whatsapp",
          "headers": [
            {
              "description": "Infobip API key",
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.infobip.com/whatsapp/sse",
          "headers": [
            {
              "description": "Infobip API key",
              "isRequired": true,
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.infobip.com/viber",
          "headers": [
            {
              "description": "Infobip API key",
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.infobip.com/viber/sse",
          "headers": [
            {
              "description": "Infobip API key",
              "isRequired": true,
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.infobip.com/rcs",
          "headers": [
            {
              "description": "Infobip API key",
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.infobip.com/rcs/sse",
          "headers": [
            {
              "description": "Infobip API key",
              "isRequired": true,
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.infobip.com/2fa",
          "headers": [
            {
              "description": "Infobip API key",
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.infobip.com/2fa/sse",
          "headers": [
            {
              "description": "Infobip API key",
              "isRequired": true,
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.infobip.com/people",
          "headers": [
            {
              "description": "Infobip API key",
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.infobip.com/people/sse",
          "headers": [
            {
              "description": "Infobip API key",
              "isRequired": true,
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.infobip.com/account-management",
          "headers": [
            {
              "description": "Infobip API key",
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.infobip.com/account-management/sse",
          "headers": [
            {
              "description": "Infobip API key",
              "isRequired": true,
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.infobip.com/application-entity",
          "headers": [
            {
              "description": "Infobip API key",
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.infobip.com/application-entity/sse",
          "headers": [
            {
              "description": "Infobip API key",
              "isRequired": true,
              "value": "App {INFOBIP_API_KEY}",
              "isSecret": true,
              "placeholder": "App xxxxxxxxxxxxxxxx",
              "variables": {
                "INFOBIP_API_KEY": {
                  "description": "Your Infobip API key",
                  "isRequired": true,
                  "isSecret": true
                }
              },
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.infobip.com/search"
        },
        {
          "type": "sse",
          "url": "https://mcp.infobip.com/search/sse"
        }
      ]
    }
  },
  {
    "id": "com.iunera-druid-mcp-server",
    "name": "com.iunera/druid-mcp-server",
    "description": "AI-powered MCP server for Apache Druid cluster management and analytic",
    "category": "ai",
    "version": "1.5.1",
    "author": "com.iunera",
    "repository": "https://github.com/iunera/druid-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/iunera/druid-mcp-server:1.5.1",
    "documentationUrl": "https://github.com/iunera/druid-mcp-server#readme",
    "homepage": "https://github.com/iunera/druid-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.iunera/druid-mcp-server",
      "description": "AI-powered MCP server for Apache Druid cluster management and analytic",
      "repository": {
        "url": "https://github.com/iunera/druid-mcp-server",
        "source": "github"
      },
      "version": "1.5.1",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/iunera/druid-mcp-server:1.5.1",
          "runtimeHint": "docker",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Druid router URL for connecting to the Druid cluster",
              "format": "string",
              "name": "DRUID_ROUTER_URL"
            },
            {
              "description": "Druid coordinator URL for querying metadata endpoints (optional)",
              "format": "string",
              "name": "DRUID_COORDINATOR_URL"
            },
            {
              "description": "Username for Druid authentication (optional)",
              "format": "string",
              "name": "DRUID_AUTH_USERNAME"
            },
            {
              "description": "Password for Druid authentication (optional)",
              "format": "string",
              "name": "DRUID_AUTH_PASSWORD"
            },
            {
              "description": "Enable SSL/TLS support for Druid connections",
              "format": "boolean",
              "name": "DRUID_SSL_ENABLED"
            },
            {
              "description": "Skip SSL certificate verification (for development/testing only)",
              "format": "boolean",
              "name": "DRUID_SSL_SKIP_VERIFICATION"
            },
            {
              "description": "Enable read-only mode (only GET requests and SQL queries allowed)",
              "format": "boolean",
              "name": "DRUID_MCP_READONLY_ENABLED"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.jepto-mcp",
    "name": "com.jepto/mcp",
    "description": "Jepto MCP server that provides access to client knowledgebase & analytics for connected data sources",
    "category": "other",
    "version": "1.0.0",
    "author": "com.jepto",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.jepto.com",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.jepto/mcp",
      "description": "Jepto MCP server that provides access to client knowledgebase & analytics for connected data sources",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.jepto.com"
        }
      ]
    }
  },
  {
    "id": "com.joelverhagen.mcp-Knapcode.SampleMcpServer",
    "name": "com.joelverhagen.mcp/Knapcode.SampleMcpServer",
    "description": "A sample MCP server using the MCP C# SDK. Generates random numbers and random weather.",
    "category": "other",
    "version": "0.10.0-beta.10",
    "author": "com.joelverhagen.mcp",
    "repository": "https://github.com/joelverhagen/Knapcode.SampleMcpServer",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/joelverhagen/Knapcode.SampleMcpServer#readme",
    "homepage": "https://github.com/joelverhagen/Knapcode.SampleMcpServer",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.joelverhagen.mcp/Knapcode.SampleMcpServer",
      "description": "A sample MCP server using the MCP C# SDK. Generates random numbers and random weather.",
      "repository": {
        "url": "https://github.com/joelverhagen/Knapcode.SampleMcpServer",
        "source": "github"
      },
      "version": "0.10.0-beta.10",
      "packages": [
        {
          "registryType": "nuget",
          "registryBaseUrl": "https://api.nuget.org",
          "identifier": "Knapcode.SampleMcpServer",
          "version": "0.10.0-beta.10",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "mcp",
              "type": "positional"
            },
            {
              "value": "start",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "value": "{weather_choices}",
              "variables": {
                "weather_choices": {
                  "description": "Comma separated list of weather descriptions to randomly select."
                }
              },
              "name": "WEATHER_CHOICES"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.jotform-mcp",
    "name": "com.jotform/mcp",
    "description": "Jotform MCP",
    "category": "other",
    "version": "1.0.0",
    "author": "com.jotform",
    "repository": "https://github.com/jotform/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.jotform.com/",
    "documentationUrl": "https://github.com/jotform/mcp-server#readme",
    "homepage": "https://github.com/jotform/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.jotform/mcp",
      "description": "Jotform MCP",
      "repository": {
        "url": "https://github.com/jotform/mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.jotform.com/"
        }
      ]
    }
  },
  {
    "id": "com.jumpcloud-jumpcloud-genai",
    "name": "com.jumpcloud/jumpcloud-genai",
    "description": "An MCP server that provides an API to LLMs to manage their JumpCloud resources.",
    "category": "cloud",
    "version": "0.0.38",
    "author": "com.jumpcloud",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.jumpcloud.com/v1",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.jumpcloud/jumpcloud-genai",
      "description": "An MCP server that provides an API to LLMs to manage their JumpCloud resources.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.38",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.jumpcloud.com/v1"
        }
      ]
    }
  },
  {
    "id": "com.keboola-mcp",
    "name": "com.keboola/mcp",
    "description": "Connect your AI assistants to Keboola and expose your data, transformations, SQL queries, ...",
    "category": "ai",
    "version": "1.26.1",
    "author": "com.keboola",
    "repository": "https://github.com/keboola/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install keboola-mcp-server",
    "documentationUrl": "https://github.com/keboola/mcp-server#readme",
    "homepage": "https://github.com/keboola/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.keboola/mcp",
      "description": "Connect your AI assistants to Keboola and expose your data, transformations, SQL queries, ...",
      "repository": {
        "url": "https://github.com/keboola/mcp-server",
        "source": "github"
      },
      "version": "1.26.1",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "keboola-mcp-server",
          "version": "1.26.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.us-east4.gcp.keboola.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.letta-memory-mcp",
    "name": "com.letta/memory-mcp",
    "description": "MCP server for AI memory management using Letta - Standard MCP format",
    "category": "ai",
    "version": "2.0.2",
    "author": "com.letta",
    "repository": "https://github.com/letta-ai/memory-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @letta-ai/memory-mcp",
    "documentationUrl": "https://github.com/letta-ai/memory-mcp#readme",
    "homepage": "https://github.com/letta-ai/memory-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.letta/memory-mcp",
      "description": "MCP server for AI memory management using Letta - Standard MCP format",
      "repository": {
        "url": "https://github.com/letta-ai/memory-mcp",
        "source": "github"
      },
      "version": "2.0.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@letta-ai/memory-mcp",
          "version": "2.0.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Letta API key for memory operations",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "LETTA_API_KEY"
            },
            {
              "description": "Unique user identifier for associated memories",
              "format": "string",
              "name": "LETTA_USER_ID"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.make-mcp-server",
    "name": "com.make/mcp-server",
    "description": "MCP server for building, running, and managing Make automations.",
    "category": "other",
    "version": "1.0.0",
    "author": "com.make",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.make.com/sse",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.make/mcp-server",
      "description": "MCP server for building, running, and managing Make automations.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.make.com/sse"
        }
      ]
    }
  },
  {
    "id": "com.medusajs-medusa-mcp",
    "name": "com.medusajs/medusa-mcp",
    "description": "Retrieve information from the Medusa documentation to assist you with your Medusa development.",
    "category": "other",
    "version": "1.0.0",
    "author": "com.medusajs",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://docs.medusajs.com/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.medusajs/medusa-mcp",
      "description": "Retrieve information from the Medusa documentation to assist you with your Medusa development.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://docs.medusajs.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.mermaidchart-mermaid-mcp",
    "name": "com.mermaidchart/mermaid-mcp",
    "description": "MCP server for Mermaid diagram validation and rendering",
    "category": "ai",
    "version": "1.0.0",
    "author": "com.mermaidchart",
    "repository": "https://github.com/Mermaid-Chart/mermaid-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.mermaidchart.com/mcp",
    "documentationUrl": "https://github.com/Mermaid-Chart/mermaid-mcp#readme",
    "homepage": "https://github.com/Mermaid-Chart/mermaid-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.mermaidchart/mermaid-mcp",
      "description": "MCP server for Mermaid diagram validation and rendering",
      "repository": {
        "url": "https://github.com/Mermaid-Chart/mermaid-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.mermaidchart.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.mermaidchart.com/sse"
        }
      ]
    }
  },
  {
    "id": "com.mintmcp-gcal",
    "name": "com.mintmcp/gcal",
    "description": "A MCP server that works with Google Calendar to manage event listing, reading, and updates.",
    "category": "other",
    "version": "1.0.4",
    "author": "com.mintmcp",
    "repository": "https://github.com/mintmcp/servers",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://gcal.mintmcp.com/mcp",
    "documentationUrl": "https://github.com/mintmcp/servers#readme",
    "homepage": "https://github.com/mintmcp/servers",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.mintmcp/gcal",
      "description": "A MCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "repository": {
        "url": "https://github.com/mintmcp/servers",
        "source": "github"
      },
      "version": "1.0.4",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.mintmcp-gmail",
    "name": "com.mintmcp/gmail",
    "description": "A MCP server for Gmail that lets you search, read, and draft emails and replies.",
    "category": "ai",
    "version": "1.0.5",
    "author": "com.mintmcp",
    "repository": "https://github.com/mintmcp/servers",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://gmail.mintmcp.com/mcp",
    "documentationUrl": "https://github.com/mintmcp/servers#readme",
    "homepage": "https://github.com/mintmcp/servers",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.mintmcp/gmail",
      "description": "A MCP server for Gmail that lets you search, read, and draft emails and replies.",
      "repository": {
        "url": "https://github.com/mintmcp/servers",
        "source": "github"
      },
      "version": "1.0.5",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gmail.mintmcp.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.mintmcp-outlook-calendar",
    "name": "com.mintmcp/outlook-calendar",
    "description": "A MCP server that works with Outlook Calendar to manage event listing, reading, and updates.",
    "category": "other",
    "version": "1.0.0",
    "author": "com.mintmcp",
    "repository": "https://github.com/mintmcp/servers",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://outlook-calendar.mintmcp.com/mcp",
    "documentationUrl": "https://github.com/mintmcp/servers#readme",
    "homepage": "https://github.com/mintmcp/servers",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.mintmcp/outlook-calendar",
      "description": "A MCP server that works with Outlook Calendar to manage event listing, reading, and updates.",
      "repository": {
        "url": "https://github.com/mintmcp/servers",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://outlook-calendar.mintmcp.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.mintmcp-outlook-email",
    "name": "com.mintmcp/outlook-email",
    "description": "A MCP server for Outlook email that lets you search, read, and draft emails and replies.",
    "category": "ai",
    "version": "1.0.1",
    "author": "com.mintmcp",
    "repository": "https://github.com/mintmcp/servers",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://outlook-email.mintmcp.com/mcp",
    "documentationUrl": "https://github.com/mintmcp/servers#readme",
    "homepage": "https://github.com/mintmcp/servers",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.mintmcp/outlook-email",
      "description": "A MCP server for Outlook email that lets you search, read, and draft emails and replies.",
      "repository": {
        "url": "https://github.com/mintmcp/servers",
        "source": "github"
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://outlook-email.mintmcp.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.monday-monday.com",
    "name": "com.monday/monday.com",
    "description": "MCP server for monday.com integration.",
    "category": "other",
    "version": "0.0.1",
    "author": "com.monday",
    "repository": "https://github.com/mondaycom/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.monday.com/mcp",
    "documentationUrl": "https://github.com/mondaycom/mcp#readme",
    "homepage": "https://github.com/mondaycom/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.monday/monday.com",
      "description": "MCP server for monday.com integration.",
      "repository": {
        "url": "https://github.com/mondaycom/mcp",
        "source": "github"
      },
      "version": "0.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.monday.com/mcp",
          "headers": [
            {
              "description": "monday.com API token (format: 'Bearer your_token_here' or just 'your_token_here')",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.monday.com/sse",
          "headers": [
            {
              "description": "monday.com API token (format: 'Bearer your_token_here' or just 'your_token_here')",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.mux-mcp",
    "name": "com.mux/mcp",
    "description": "The official MCP Server for the Mux API",
    "category": "other",
    "version": "12.8.0",
    "author": "com.mux",
    "repository": "https://github.com/muxinc/mux-node-sdk",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @mux/mcp",
    "documentationUrl": "https://github.com/muxinc/mux-node-sdk#readme",
    "homepage": "https://github.com/muxinc/mux-node-sdk",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.mux/mcp",
      "description": "The official MCP Server for the Mux API",
      "repository": {
        "url": "https://github.com/muxinc/mux-node-sdk",
        "source": "github",
        "subfolder": "packages/mcp-server"
      },
      "version": "12.8.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@mux/mcp",
          "version": "12.8.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Mux access token ID",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "MUX_TOKEN_ID"
            },
            {
              "description": "Your Mux access token secret",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "MUX_TOKEN_SECRET"
            },
            {
              "description": "Your JWT signing key ID, for use with signed playback IDs",
              "format": "string",
              "isSecret": true,
              "name": "MUX_SIGNING_KEY"
            },
            {
              "description": "Your JWT private key, for use with signed playback IDs",
              "format": "string",
              "isSecret": true,
              "name": "MUX_PRIVATE_KEY"
            }
          ]
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.mux.com",
          "headers": [
            {
              "description": "Optional basic authorization header you can include, combining your Access Token and Secret using HTTP Basic Auth. If not provided, authorization will be handled via OAuth.",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.notion-mcp",
    "name": "com.notion/mcp",
    "description": "Official Notion MCP server",
    "category": "other",
    "version": "1.0.1",
    "author": "com.notion",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.notion.com/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.notion/mcp",
      "description": "Official Notion MCP server",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.notion.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.notion.com/sse"
        }
      ]
    }
  },
  {
    "id": "com.onkernel-kernel-mcp-server",
    "name": "com.onkernel/kernel-mcp-server",
    "description": "Access Kernel's cloud-based browsers and app actions via MCP (remote HTTP + OAuth).",
    "category": "cloud",
    "version": "1.0.0",
    "author": "com.onkernel",
    "repository": "https://github.com/onkernel/kernel-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.onkernel.com/mcp",
    "documentationUrl": "https://github.com/onkernel/kernel-mcp-server#readme",
    "homepage": "https://github.com/onkernel/kernel-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.onkernel/kernel-mcp-server",
      "description": "Access Kernel's cloud-based browsers and app actions via MCP (remote HTTP + OAuth).",
      "repository": {
        "url": "https://github.com/onkernel/kernel-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.onkernel.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.opsmill-infrahub-mcp",
    "name": "com.opsmill/infrahub-mcp",
    "description": "An MCP server connects your AI assistants to Infrahub using the open MCP standard.",
    "category": "ai",
    "version": "0.1.2",
    "author": "com.opsmill",
    "repository": "https://github.com/opsmill/infrahub-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install infrahub-mcp",
    "documentationUrl": "https://github.com/opsmill/infrahub-mcp#readme",
    "homepage": "https://github.com/opsmill/infrahub-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.opsmill/infrahub-mcp",
      "description": "An MCP server connects your AI assistants to Infrahub using the open MCP standard.",
      "repository": {
        "url": "https://github.com/opsmill/infrahub-mcp",
        "source": "github"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "infrahub-mcp",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "The URL/address of your Infrahub instance",
              "isRequired": true,
              "format": "string",
              "name": "INFRAHUB_ADDRESS"
            },
            {
              "description": "Your Infrahub API token for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "INFRAHUB_API_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.pearl.mcp-pearl-api-mcp-server",
    "name": "com.pearl.mcp/pearl-api-mcp-server",
    "description": "Hybrid human + AI expertise for faster, trusted answers and decisions via MCP Server.",
    "category": "web",
    "version": "1.0.0",
    "author": "com.pearl.mcp",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.pearl.com/sse",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.pearl.mcp/pearl-api-mcp-server",
      "description": "Hybrid human + AI expertise for faster, trusted answers and decisions via MCP Server.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.pearl.com/sse",
          "headers": [
            {
              "description": "Pearl API key for authenticated tool access.",
              "name": "X-API-Key"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.pearl.com/mcp",
          "headers": [
            {
              "description": "Pearl API key for authenticated tool access.",
              "name": "X-API-Key"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.peek-mcp",
    "name": "com.peek/mcp",
    "description": "Build travel itineraries with Peek's 300k+ experiences. Search, details, and availability.",
    "category": "ai",
    "version": "0.1.0",
    "author": "com.peek",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.peek.com",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.peek/mcp",
      "description": "Build travel itineraries with Peek's 300k+ experiences. Search, details, and availability.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.peek.com"
        }
      ]
    }
  },
  {
    "id": "com.pga-pga-golf",
    "name": "com.pga/pga-golf",
    "description": "PGA's official MCP Server for all things golf-related. Find a coach, play golf, improve your game.",
    "category": "other",
    "version": "1.0.0",
    "author": "com.pga",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.pga.com/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.pga/pga-golf",
      "description": "PGA's official MCP Server for all things golf-related. Find a coach, play golf, improve your game.",
      "title": "PGA Golf",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "websiteUrl": "https://mcp.pga.com",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.pga.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.picaos-mcp",
    "name": "com.picaos/mcp",
    "description": "A Model Context Protocol Server for Pica",
    "category": "other",
    "version": "2.0.3",
    "author": "com.picaos",
    "repository": "https://github.com/picahq/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @picahq/mcp",
    "documentationUrl": "https://github.com/picahq/mcp#readme",
    "homepage": "https://github.com/picahq/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.picaos/mcp",
      "description": "A Model Context Protocol Server for Pica",
      "repository": {
        "url": "https://github.com/picahq/mcp",
        "source": "github"
      },
      "version": "2.0.3",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@picahq/mcp",
          "version": "2.0.3",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "PICA_SECRET"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.predictleads-mcp",
    "name": "com.predictleads/mcp",
    "description": "Company Insights: job postings, tech stack, news events, key customers, similar companies...",
    "category": "other",
    "version": "1.0.0",
    "author": "com.predictleads",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.predictleads.com/",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.predictleads/mcp",
      "description": "Company Insights: job postings, tech stack, news events, key customers, similar companies...",
      "title": "PredictLeads",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.predictleads.com/",
          "headers": [
            {
              "description": "API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "X-Api-Key"
            },
            {
              "description": "API token for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "X-Api-Token"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.proxylink-mcp-mcp-server",
    "name": "com.proxylink-mcp/mcp-server",
    "description": "ProxyLink MCP server for finding and booking home service professionals",
    "category": "other",
    "version": "2.0.0",
    "author": "com.proxylink-mcp",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://proxylink-mcp.com",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.proxylink-mcp/mcp-server",
      "description": "ProxyLink MCP server for finding and booking home service professionals",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://proxylink-mcp.com"
        }
      ]
    }
  },
  {
    "id": "com.pulsemcp.servers-pulse-fetch",
    "name": "com.pulsemcp.servers/pulse-fetch",
    "description": "MCP server that extracts clean, structured content from web pages with anti-bot bypass capabilities.",
    "category": "web",
    "version": "0.2.14",
    "author": "com.pulsemcp.servers",
    "repository": "https://github.com/pulsemcp/mcp-servers",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @pulsemcp/pulse-fetch",
    "documentationUrl": "https://github.com/pulsemcp/mcp-servers#readme",
    "homepage": "https://github.com/pulsemcp/mcp-servers",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.pulsemcp.servers/pulse-fetch",
      "description": "MCP server that extracts clean, structured content from web pages with anti-bot bypass capabilities.",
      "repository": {
        "url": "https://github.com/pulsemcp/mcp-servers",
        "source": "github",
        "subfolder": "productionized/pulse-fetch"
      },
      "version": "0.2.14",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@pulsemcp/pulse-fetch",
          "version": "0.2.14",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "API key for Firecrawl service to bypass anti-bot measures",
              "isSecret": true,
              "name": "FIRECRAWL_API_KEY"
            },
            {
              "description": "Bearer token for BrightData Web Unlocker service",
              "isSecret": true,
              "name": "BRIGHTDATA_API_KEY"
            },
            {
              "description": "Path to markdown file containing scraping strategy configuration",
              "default": "/tmp/pulse-fetch/strategy.md",
              "name": "STRATEGY_CONFIG_PATH"
            },
            {
              "description": "Optimization strategy for scraping: cost or speed",
              "default": "cost",
              "choices": [
                "cost",
                "speed"
              ],
              "name": "OPTIMIZE_FOR"
            },
            {
              "description": "Storage backend for saved resources: memory or filesystem",
              "default": "memory",
              "choices": [
                "memory",
                "filesystem"
              ],
              "name": "MCP_RESOURCE_STORAGE"
            },
            {
              "description": "Directory for filesystem storage (only used with filesystem type)",
              "default": "/tmp/pulse-fetch/resources",
              "name": "MCP_RESOURCE_FILESYSTEM_ROOT"
            },
            {
              "description": "Skip API authentication health checks at startup",
              "format": "boolean",
              "default": "false",
              "name": "SKIP_HEALTH_CHECKS"
            },
            {
              "description": "LLM provider for extract feature: anthropic, openai, openai-compatible",
              "choices": [
                "anthropic",
                "openai",
                "openai-compatible"
              ],
              "name": "LLM_PROVIDER"
            },
            {
              "description": "API key for the chosen LLM provider",
              "isSecret": true,
              "name": "LLM_API_KEY"
            },
            {
              "description": "Base URL for OpenAI-compatible providers",
              "name": "LLM_API_BASE_URL"
            },
            {
              "description": "Specific model to use for extraction",
              "name": "LLM_MODEL"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.qualityclouds-mcp-server-qualityclouds",
    "name": "com.qualityclouds/mcp-server-qualityclouds",
    "description": "Secure MCP runtime server for scanning and autofixing code issues",
    "category": "cloud",
    "version": "1.0.0",
    "author": "com.qualityclouds",
    "repository": "https://github.com/qualityclouds/qc_mcp_server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.qualityclouds.com/mcp",
    "documentationUrl": "https://github.com/qualityclouds/qc_mcp_server#readme",
    "homepage": "https://github.com/qualityclouds/qc_mcp_server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.qualityclouds/mcp-server-qualityclouds",
      "description": "Secure MCP runtime server for scanning and autofixing code issues",
      "title": "LiveCheck AI",
      "repository": {
        "url": "https://github.com/qualityclouds/qc_mcp_server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.qualityclouds.com/mcp",
          "headers": [
            {
              "description": "API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.qualityclouds.com/mcp",
          "headers": [
            {
              "description": "API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.redpanda-docs-mcp",
    "name": "com.redpanda/docs-mcp",
    "description": "Get authoritative answers to questions about Redpanda.",
    "category": "other",
    "version": "1.0.0",
    "author": "com.redpanda",
    "repository": "https://github.com/redpanda-data/docs-site",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://docs.redpanda.com/mcp",
    "documentationUrl": "https://github.com/redpanda-data/docs-site#readme",
    "homepage": "https://github.com/redpanda-data/docs-site",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.redpanda/docs-mcp",
      "description": "Get authoritative answers to questions about Redpanda.",
      "repository": {
        "url": "https://github.com/redpanda-data/docs-site",
        "source": "github",
        "subfolder": "netlify"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://docs.redpanda.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.remote-mcp-registry-mcp",
    "name": "com.remote-mcp/registry-mcp",
    "description": "An MCP server that serves informtaion from the official MCP registry",
    "category": "ai",
    "version": "1.0.0",
    "author": "com.remote-mcp",
    "repository": "https://github.com/jaw9c/mcp-registry-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://registry-mcp.remote-mcp.com",
    "documentationUrl": "https://github.com/jaw9c/mcp-registry-mcp#readme",
    "homepage": "https://github.com/jaw9c/mcp-registry-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.remote-mcp/registry-mcp",
      "description": "An MCP server that serves informtaion from the official MCP registry",
      "repository": {
        "url": "https://github.com/jaw9c/mcp-registry-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://registry-mcp.remote-mcp.com"
        },
        {
          "type": "sse",
          "url": "https://registry-mcp.remote-mcp.com/sse"
        }
      ]
    }
  },
  {
    "id": "com.ritzademo-acme-todo",
    "name": "com.ritzademo/acme-todo",
    "description": "An MCP server for a simple todo list",
    "category": "other",
    "version": "1.0.0",
    "author": "com.ritzademo",
    "repository": "https://github.com/ritza-co/acme-todo",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.ritzademo.com/mcp/ritza-rzx-our91",
    "documentationUrl": "https://github.com/ritza-co/acme-todo#readme",
    "homepage": "https://github.com/ritza-co/acme-todo",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.ritzademo/acme-todo",
      "description": "An MCP server for a simple todo list",
      "repository": {
        "url": "https://github.com/ritza-co/acme-todo",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.ritzademo.com/mcp/ritza-rzx-our91"
        }
      ]
    }
  },
  {
    "id": "com.smartbear-smartbear-mcp",
    "name": "com.smartbear/smartbear-mcp",
    "description": "MCP server for AI access to SmartBear tools, including BugSnag, Reflect, API Hub, PactFlow.",
    "category": "ai",
    "version": "0.9.0",
    "author": "com.smartbear",
    "repository": "https://github.com/SmartBear/smartbear-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @smartbear/mcp",
    "documentationUrl": "https://github.com/SmartBear/smartbear-mcp#readme",
    "homepage": "https://github.com/SmartBear/smartbear-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json#/definitions/ServerDetail",
      "name": "com.smartbear/smartbear-mcp",
      "description": "MCP server for AI access to SmartBear tools, including BugSnag, Reflect, API Hub, PactFlow.",
      "title": "SmartBear MCP",
      "repository": {
        "url": "https://github.com/SmartBear/smartbear-mcp",
        "source": "github"
      },
      "version": "0.9.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@smartbear/mcp",
          "version": "0.9.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "BugSnag auth token. Leave empty to disable BugSnag tools. Learn more: https://developer.smartbear.com/smartbear-mcp/docs/bugsnag-integration",
              "isSecret": true,
              "name": "BUGSNAG_AUTH_TOKEN"
            },
            {
              "description": "BugSnag project API key (optional; narrows interactions to a single project). Learn more: https://developer.smartbear.com/smartbear-mcp/docs/bugsnag-integration",
              "name": "BUGSNAG_PROJECT_API_KEY"
            },
            {
              "description": "Reflect API token. Leave empty to disable Reflect tools. Learn more: https://developer.smartbear.com/smartbear-mcp/docs/test-hub-integration",
              "isSecret": true,
              "name": "REFLECT_API_TOKEN"
            },
            {
              "description": "API Hub API key. Leave empty to disable API Hub tools. Learn more: https://developer.smartbear.com/smartbear-mcp/docs/api-hub-integration",
              "isSecret": true,
              "name": "API_HUB_API_KEY"
            },
            {
              "description": "PactFlow/Pact Broker base URL. Leave empty to disable Pact tools. Learn more: https://developer.smartbear.com/smartbear-mcp/docs/contract-testing-with-pactflow",
              "name": "PACT_BROKER_BASE_URL"
            },
            {
              "description": "PactFlow authentication token. Learn more: https://developer.smartbear.com/smartbear-mcp/docs/contract-testing-with-pactflow",
              "isSecret": true,
              "name": "PACT_BROKER_TOKEN"
            },
            {
              "description": "Pact Broker username (alternative to token). Learn more: https://developer.smartbear.com/smartbear-mcp/docs/contract-testing-with-pactflow",
              "name": "PACT_BROKER_USERNAME"
            },
            {
              "description": "Pact Broker password (alternative to token). Learn more: https://developer.smartbear.com/smartbear-mcp/docs/contract-testing-with-pactflow",
              "isSecret": true,
              "name": "PACT_BROKER_PASSWORD"
            },
            {
              "description": "The Zephyr Cloud API token for authentication. Learn more: https://support.smartbear.com/zephyr/docs/en/rest-api/api-access-tokens-management.html",
              "isSecret": true,
              "name": "ZEPHYR_API_TOKEN"
            },
            {
              "description": " The Zephyr Cloud API base url. Should be changed depending on the region of your Jira instance. Learn more: https://support.smartbear.com/zephyr-scale-cloud/api-docs/#section/Authentication/Accessing-the-API",
              "name": "ZEPHYR_BASE_URL"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.smartling-smartling-mcp-server",
    "name": "com.smartling/smartling-mcp-server",
    "description": "Smartling MCP Server",
    "category": "other",
    "version": "1.0.0",
    "author": "com.smartling",
    "repository": "https://github.com/Smartling/smartling-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.smartling.com/mcp",
    "documentationUrl": "https://github.com/Smartling/smartling-mcp-server#readme",
    "homepage": "https://github.com/Smartling/smartling-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.smartling/smartling-mcp-server",
      "description": "Smartling MCP Server",
      "repository": {
        "url": "https://github.com/Smartling/smartling-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.smartling.com/mcp",
          "headers": [
            {
              "description": "Smartling MCP Token for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "X-SL-Authentication"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.sonatype-dependency-management-mcp-server",
    "name": "com.sonatype/dependency-management-mcp-server",
    "description": "Sonatype component intelligence: versions, security analysis, and Trust Score recommendations",
    "category": "other",
    "version": "1.0.1",
    "author": "com.sonatype",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.seaworthy.sonatype.com/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.sonatype/dependency-management-mcp-server",
      "description": "Sonatype component intelligence: versions, security analysis, and Trust Score recommendations",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "websiteUrl": "https://www.sonatype.com",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.seaworthy.sonatype.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.statsig-statsig-mcp-server",
    "name": "com.statsig/statsig-mcp-server",
    "description": "MCP server for Statsig API - interact with Statsig's feature flags, experiments, and analytics",
    "category": "other",
    "version": "1.0.0",
    "author": "com.statsig",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://api.statsig.com/v1/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.statsig/statsig-mcp-server",
      "description": "MCP server for Statsig API - interact with Statsig's feature flags, experiments, and analytics",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.statsig.com/v1/mcp",
          "headers": [
            {
              "description": "Statsig Console API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "statsig-api-key"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.streamlinehq-mcp",
    "name": "com.streamlinehq/mcp",
    "description": "The Streamline MCP Server allow users to search, and download assets in PNG or SVG formats.",
    "category": "ai",
    "version": "1.0.0",
    "author": "com.streamlinehq",
    "repository": "https://github.com/webalys-hq/streamline-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://public-api.streamlinehq.com/mcp",
    "documentationUrl": "https://github.com/webalys-hq/streamline-mcp-server#readme",
    "homepage": "https://github.com/webalys-hq/streamline-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.streamlinehq/mcp",
      "description": "The Streamline MCP Server allow users to search, and download assets in PNG or SVG formats.",
      "title": "Streamline MCP Server",
      "repository": {
        "url": "https://github.com/webalys-hq/streamline-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://public-api.streamlinehq.com/mcp",
          "headers": [
            {
              "description": "API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "X-API-Key"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.supabase-mcp",
    "name": "com.supabase/mcp",
    "description": "MCP server for interacting with the Supabase platform",
    "category": "other",
    "version": "0.5.6",
    "author": "com.supabase",
    "repository": "https://github.com/supabase-community/supabase-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @supabase/mcp-server-supabase",
    "documentationUrl": "https://github.com/supabase-community/supabase-mcp#readme",
    "homepage": "https://github.com/supabase-community/supabase-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.supabase/mcp",
      "description": "MCP server for interacting with the Supabase platform",
      "repository": {
        "url": "https://github.com/supabase-community/supabase-mcp",
        "source": "github",
        "subfolder": "packages/mcp-server-supabase"
      },
      "version": "0.5.6",
      "websiteUrl": "https://supabase.com/mcp",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@supabase/mcp-server-supabase",
          "version": "0.5.6",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "description": "Supabase project reference ID",
              "format": "string",
              "type": "named",
              "name": "--project-ref"
            },
            {
              "description": "Enable read-only mode",
              "format": "boolean",
              "type": "named",
              "name": "--read-only"
            },
            {
              "description": "Comma-separated list of features to enable",
              "format": "string",
              "type": "named",
              "name": "--features"
            },
            {
              "description": "Custom API URL",
              "format": "string",
              "type": "named",
              "name": "--api-url"
            }
          ],
          "environmentVariables": [
            {
              "description": "Personal access token for Supabase API",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "SUPABASE_ACCESS_TOKEN"
            }
          ]
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.supabase.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.tableall-mcp",
    "name": "com.tableall/mcp",
    "description": "Access Japan's finest Michelin-starred restaurants. Search, check availability, and browse menus.",
    "category": "ai",
    "version": "1.0.0",
    "author": "com.tableall",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.tableall.com/sse",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.tableall/mcp",
      "description": "Access Japan's finest Michelin-starred restaurants. Search, check availability, and browse menus.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.tableall.com/sse"
        }
      ]
    }
  },
  {
    "id": "com.teamwork-mcp",
    "name": "com.teamwork/mcp",
    "description": "The Teamwork.com official MCP server helps teams efficiently manage client projects with AI.",
    "category": "ai",
    "version": "1.6.8",
    "author": "com.teamwork",
    "repository": "https://github.com/teamwork/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/teamwork/mcp:v1.6.8",
    "documentationUrl": "https://github.com/teamwork/mcp#readme",
    "homepage": "https://github.com/teamwork/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.teamwork/mcp",
      "description": "The Teamwork.com official MCP server helps teams efficiently manage client projects with AI.",
      "repository": {
        "url": "https://github.com/teamwork/mcp",
        "source": "github"
      },
      "version": "1.6.8",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/teamwork/mcp:v1.6.8",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TW_MCP_BEARER_TOKEN"
            },
            {
              "description": "Choose log output format between 'text' or 'json'. Default is 'text'.",
              "format": "string",
              "name": "TW_MCP_LOG_FORMAT"
            },
            {
              "description": "Choose log level between 'debug', 'info', 'warn' or 'error'. Default is 'info'.",
              "format": "string",
              "name": "TW_MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.ai.teamwork.com",
          "headers": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.ai.teamwork.com",
          "headers": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.textarttools-textarttools-mcp",
    "name": "com.textarttools/textarttools-mcp",
    "description": "Unicode text styling and ASCII art generation with 23 styles and 322+ figlet fonts",
    "category": "other",
    "version": "1.1.1",
    "author": "com.textarttools",
    "repository": "https://github.com/humanjesse/textarttools-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.textarttools.com/",
    "documentationUrl": "https://github.com/humanjesse/textarttools-mcp#readme",
    "homepage": "https://github.com/humanjesse/textarttools-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.textarttools/textarttools-mcp",
      "description": "Unicode text styling and ASCII art generation with 23 styles and 322+ figlet fonts",
      "repository": {
        "url": "https://github.com/humanjesse/textarttools-mcp",
        "source": "github"
      },
      "version": "1.1.1",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.textarttools.com/"
        }
      ]
    }
  },
  {
    "id": "com.timeslope-timeslope-mcp",
    "name": "com.timeslope/timeslope-mcp",
    "description": "Equip AI with tools for researching economic data from Federal Reserve Economic Data (FRED).",
    "category": "ai",
    "version": "0.1.0",
    "author": "com.timeslope",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.timeslope.com/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.timeslope/timeslope-mcp",
      "description": "Equip AI with tools for researching economic data from Federal Reserve Economic Data (FRED).",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.timeslope.com/mcp",
          "headers": [
            {
              "description": "Authorization Bearer header containing API key or OAuth token",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.unifiedoffer-mcp-server",
    "name": "com.unifiedoffer/mcp-server",
    "description": "AI-powered product search, affiliate links, and price negotiation for e-commerce platforms",
    "category": "ai",
    "version": "2.0.2",
    "author": "com.unifiedoffer",
    "repository": "https://github.com/Chris85appding/unified-offer-protocol-front",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @unifiedoffer/mcp-server",
    "documentationUrl": "https://github.com/Chris85appding/unified-offer-protocol-front#readme",
    "homepage": "https://github.com/Chris85appding/unified-offer-protocol-front",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.unifiedoffer/mcp-server",
      "description": "AI-powered product search, affiliate links, and price negotiation for e-commerce platforms",
      "title": "Unified Offer Protocol MCP Server",
      "repository": {
        "url": "https://github.com/Chris85appding/unified-offer-protocol-front",
        "source": "github"
      },
      "version": "2.0.2",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@unifiedoffer/mcp-server",
          "version": "2.0.1",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "pypi",
          "identifier": "uop-mcp-server",
          "version": "2.0.1",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "oci",
          "identifier": "docker.io/chrisappding/mcp-server:2.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.unifiedoffer.com/functions/v1/mcp-http-wrapper",
          "headers": [
            {
              "description": "API key for authentication. Get your free API key at https://unifiedoffer.com",
              "isRequired": true,
              "isSecret": true,
              "name": "x-api-key"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.usesideways-sideways",
    "name": "com.usesideways/sideways",
    "description": "Use Sideways for unexpected questions and lateral thinking prompts to break through mental blocks.",
    "category": "other",
    "version": "1.0.6",
    "author": "com.usesideways",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://usesideways.com/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.usesideways/sideways",
      "description": "Use Sideways for unexpected questions and lateral thinking prompts to break through mental blocks.",
      "title": "Sideways",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.6",
      "websiteUrl": "https://usesideways.com",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://usesideways.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://usesideways.com/sse"
        }
      ]
    }
  },
  {
    "id": "com.vaadin-docs-mcp",
    "name": "com.vaadin/docs-mcp",
    "description": "Provides Vaadin Documentation and help with development tasks",
    "category": "other",
    "version": "1.0.0",
    "author": "com.vaadin",
    "repository": "https://github.com/vaadin/vaadin-documentation-services",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.vaadin.com/docs/mcp",
    "documentationUrl": "https://github.com/vaadin/vaadin-documentation-services#readme",
    "homepage": "https://github.com/vaadin/vaadin-documentation-services",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.vaadin/docs-mcp",
      "description": "Provides Vaadin Documentation and help with development tasks",
      "repository": {
        "url": "https://github.com/vaadin/vaadin-documentation-services",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.vaadin.com/docs/mcp"
        }
      ]
    }
  },
  {
    "id": "com.vercel-vercel-mcp",
    "name": "com.vercel/vercel-mcp",
    "description": "An MCP server for Vercel",
    "category": "other",
    "version": "0.0.2",
    "author": "com.vercel",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.vercel.com",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.vercel/vercel-mcp",
      "description": "An MCP server for Vercel",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.vercel.com"
        }
      ]
    }
  },
  {
    "id": "com.wallet-connectors-wallet-verifier-mcp",
    "name": "com.wallet-connectors/wallet-verifier-mcp",
    "description": "MCP server for verifying EUDI/Talao wallet data via OIDC4VP (pull) for AI agents.",
    "category": "ai",
    "version": "1.1.0",
    "author": "com.wallet-connectors",
    "repository": "https://github.com/TalaoDAO/connectors",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://wallet-connectors.com/mcp",
    "documentationUrl": "https://github.com/TalaoDAO/connectors#readme",
    "homepage": "https://github.com/TalaoDAO/connectors",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.wallet-connectors/wallet-verifier-mcp",
      "description": "MCP server for verifying EUDI/Talao wallet data via OIDC4VP (pull) for AI agents.",
      "repository": {
        "url": "https://github.com/TalaoDAO/connectors",
        "source": "github"
      },
      "version": "1.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://wallet-connectors.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.webflow-mcp",
    "name": "com.webflow/mcp",
    "description": "AI-powered design and management for Webflow Sites",
    "category": "web",
    "version": "2.0.0",
    "author": "com.webflow",
    "repository": "https://github.com/webflow/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.webflow.com/mcp",
    "documentationUrl": "https://github.com/webflow/mcp-server#readme",
    "homepage": "https://github.com/webflow/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "com.webflow/mcp",
      "description": "AI-powered design and management for Webflow Sites",
      "repository": {
        "url": "https://github.com/webflow/mcp-server",
        "source": "github"
      },
      "version": "2.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.webflow.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.windowsforum-mcp-server",
    "name": "com.windowsforum/mcp-server",
    "description": "MCP server for WindowsForum.com with search, document retrieval, and real-time forum analytics.",
    "category": "other",
    "version": "1.0.0",
    "author": "com.windowsforum",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.windowsforum.com",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.windowsforum/mcp-server",
      "description": "MCP server for WindowsForum.com with search, document retrieval, and real-time forum analytics.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.windowsforum.com"
        }
      ]
    }
  },
  {
    "id": "com.wix-mcp",
    "name": "com.wix/mcp",
    "description": "A Model Context Protocol server for Wix AI tools",
    "category": "ai",
    "version": "1.0.0",
    "author": "com.wix",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.wix.com/sse",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.wix/mcp",
      "description": "A Model Context Protocol server for Wix AI tools",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.wix.com/sse"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.wix.com/mcp"
        }
      ]
    }
  },
  {
    "id": "com.xcodebuildmcp-XcodeBuildMCP",
    "name": "com.xcodebuildmcp/XcodeBuildMCP",
    "description": "XcodeBuildMCP provides tools for Xcode project management, simulator management, and app utilities.",
    "category": "other",
    "version": "1.14.1",
    "author": "com.xcodebuildmcp",
    "repository": "https://github.com/cameroncooke/XcodeBuildMCP",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install xcodebuildmcp",
    "documentationUrl": "https://github.com/cameroncooke/XcodeBuildMCP#readme",
    "homepage": "https://github.com/cameroncooke/XcodeBuildMCP",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.xcodebuildmcp/XcodeBuildMCP",
      "description": "XcodeBuildMCP provides tools for Xcode project management, simulator management, and app utilities.",
      "repository": {
        "url": "https://github.com/cameroncooke/XcodeBuildMCP",
        "source": "github",
        "id": "945551361"
      },
      "version": "1.14.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "xcodebuildmcp",
          "version": "1.14.1",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Enable experimental xcodemake incremental builds (true/false or 1/0).",
              "format": "boolean",
              "default": "false",
              "choices": [
                "true",
                "false",
                "1",
                "0"
              ],
              "name": "INCREMENTAL_BUILDS_ENABLED"
            },
            {
              "description": "Enable AI-powered dynamic tool discovery to load only relevant workflows.",
              "format": "boolean",
              "default": "false",
              "choices": [
                "true",
                "false"
              ],
              "name": "XCODEBUILDMCP_DYNAMIC_TOOLS"
            },
            {
              "description": "Comma-separated list of workflows to load in Static Mode (e.g., 'simulator,device,project-discovery').",
              "format": "string",
              "name": "XCODEBUILDMCP_ENABLED_WORKFLOWS"
            },
            {
              "description": "Disable Sentry error reporting (preferred flag).",
              "format": "boolean",
              "default": "false",
              "choices": [
                "true",
                "false"
              ],
              "name": "XCODEBUILDMCP_SENTRY_DISABLED"
            },
            {
              "description": "Enable verbose debug logging from the server.",
              "format": "boolean",
              "default": "false",
              "choices": [
                "true",
                "false"
              ],
              "name": "XCODEBUILDMCP_DEBUG"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "com.zomato-mcp",
    "name": "com.zomato/mcp",
    "description": "An MCP server that exposes functionalities to use Zomato's services.",
    "category": "other",
    "version": "1.0.0",
    "author": "com.zomato",
    "repository": "https://github.com/Zomato/mcp-server-manifest",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp-server.zomato.com/mcp",
    "documentationUrl": "https://github.com/Zomato/mcp-server-manifest#readme",
    "homepage": "https://github.com/Zomato/mcp-server-manifest",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "com.zomato/mcp",
      "description": "An MCP server that exposes functionalities to use Zomato's services.",
      "repository": {
        "url": "https://github.com/Zomato/mcp-server-manifest",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp-server.zomato.com/mcp"
        }
      ]
    }
  },
  {
    "id": "dev.anotherai-anotherai",
    "name": "dev.anotherai/anotherai",
    "description": "MCP server for building and testing AI agents with multi-model experimentation and insights.",
    "category": "ai",
    "version": "0.1.0",
    "author": "dev.anotherai",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://api.anotherai.dev/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "dev.anotherai/anotherai",
      "description": "MCP server for building and testing AI agents with multi-model experimentation and insights.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.anotherai.dev/mcp"
        }
      ]
    }
  },
  {
    "id": "dev.augments-mcp",
    "name": "dev.augments/mcp",
    "description": "Augments MCP Server - A comprehensive framework documentation provider for Claude Code",
    "category": "other",
    "version": "2.0.2",
    "author": "dev.augments",
    "repository": "https://github.com/augmnt/augments-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install augments-mcp-server",
    "documentationUrl": "https://github.com/augmnt/augments-mcp-server#readme",
    "homepage": "https://github.com/augmnt/augments-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "dev.augments/mcp",
      "description": "Augments MCP Server - A comprehensive framework documentation provider for Claude Code",
      "repository": {
        "url": "https://github.com/augmnt/augments-mcp-server",
        "source": "github"
      },
      "version": "2.0.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "augments-mcp-server",
          "version": "2.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.augments.dev/mcp"
        }
      ]
    }
  },
  {
    "id": "dev.composio.rube-rube",
    "name": "dev.composio.rube/rube",
    "description": "Connect your AI to 500+ apps like Gmail, Slack, GitHub, and Notion with streamable HTTP transport.",
    "category": "version-control",
    "version": "0.0.2",
    "author": "dev.composio.rube",
    "repository": "https://github.com/ComposioHQ/Rube",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://rube.composio.dev/mcp",
    "documentationUrl": "https://github.com/ComposioHQ/Rube#readme",
    "homepage": "https://github.com/ComposioHQ/Rube",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "dev.composio.rube/rube",
      "description": "Connect your AI to 500+ apps like Gmail, Slack, GitHub, and Notion with streamable HTTP transport.",
      "repository": {
        "url": "https://github.com/ComposioHQ/Rube",
        "source": "github"
      },
      "version": "0.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://rube.composio.dev/mcp"
        }
      ]
    }
  },
  {
    "id": "dev.continue-docs",
    "name": "dev.continue/docs",
    "description": "An MCP server for docs.continue.dev",
    "category": "other",
    "version": "1.0.0",
    "author": "dev.continue",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://docs.continue.dev/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "dev.continue/docs",
      "description": "An MCP server for docs.continue.dev",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://docs.continue.dev/mcp"
        }
      ]
    }
  },
  {
    "id": "dev.lingo-main",
    "name": "dev.lingo/main",
    "description": "Lingo.dev MCP Server - World-class i18n implementation with ICU MessageFormat.",
    "category": "ai",
    "version": "1.0.0",
    "author": "dev.lingo",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.lingo.dev/main",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "dev.lingo/main",
      "description": "Lingo.dev MCP Server - World-class i18n implementation with ICU MessageFormat.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.lingo.dev/main"
        }
      ]
    }
  },
  {
    "id": "dev.looptool-looptool",
    "name": "dev.looptool/looptool",
    "description": "An MCP server that automatically collects feedback on your MCP server.",
    "category": "other",
    "version": "1.0.0",
    "author": "dev.looptool",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://www.api.looptool.dev/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "dev.looptool/looptool",
      "description": "An MCP server that automatically collects feedback on your MCP server.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://www.api.looptool.dev/mcp",
          "headers": [
            {
              "description": "Authorization Bearer header containing API key",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "dev.openfeature-mcp",
    "name": "dev.openfeature/mcp",
    "description": "MCP server providing OpenFeature SDK installation guides and OFREP flag evaluation",
    "category": "other",
    "version": "0.0.16",
    "author": "dev.openfeature",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @openfeature/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "dev.openfeature/mcp",
      "description": "MCP server providing OpenFeature SDK installation guides and OFREP flag evaluation",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.16",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@openfeature/mcp",
          "version": "0.0.16",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "dev.promplate-hmr",
    "name": "dev.promplate/hmr",
    "description": "Docs for hot-module-reload and reactive programming for Python (`hmr` on PyPI)",
    "category": "other",
    "version": "1.0.2",
    "author": "dev.promplate",
    "repository": "https://github.com/promplate/hmr",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://pyth-on-line.promplate.dev/hmr/mcp",
    "documentationUrl": "https://github.com/promplate/hmr#readme",
    "homepage": "https://github.com/promplate/hmr",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "dev.promplate/hmr",
      "description": "Docs for hot-module-reload and reactive programming for Python (`hmr` on PyPI)",
      "repository": {
        "url": "https://github.com/promplate/hmr",
        "source": "github"
      },
      "version": "1.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://pyth-on-line.promplate.dev/hmr/mcp"
        }
      ]
    }
  },
  {
    "id": "dev.rostro-rostro",
    "name": "dev.rostro/rostro",
    "description": "Turn any LLM multimodal; generate images, voices, videos, 3D models, music, and more.",
    "category": "other",
    "version": "1.0.0",
    "author": "dev.rostro",
    "repository": "https://github.com/francis-ros/rostro-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://proto.rostro.dev/mcp",
    "documentationUrl": "https://github.com/francis-ros/rostro-mcp-server#readme",
    "homepage": "https://github.com/francis-ros/rostro-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "dev.rostro/rostro",
      "description": "Turn any LLM multimodal; generate images, voices, videos, 3D models, music, and more.",
      "repository": {
        "url": "https://github.com/francis-ros/rostro-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://proto.rostro.dev/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/publisher-provided": {
          "build_info": {
            "commit": "f7e8d9c2b1a0",
            "deployment_id": "remote-fs-deploy-456",
            "region": "us-west-2",
            "timestamp": "2023-12-05T08:45:00Z"
          },
          "tool": "cloud-deployer",
          "version": "2.4.0"
        }
      }
    }
  },
  {
    "id": "dev.svelte-mcp",
    "name": "dev.svelte/mcp",
    "description": "The official Svelte MCP server providing docs and autofixing tools for Svelte development",
    "category": "other",
    "version": "0.1.11",
    "author": "dev.svelte",
    "repository": "https://github.com/sveltejs/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @sveltejs/mcp",
    "documentationUrl": "https://github.com/sveltejs/mcp#readme",
    "homepage": "https://github.com/sveltejs/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "dev.svelte/mcp",
      "description": "The official Svelte MCP server providing docs and autofixing tools for Svelte development",
      "repository": {
        "url": "https://github.com/sveltejs/mcp",
        "source": "github",
        "id": "1054419133",
        "subfolder": "packages/mcp-stdio"
      },
      "version": "0.1.11",
      "websiteUrl": "https://svelte.dev/docs/mcp/overview",
      "icons": [
        {
          "src": "https://mcp.svelte.dev/logo.svg",
          "mimeType": "image/svg+xml"
        },
        {
          "src": "https://mcp.svelte.dev/logo.png",
          "mimeType": "image/png"
        }
      ],
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@sveltejs/mcp",
          "version": "0.1.11",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.svelte.dev/mcp"
        }
      ]
    }
  },
  {
    "id": "directory.brick-mcp",
    "name": "directory.brick/mcp",
    "description": "Provides data for LEGO sets, minifigures, parts and elements. Not affiliated with LEGO® Group.",
    "category": "other",
    "version": "2025.10.23.1321",
    "author": "directory.brick",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.brick.directory/connect",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "directory.brick/mcp",
      "description": "Provides data for LEGO sets, minifigures, parts and elements. Not affiliated with LEGO® Group.",
      "title": "Brick Directory",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2025.10.23.1321",
      "websiteUrl": "https://brick.directory",
      "icons": [
        {
          "src": "https://brick.directory/assets/logo.svg",
          "mimeType": "image/svg+xml"
        },
        {
          "src": "https://brick.directory/assets/logo-1024-transparent.png",
          "mimeType": "image/png",
          "sizes": [
            "1024x1024"
          ]
        },
        {
          "src": "https://brick.directory/assets/logo-512-transparent.png",
          "mimeType": "image/png",
          "sizes": [
            "512x512"
          ]
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.brick.directory/connect"
        }
      ]
    }
  },
  {
    "id": "finance.double.agent4-knowledge-base",
    "name": "finance.double.agent4/knowledge-base",
    "description": "AI-powered knowledge base for Double - Thank You with semantic search and question answering.",
    "category": "ai",
    "version": "1.0.1",
    "author": "finance.double.agent4",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://agent4.double.finance/mcp/message",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "finance.double.agent4/knowledge-base",
      "description": "AI-powered knowledge base for Double - Thank You with semantic search and question answering.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://agent4.double.finance/mcp/message"
        }
      ]
    }
  },
  {
    "id": "garden.stanislav.svelte-llm-svelte-llm-mcp",
    "name": "garden.stanislav.svelte-llm/svelte-llm-mcp",
    "description": "An MCP server that provides access to Svelte 5 and SvelteKit documentation",
    "category": "other",
    "version": "1.0.0",
    "author": "garden.stanislav.svelte-llm",
    "repository": "https://github.com/khromov/svelte-llm-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://svelte-llm.stanislav.garden/mcp/mcp",
    "documentationUrl": "https://github.com/khromov/svelte-llm-mcp#readme",
    "homepage": "https://github.com/khromov/svelte-llm-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "garden.stanislav.svelte-llm/svelte-llm-mcp",
      "description": "An MCP server that provides access to Svelte 5 and SvelteKit documentation",
      "repository": {
        "url": "https://github.com/khromov/svelte-llm-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://svelte-llm.stanislav.garden/mcp/mcp"
        },
        {
          "type": "sse",
          "url": "https://svelte-llm.stanislav.garden/mcp/sse"
        }
      ]
    }
  },
  {
    "id": "goog.workspace-developer-developer-tools",
    "name": "goog.workspace-developer/developer-tools",
    "description": "Provides tools for searching Google Workspace documentation and much more.",
    "category": "other",
    "version": "1.0.0",
    "author": "goog.workspace-developer",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://workspace-developer.goog/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "goog.workspace-developer/developer-tools",
      "description": "Provides tools for searching Google Workspace documentation and much more.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://workspace-developer.goog/mcp"
        }
      ]
    }
  },
  {
    "id": "host.justcall.mcp-justcall-mcp-server",
    "name": "host.justcall.mcp/justcall-mcp-server",
    "description": "JustCall MCP Server",
    "category": "other",
    "version": "0.0.4",
    "author": "host.justcall.mcp",
    "repository": "https://github.com/saaslabsco/justcall-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.justcall.host/mcp",
    "documentationUrl": "https://github.com/saaslabsco/justcall-mcp-server#readme",
    "homepage": "https://github.com/saaslabsco/justcall-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "host.justcall.mcp/justcall-mcp-server",
      "description": "JustCall MCP Server",
      "repository": {
        "url": "https://github.com/saaslabsco/justcall-mcp-server",
        "source": "github"
      },
      "version": "0.0.4",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.justcall.host/mcp",
          "headers": [
            {
              "description": "API key and Secret for authentication in the format of <API_KEY>:<API_SECRET>",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "info.mosaique-mcp",
    "name": "info.mosaique/mcp",
    "description": "Search and list latest international news (sources, comments, knowledge graph).",
    "category": "ai",
    "version": "1.0.0",
    "author": "info.mosaique",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.mosaique.info",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "info.mosaique/mcp",
      "description": "Search and list latest international news (sources, comments, knowledge graph).",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.mosaique.info",
          "headers": [
            {
              "description": "API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "X-API-Key"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.balldontlie-mcp",
    "name": "io.balldontlie/mcp",
    "description": "Provides access to live sports data and analytics from BALLDONTLIE: The Sports API",
    "category": "other",
    "version": "1.1.0",
    "author": "io.balldontlie",
    "repository": "https://github.com/balldontlie-api/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.balldontlie.io/mcp",
    "documentationUrl": "https://github.com/balldontlie-api/mcp#readme",
    "homepage": "https://github.com/balldontlie-api/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.balldontlie/mcp",
      "description": "Provides access to live sports data and analytics from BALLDONTLIE: The Sports API",
      "repository": {
        "url": "https://github.com/balldontlie-api/mcp",
        "source": "github"
      },
      "version": "1.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.balldontlie.io/mcp",
          "headers": [
            {
              "description": "API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.catchmetrics.mcp-rum-analytics",
    "name": "io.catchmetrics.mcp/rum-analytics",
    "description": "RUM platform for web performance analytics, Core Web Vitals, and third-party script monitoring.",
    "category": "web",
    "version": "1.0.0",
    "author": "io.catchmetrics.mcp",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.catchmetrics.io",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.catchmetrics.mcp/rum-analytics",
      "description": "RUM platform for web performance analytics, Core Web Vitals, and third-party script monitoring.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.catchmetrics.io"
        }
      ]
    }
  },
  {
    "id": "io.coupler-remote-mcp-server",
    "name": "io.coupler/remote-mcp-server",
    "description": "Coupler.io remote MCP server",
    "category": "other",
    "version": "0.0.1",
    "author": "io.coupler",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.coupler.io/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.coupler/remote-mcp-server",
      "description": "Coupler.io remote MCP server",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.coupler.io/mcp"
        }
      ]
    }
  },
  {
    "id": "io.cycloid.mcp-server",
    "name": "io.cycloid.mcp/server",
    "description": "An MCP server that let you interact with Cycloid.io Internal Development Portal and Platform",
    "category": "other",
    "version": "1.0.1",
    "author": "io.cycloid.mcp",
    "repository": "https://github.com/cycloidio/cycloid-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.cycloid.io/mcp",
    "documentationUrl": "https://github.com/cycloidio/cycloid-mcp-server#readme",
    "homepage": "https://github.com/cycloidio/cycloid-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.cycloid.mcp/server",
      "description": "An MCP server that let you interact with Cycloid.io Internal Development Portal and Platform",
      "repository": {
        "url": "https://github.com/cycloidio/cycloid-mcp-server",
        "source": "github"
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.cycloid.io/mcp",
          "headers": [
            {
              "description": "API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "X-CY-API-KEY"
            },
            {
              "description": "The organization canonical name (tenant) you want to interact with",
              "isRequired": true,
              "name": "X-CY-ORG"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.foqal-Foqal",
    "name": "io.foqal/Foqal",
    "description": "Foqal turns Slack/Teams into efficient support platforms with AI-powered ticketing.",
    "category": "ai",
    "version": "2.0.1",
    "author": "io.foqal",
    "repository": "https://github.com/foqal/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://support.foqal.io/api/mcp/[YOUR_GENERATED_TOKEN]",
    "documentationUrl": "https://github.com/foqal/mcp#readme",
    "homepage": "https://github.com/foqal/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.foqal/Foqal",
      "description": "Foqal turns Slack/Teams into efficient support platforms with AI-powered ticketing.",
      "repository": {
        "url": "https://github.com/foqal/mcp",
        "source": "github"
      },
      "version": "2.0.1",
      "websiteUrl": "https://www.foqal.io?utm_source=mcp-registry&utm_medium=registry",
      "remotes": [
        {
          "type": "sse",
          "url": "https://support.foqal.io/api/mcp/[YOUR_GENERATED_TOKEN]"
        }
      ]
    }
  },
  {
    "id": "io.github.8beeeaaat-touchdesigner-mcp-server",
    "name": "io.github.8beeeaaat/touchdesigner-mcp-server",
    "description": "MCP server for TouchDesigner - Control and operate TouchDesigner projects through AI agents",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.8beeeaaat",
    "repository": "https://github.com/8beeeaaat/touchdesigner-mcp.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install touchdesigner-mcp-server",
    "documentationUrl": "https://github.com/8beeeaaat/touchdesigner-mcp.git#readme",
    "homepage": "https://github.com/8beeeaaat/touchdesigner-mcp.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.8beeeaaat/touchdesigner-mcp-server",
      "description": "MCP server for TouchDesigner - Control and operate TouchDesigner projects through AI agents",
      "repository": {
        "url": "https://github.com/8beeeaaat/touchdesigner-mcp.git",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "touchdesigner-mcp-server",
          "version": "1.0.0",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.Abraxas1010-agent-payment-mcp",
    "name": "io.github.Abraxas1010/agent-payment-mcp",
    "description": "Secure USDC payments for AI agents on Base blockchain with budget controls and instant settlement.",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.Abraxas1010",
    "repository": "https://github.com/Abraxas1010/agent-payment-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/Abraxas1010/agent-payment-mcp#readme",
    "homepage": "https://github.com/Abraxas1010/agent-payment-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Abraxas1010/agent-payment-mcp",
      "description": "Secure USDC payments for AI agents on Base blockchain with budget controls and instant settlement.",
      "repository": {
        "url": "https://github.com/Abraxas1010/agent-payment-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/Apoth3osis-ai/agent-payment-mcp/releases/download/v1.0.1/agent-payment-server",
          "fileSha256": "53c727257cb433b4d369306a0b46221f15a1c8a6d14eb0c83fea8f4ace4d4ee1",
          "runtimeHint": "binary",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your AgentPMT API key for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "AGENT_PAYMENT_API_KEY"
            },
            {
              "description": "Your AgentPMT budget key for spending control",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "AGENT_PAYMENT_BUDGET_KEY"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/Apoth3osis-ai/agent-payment-mcp/releases/download/v1.0.1/agent-payment-server-darwin-amd64",
          "fileSha256": "c151af56e81e1d9081feaa917c14eadae44780fa51b72e83431bb1b894bbc83e",
          "runtimeHint": "binary",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your AgentPMT API key for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "AGENT_PAYMENT_API_KEY"
            },
            {
              "description": "Your AgentPMT budget key for spending control",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "AGENT_PAYMENT_BUDGET_KEY"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/Apoth3osis-ai/agent-payment-mcp/releases/download/v1.0.1/agent-payment-server-darwin-arm64",
          "fileSha256": "ad5630f47e409b6cc18bf330896947b90ebe6a61c688587e00f196d4ccec47cd",
          "runtimeHint": "binary",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your AgentPMT API key for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "AGENT_PAYMENT_API_KEY"
            },
            {
              "description": "Your AgentPMT budget key for spending control",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "AGENT_PAYMENT_BUDGET_KEY"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/Apoth3osis-ai/agent-payment-mcp/releases/download/v1.0.1/agent-payment-server-windows-amd64.exe",
          "fileSha256": "bf8220131e001d06789561e064400e9dc5ea674e3a5bb17c9ed1e1b238a36f06",
          "runtimeHint": "binary",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your AgentPMT API key for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "AGENT_PAYMENT_API_KEY"
            },
            {
              "description": "Your AgentPMT budget key for spending control",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "AGENT_PAYMENT_BUDGET_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.AlvaroRamirezCastillo-greeting-mcp-server",
    "name": "io.github.AlvaroRamirezCastillo/greeting-mcp-server",
    "description": "An MCP server greeting",
    "category": "version-control",
    "version": "1.0.8",
    "author": "io.github.AlvaroRamirezCastillo",
    "repository": "https://github.com/AlvaroRamirezCastillo/greeting-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @jinba-ittai/greeting-mcp-server",
    "documentationUrl": "https://github.com/AlvaroRamirezCastillo/greeting-mcp-server#readme",
    "homepage": "https://github.com/AlvaroRamirezCastillo/greeting-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.AlvaroRamirezCastillo/greeting-mcp-server",
      "description": "An MCP server greeting",
      "repository": {
        "url": "https://github.com/AlvaroRamirezCastillo/greeting-mcp-server",
        "source": "github"
      },
      "version": "1.0.8",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@jinba-ittai/greeting-mcp-server",
          "version": "1.0.8",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.Antonytm-mcp-all",
    "name": "io.github.Antonytm/mcp-all",
    "description": "A Model Context Protocol server to run other MCP servers",
    "category": "version-control",
    "version": "0.1.20",
    "author": "io.github.Antonytm",
    "repository": "https://github.com/Antonytm/mcp-all",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @antonytm/mcp-all",
    "documentationUrl": "https://github.com/Antonytm/mcp-all#readme",
    "homepage": "https://github.com/Antonytm/mcp-all",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Antonytm/mcp-all",
      "description": "A Model Context Protocol server to run other MCP servers",
      "repository": {
        "url": "https://github.com/Antonytm/mcp-all",
        "source": "github"
      },
      "version": "0.1.20",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@antonytm/mcp-all",
          "version": "0.1.20",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "name": "TRANSPORT"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@antonytm/mcp-all",
          "version": "0.1.20",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3001/mcp"
          },
          "environmentVariables": [
            {
              "name": "TRANSPORT"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.Antonytm-mcp-sitecore-server",
    "name": "io.github.Antonytm/mcp-sitecore-server",
    "description": "A Model Context Protocol server for Sitecore",
    "category": "version-control",
    "version": "1.3.2",
    "author": "io.github.Antonytm",
    "repository": "https://github.com/Antonytm/mcp-sitecore-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @antonytm/mcp-sitecore-server",
    "documentationUrl": "https://github.com/Antonytm/mcp-sitecore-server#readme",
    "homepage": "https://github.com/Antonytm/mcp-sitecore-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Antonytm/mcp-sitecore-server",
      "description": "A Model Context Protocol server for Sitecore",
      "repository": {
        "url": "https://github.com/Antonytm/mcp-sitecore-server",
        "source": "github"
      },
      "version": "1.3.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@antonytm/mcp-sitecore-server",
          "version": "1.3.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "name": ""
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.Apoth3osis-ai-agent-payment-mcp",
    "name": "io.github.Apoth3osis-ai/agent-payment-mcp",
    "description": "Secure MCP router providing access to AgentPMT's pay-per-use AI tools marketplace.",
    "category": "version-control",
    "version": "1.1.0",
    "author": "io.github.Apoth3osis-ai",
    "repository": "https://github.com/Apoth3osis-ai/agent-payment-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/Apoth3osis-ai/agent-payment-mcp#readme",
    "homepage": "https://github.com/Apoth3osis-ai/agent-payment-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.Apoth3osis-ai/agent-payment-mcp",
      "description": "Secure MCP router providing access to AgentPMT's pay-per-use AI tools marketplace.",
      "repository": {
        "url": "https://github.com/Apoth3osis-ai/agent-payment-mcp",
        "source": "github"
      },
      "version": "1.1.0",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/Apoth3osis-ai/agent-payment-mcp/releases/download/v1.1.0/agent-payment-router-linux-amd64",
          "fileSha256": "c3890c729a39ccde84d4ee59909caf1c69c58a20c0516342dbcea4ddc9147d1c",
          "runtimeHint": "binary",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your AgentPMT API key for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "x-api-key"
            },
            {
              "description": "Your AgentPMT budget key for spending control",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "x-budget-key"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/Apoth3osis-ai/agent-payment-mcp/releases/download/v1.1.0/agent-payment-router-darwin-amd64",
          "fileSha256": "840ef61c0532fcbf34cc9abdb6797cf1ee411e37783d26eb666bc9a20cebe89d",
          "runtimeHint": "binary",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your AgentPMT API key for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "x-api-key"
            },
            {
              "description": "Your AgentPMT budget key for spending control",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "x-budget-key"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/Apoth3osis-ai/agent-payment-mcp/releases/download/v1.1.0/agent-payment-router-darwin-arm64",
          "fileSha256": "6b6ff95bc57ea81e4287d006da29ab5386205c17f961cfbfefa6757cd5bbb0c1",
          "runtimeHint": "binary",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your AgentPMT API key for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "x-api-key"
            },
            {
              "description": "Your AgentPMT budget key for spending control",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "x-budget-key"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/Apoth3osis-ai/agent-payment-mcp/releases/download/v1.1.0/agent-payment-router-windows-amd64.exe",
          "fileSha256": "c92d00ae7a42a8c40f036b239cc8d4c23e65203abe31809fdd791d93b7483575",
          "runtimeHint": "binary",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your AgentPMT API key for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "x-api-key"
            },
            {
              "description": "Your AgentPMT budget key for spending control",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "x-budget-key"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/Apoth3osis-ai/agent-payment-mcp/releases/download/v1.1.0/agent-payment-router-linux-arm64",
          "fileSha256": "c6d89f423da80151faf83e5ca3fd253a0c0771d85ef7075c81d47251e6bba6d3",
          "runtimeHint": "binary",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your AgentPMT API key for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "x-api-key"
            },
            {
              "description": "Your AgentPMT budget key for spending control",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "x-budget-key"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.AungMyoKyaw-betterprompt-mcp",
    "name": "io.github.AungMyoKyaw/betterprompt-mcp",
    "description": "MCP server for AI-enhanced prompt engineering and request conversion.",
    "category": "version-control",
    "version": "0.2.1",
    "author": "io.github.AungMyoKyaw",
    "repository": "https://github.com/AungMyoKyaw/betterprompt-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install betterprompt-mcp",
    "documentationUrl": "https://github.com/AungMyoKyaw/betterprompt-mcp#readme",
    "homepage": "https://github.com/AungMyoKyaw/betterprompt-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.AungMyoKyaw/betterprompt-mcp",
      "description": "MCP server for AI-enhanced prompt engineering and request conversion.",
      "repository": {
        "url": "https://github.com/AungMyoKyaw/betterprompt-mcp",
        "source": "github"
      },
      "version": "0.2.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "betterprompt-mcp",
          "version": "0.2.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.BenAHammond-code-auditor-mcp",
    "name": "io.github.BenAHammond/code-auditor-mcp",
    "description": "Code Quality Auditor: Analyze code for SOLID principles, DRY violations, and more",
    "category": "version-control",
    "version": "1.1.1",
    "author": "io.github.BenAHammond",
    "repository": "https://github.com/BenAHammond/code-auditor-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install code-auditor-mcp",
    "documentationUrl": "https://github.com/BenAHammond/code-auditor-mcp#readme",
    "homepage": "https://github.com/BenAHammond/code-auditor-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.BenAHammond/code-auditor-mcp",
      "description": "Code Quality Auditor: Analyze code for SOLID principles, DRY violations, and more",
      "repository": {
        "url": "https://github.com/BenAHammond/code-auditor-mcp",
        "source": "github"
      },
      "version": "1.1.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "code-auditor-mcp",
          "version": "1.20.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.ChengJiale150-jupyter-mcp-server",
    "name": "io.github.ChengJiale150/jupyter-mcp-server",
    "description": "A powerful MCP server for AI-driven Jupyter Notebook management and execution",
    "category": "version-control",
    "version": "1.1.0",
    "author": "io.github.ChengJiale150",
    "repository": "https://github.com/ChengJiale150/jupyter-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install better-jupyter-mcp-server",
    "documentationUrl": "https://github.com/ChengJiale150/jupyter-mcp-server#readme",
    "homepage": "https://github.com/ChengJiale150/jupyter-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.ChengJiale150/jupyter-mcp-server",
      "description": "A powerful MCP server for AI-driven Jupyter Notebook management and execution",
      "repository": {
        "url": "https://github.com/ChengJiale150/jupyter-mcp-server",
        "source": "github"
      },
      "version": "1.1.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "better-jupyter-mcp-server",
          "version": "1.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.ChiR24-unreal-engine-mcp",
    "name": "io.github.ChiR24/unreal-engine-mcp",
    "description": "MCP server for Unreal Engine 5 with 13 tools for game development automation.",
    "category": "version-control",
    "version": "0.4.6",
    "author": "io.github.ChiR24",
    "repository": "https://github.com/ChiR24/Unreal_mcp.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install unreal-engine-mcp-server",
    "documentationUrl": "https://github.com/ChiR24/Unreal_mcp.git#readme",
    "homepage": "https://github.com/ChiR24/Unreal_mcp.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ChiR24/unreal-engine-mcp",
      "description": "MCP server for Unreal Engine 5 with 13 tools for game development automation.",
      "repository": {
        "url": "https://github.com/ChiR24/Unreal_mcp.git",
        "source": "github"
      },
      "version": "0.4.6",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "unreal-engine-mcp-server",
          "version": "0.4.6",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Unreal Engine host address (default: 127.0.0.1)",
              "value": "127.0.0.1",
              "name": "UE_HOST"
            },
            {
              "description": "Remote Control HTTP port (default: 30010)",
              "value": "30010",
              "name": "UE_RC_HTTP_PORT"
            },
            {
              "description": "Remote Control WebSocket port (default: 30020)",
              "value": "30020",
              "name": "UE_RC_WS_PORT"
            },
            {
              "description": "Logging level: debug, info, warn, error (default: info)",
              "value": "info",
              "name": "LOG_LEVEL"
            },
            {
              "description": "Absolute path to your Unreal .uproject file",
              "value": "C:/Users/YourName/Documents/Unreal Projects/YourProject",
              "name": "UE_PROJECT_PATH"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.Chris85appding-unified-offer-protocol",
    "name": "io.github.Chris85appding/unified-offer-protocol",
    "description": "AI-powered e-commerce product search, affiliate links, and price negotiation",
    "category": "version-control",
    "version": "2.0.6",
    "author": "io.github.Chris85appding",
    "repository": "https://github.com/UnifiedOffer/mcp-server-public",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/UnifiedOffer/mcp-server-public#readme",
    "homepage": "https://github.com/UnifiedOffer/mcp-server-public",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.Chris85appding/unified-offer-protocol",
      "description": "AI-powered e-commerce product search, affiliate links, and price negotiation",
      "title": "Unified Offer Protocol MCP Server",
      "repository": {
        "url": "https://github.com/UnifiedOffer/mcp-server-public",
        "source": "github"
      },
      "version": "2.0.6"
    }
  },
  {
    "id": "io.github.ChromeDevTools-chrome-devtools-mcp",
    "name": "io.github.ChromeDevTools/chrome-devtools-mcp",
    "description": "MCP server for Chrome DevTools",
    "category": "version-control",
    "version": "0.9.0",
    "author": "io.github.ChromeDevTools",
    "repository": "https://github.com/ChromeDevTools/chrome-devtools-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install chrome-devtools-mcp",
    "documentationUrl": "https://github.com/ChromeDevTools/chrome-devtools-mcp#readme",
    "homepage": "https://github.com/ChromeDevTools/chrome-devtools-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.ChromeDevTools/chrome-devtools-mcp",
      "description": "MCP server for Chrome DevTools",
      "repository": {
        "url": "https://github.com/ChromeDevTools/chrome-devtools-mcp",
        "source": "github"
      },
      "version": "0.9.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "chrome-devtools-mcp",
          "version": "0.9.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.CodeAlive-AI-codealive-mcp",
    "name": "io.github.CodeAlive-AI/codealive-mcp",
    "description": "Semantic code search and analysis from CodeAlive for AI assistants and agents.",
    "category": "version-control",
    "version": "0.3.0",
    "author": "io.github.CodeAlive-AI",
    "repository": "https://github.com/CodeAlive-AI/codealive-mcp.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull ghcr.io/codealive-ai/codealive-mcp:0.3.0",
    "documentationUrl": "https://github.com/CodeAlive-AI/codealive-mcp.git#readme",
    "homepage": "https://github.com/CodeAlive-AI/codealive-mcp.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.CodeAlive-AI/codealive-mcp",
      "description": "Semantic code search and analysis from CodeAlive for AI assistants and agents.",
      "repository": {
        "url": "https://github.com/CodeAlive-AI/codealive-mcp.git",
        "source": "github"
      },
      "version": "0.3.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "ghcr.io/codealive-ai/codealive-mcp:0.3.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.CodeCraftersLLC-local-voice-mcp",
    "name": "io.github.CodeCraftersLLC/local-voice-mcp",
    "description": "Give your MCP clients the ability to speak by running local voice models using Chatterbox TTS",
    "category": "version-control",
    "version": "0.1.5",
    "author": "io.github.CodeCraftersLLC",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @codecraftersllc/local-voice-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.CodeCraftersLLC/local-voice-mcp",
      "description": "Give your MCP clients the ability to speak by running local voice models using Chatterbox TTS",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.5",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@codecraftersllc/local-voice-mcp",
          "version": "0.1.5",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.CodeLogicIncEngineering-codelogic-mcp-server",
    "name": "io.github.CodeLogicIncEngineering/codelogic-mcp-server",
    "description": "An MCP Server to utilize Codelogic's rich software dependency data in your AI programming assistant.",
    "category": "version-control",
    "version": "1.0.11",
    "author": "io.github.CodeLogicIncEngineering",
    "repository": "https://github.com/CodeLogicIncEngineering/codelogic-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install codelogic-mcp-server",
    "documentationUrl": "https://github.com/CodeLogicIncEngineering/codelogic-mcp-server#readme",
    "homepage": "https://github.com/CodeLogicIncEngineering/codelogic-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.CodeLogicIncEngineering/codelogic-mcp-server",
      "description": "An MCP Server to utilize Codelogic's rich software dependency data in your AI programming assistant.",
      "repository": {
        "url": "https://github.com/CodeLogicIncEngineering/codelogic-mcp-server",
        "source": "github"
      },
      "version": "1.0.11",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "codelogic-mcp-server",
          "version": "1.0.11",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "url to the CodeLogic server e.g. https://myco.app.codelogic.com",
              "format": "string",
              "name": "CODELOGIC_SERVER_HOST"
            },
            {
              "description": "CodeLogic server username",
              "format": "string",
              "name": "CODELOGIC_USERNAME"
            },
            {
              "description": "CodeLogic server password",
              "format": "string",
              "name": "CODELOGIC_PASSWORD"
            },
            {
              "description": "the workspace name that your code is scanned into",
              "format": "string",
              "name": "CODELOGIC_WORKSPACE_NAME"
            },
            {
              "description": "When enabled, additional debug files such as timing_log.txt and impact_data*.json will be generated. Defaults to false",
              "format": "string",
              "name": "CODELOGIC_DEBUG_MODE"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.CursorTouch-Windows-MCP",
    "name": "io.github.CursorTouch/Windows-MCP",
    "description": "An MCP Server for computer-use in Windows OS",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.CursorTouch",
    "repository": "https://github.com/CursorTouch/Windows-MCP",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install windows_mcp",
    "documentationUrl": "https://github.com/CursorTouch/Windows-MCP#readme",
    "homepage": "https://github.com/CursorTouch/Windows-MCP",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.CursorTouch/Windows-MCP",
      "description": "An MCP Server for computer-use in Windows OS",
      "repository": {
        "url": "https://github.com/CursorTouch/Windows-MCP",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "windows_mcp",
          "version": "0.3.0",
          "runtimeHint": "uvx",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.DeanWard-HAL",
    "name": "io.github.DeanWard/HAL",
    "description": "HAL (HTTP API Layer) - An MCP server that provides HTTP API capabilities to Large Language Models",
    "category": "version-control",
    "version": "1.0.14",
    "author": "io.github.DeanWard",
    "repository": "https://github.com/DeanWard/HAL",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install hal-mcp",
    "documentationUrl": "https://github.com/DeanWard/HAL#readme",
    "homepage": "https://github.com/DeanWard/HAL",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.DeanWard/HAL",
      "description": "HAL (HTTP API Layer) - An MCP server that provides HTTP API capabilities to Large Language Models",
      "repository": {
        "url": "https://github.com/DeanWard/HAL",
        "source": "github"
      },
      "version": "1.0.14",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "hal-mcp",
          "version": "1.0.14",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.Decodo-mcp-web-scraper",
    "name": "io.github.Decodo/mcp-web-scraper",
    "description": "Enable your AI agents to scrape and parse web content dynamically, including geo-restricted sites",
    "category": "web",
    "version": "1.0.3",
    "author": "io.github.Decodo",
    "repository": "https://github.com/Decodo/mcp-web-scraper",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @decodo/mcp-server",
    "documentationUrl": "https://github.com/Decodo/mcp-web-scraper#readme",
    "homepage": "https://github.com/Decodo/mcp-web-scraper",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Decodo/mcp-web-scraper",
      "description": "Enable your AI agents to scrape and parse web content dynamically, including geo-restricted sites",
      "repository": {
        "url": "https://github.com/Decodo/mcp-web-scraper",
        "source": "github"
      },
      "version": "1.0.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@decodo/mcp-server",
          "version": "1.0.3",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Decodo Web Advanced API username",
              "isRequired": true,
              "format": "string",
              "name": "SCRAPER_API_USERNAME"
            },
            {
              "description": "Decodo Web Advanced API password",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "SCRAPER_API_PASSWORD"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.Defozo-ddc-ci-control-bridge",
    "name": "io.github.Defozo/ddc-ci-control-bridge",
    "description": "Control monitor brightness, contrast, power and input via DDC/CI with MCP and MQTT support.",
    "category": "version-control",
    "version": "1.0.5",
    "author": "io.github.Defozo",
    "repository": "https://github.com/Defozo/ddc-ci-control-bridge",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install ddc-ci-control-bridge",
    "documentationUrl": "https://github.com/Defozo/ddc-ci-control-bridge#readme",
    "homepage": "https://github.com/Defozo/ddc-ci-control-bridge",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Defozo/ddc-ci-control-bridge",
      "description": "Control monitor brightness, contrast, power and input via DDC/CI with MCP and MQTT support.",
      "title": "DDC/CI Control Bridge",
      "repository": {
        "url": "https://github.com/Defozo/ddc-ci-control-bridge",
        "source": "github"
      },
      "version": "1.0.5",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "ddc-ci-control-bridge",
          "version": "1.0.5",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.DollhouseMCP-mcp-server",
    "name": "io.github.DollhouseMCP/mcp-server",
    "description": "OSS to create Personas, Skills, Templates, Agents, and Memories to customize your AI experience.",
    "category": "version-control",
    "version": "1.9.23",
    "author": "io.github.DollhouseMCP",
    "repository": "https://github.com/DollhouseMCP/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @dollhousemcp/mcp-server",
    "documentationUrl": "https://github.com/DollhouseMCP/mcp-server#readme",
    "homepage": "https://github.com/DollhouseMCP/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.DollhouseMCP/mcp-server",
      "description": "OSS to create Personas, Skills, Templates, Agents, and Memories to customize your AI experience.",
      "title": "DollhouseMCP",
      "repository": {
        "url": "https://github.com/DollhouseMCP/mcp-server",
        "source": "github"
      },
      "version": "1.9.23",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@dollhousemcp/mcp-server",
          "version": "1.9.23",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.Flightradar24-fr24api-mcp",
    "name": "io.github.Flightradar24/fr24api-mcp",
    "description": "MCP server providing access to the Flightradar24 API for real-time and historical flight data",
    "category": "web",
    "version": "1.0.1",
    "author": "io.github.Flightradar24",
    "repository": "https://github.com/Flightradar24/fr24api-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @flightradar24/fr24api-mcp",
    "documentationUrl": "https://github.com/Flightradar24/fr24api-mcp#readme",
    "homepage": "https://github.com/Flightradar24/fr24api-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Flightradar24/fr24api-mcp",
      "description": "MCP server providing access to the Flightradar24 API for real-time and historical flight data",
      "repository": {
        "url": "https://github.com/Flightradar24/fr24api-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@flightradar24/fr24api-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for Flightradar24 API",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "FR24_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.GLips-Figma-Context-MCP",
    "name": "io.github.GLips/Figma-Context-MCP",
    "description": "Give your coding agent access to your Figma data. Implement designs in any framework in one-shot.",
    "category": "version-control",
    "version": "0.6.0",
    "author": "io.github.GLips",
    "repository": "https://github.com/GLips/Figma-Context-MCP",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install figma-developer-mcp",
    "documentationUrl": "https://github.com/GLips/Figma-Context-MCP#readme",
    "homepage": "https://github.com/GLips/Figma-Context-MCP",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.GLips/Figma-Context-MCP",
      "description": "Give your coding agent access to your Figma data. Implement designs in any framework in one-shot.",
      "repository": {
        "url": "https://github.com/GLips/Figma-Context-MCP",
        "source": "github"
      },
      "version": "0.6.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "figma-developer-mcp",
          "version": "0.6.0",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "--stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Your Figma Personal Access Token, learn more here: https://www.figma.com/developers/api#access-tokens",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "FIGMA_API_KEY"
            },
            {
              "description": "Start the server in stdio mode, keep as CLI",
              "default": "cli",
              "name": "NODE_ENV"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.GabrielaHdzMicrosoft-mcp-server",
    "name": "io.github.GabrielaHdzMicrosoft/mcp-server",
    "description": "An MCP server that provides visual memory and context storage with knowledge graph capabilities",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.GabrielaHdzMicrosoft",
    "repository": "https://github.com/testing9384/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install visual-memory-context-server",
    "documentationUrl": "https://github.com/testing9384/mcp-server#readme",
    "homepage": "https://github.com/testing9384/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.GabrielaHdzMicrosoft/mcp-server",
      "description": "An MCP server that provides visual memory and context storage with knowledge graph capabilities",
      "repository": {
        "url": "https://github.com/testing9384/mcp-server",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "visual-memory-context-server",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Path to the memory.json file for knowledge graph storage",
              "format": "string",
              "name": "MEMORY_FILE_PATH"
            },
            {
              "description": "Comma-separated list of directories the server can access, or JSON array format",
              "format": "string",
              "name": "ALLOWED_DIRECTORIES"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.GitHub30-note-mcp-server",
    "name": "io.github.GitHub30/note-mcp-server",
    "description": "MCP server for note.com: create, edit and retrieve posts.",
    "category": "version-control",
    "version": "0.1.0",
    "author": "io.github.GitHub30",
    "repository": "https://github.com/GitHub30/note-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/GitHub30/note-mcp-server#readme",
    "homepage": "https://github.com/GitHub30/note-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.GitHub30/note-mcp-server",
      "description": "MCP server for note.com: create, edit and retrieve posts.",
      "repository": {
        "url": "https://github.com/GitHub30/note-mcp-server",
        "source": "github"
      },
      "version": "0.1.0"
    }
  },
  {
    "id": "io.github.GitHub30-qiita-mcp-server",
    "name": "io.github.GitHub30/qiita-mcp-server",
    "description": "Publish articles to Qiita via MCP tools. Minimal, fast, and focused on Qiita authoring.",
    "category": "version-control",
    "version": "0.1.0",
    "author": "io.github.GitHub30",
    "repository": "https://github.com/GitHub30/qiita-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/GitHub30/qiita-mcp-server#readme",
    "homepage": "https://github.com/GitHub30/qiita-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.GitHub30/qiita-mcp-server",
      "description": "Publish articles to Qiita via MCP tools. Minimal, fast, and focused on Qiita authoring.",
      "repository": {
        "url": "https://github.com/GitHub30/qiita-mcp-server",
        "source": "github"
      },
      "version": "0.1.0"
    }
  },
  {
    "id": "io.github.GitHub30-zenn-mcp-server",
    "name": "io.github.GitHub30/zenn-mcp-server",
    "description": "MCP server that posts to Zenn.",
    "category": "version-control",
    "version": "0.1.0",
    "author": "io.github.GitHub30",
    "repository": "https://github.com/GitHub30/zenn-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/GitHub30/zenn-mcp-server#readme",
    "homepage": "https://github.com/GitHub30/zenn-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.GitHub30/zenn-mcp-server",
      "description": "MCP server that posts to Zenn.",
      "repository": {
        "url": "https://github.com/GitHub30/zenn-mcp-server",
        "source": "github"
      },
      "version": "0.1.0"
    }
  },
  {
    "id": "io.github.GoneTone-mcp-server-taiwan-weather",
    "name": "io.github.GoneTone/mcp-server-taiwan-weather",
    "description": "用於取得臺灣中央氣象署 API 資料的 Model Context Protocol (MCP) Server",
    "category": "version-control",
    "version": "0.1.4",
    "author": "io.github.GoneTone",
    "repository": "https://github.com/GoneTone/mcp-server-taiwan-weather",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @gonetone/mcp-server-taiwan-weather",
    "documentationUrl": "https://github.com/GoneTone/mcp-server-taiwan-weather#readme",
    "homepage": "https://github.com/GoneTone/mcp-server-taiwan-weather",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.GoneTone/mcp-server-taiwan-weather",
      "description": "用於取得臺灣中央氣象署 API 資料的 Model Context Protocol (MCP) Server",
      "repository": {
        "url": "https://github.com/GoneTone/mcp-server-taiwan-weather",
        "source": "github"
      },
      "version": "0.1.4",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@gonetone/mcp-server-taiwan-weather",
          "version": "0.1.4",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "您的中央氣象署 API 授權碼。 請前往 https://opendata.cwa.gov.tw/user/authkey，登入後點擊 \"取得授權碼\" 取得。",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "CWA_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.GoogleCloudPlatform-gemini-cloud-assist-mcp",
    "name": "io.github.GoogleCloudPlatform/gemini-cloud-assist-mcp",
    "description": "MCP Server for understanding, managing & troubleshooting your GCP environment.",
    "category": "version-control",
    "version": "0.1.1",
    "author": "io.github.GoogleCloudPlatform",
    "repository": "https://github.com/GoogleCloudPlatform/gemini-cloud-assist-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @google-cloud/gemini-cloud-assist-mcp",
    "documentationUrl": "https://github.com/GoogleCloudPlatform/gemini-cloud-assist-mcp#readme",
    "homepage": "https://github.com/GoogleCloudPlatform/gemini-cloud-assist-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.GoogleCloudPlatform/gemini-cloud-assist-mcp",
      "description": "MCP Server for understanding, managing & troubleshooting your GCP environment.",
      "repository": {
        "url": "https://github.com/GoogleCloudPlatform/gemini-cloud-assist-mcp",
        "source": "github"
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@google-cloud/gemini-cloud-assist-mcp",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.HzaCode-onecite",
    "name": "io.github.HzaCode/onecite",
    "description": "Generate academic citations from DOI, arXiv, titles, or URLs in BibTeX, APA, MLA formats.",
    "category": "version-control",
    "version": "0.0.11",
    "author": "io.github.HzaCode",
    "repository": "https://github.com/HzaCode/OneCite",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install onecite",
    "documentationUrl": "https://github.com/HzaCode/OneCite#readme",
    "homepage": "https://github.com/HzaCode/OneCite",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.HzaCode/onecite",
      "description": "Generate academic citations from DOI, arXiv, titles, or URLs in BibTeX, APA, MLA formats.",
      "repository": {
        "url": "https://github.com/HzaCode/OneCite",
        "source": "github"
      },
      "version": "0.0.11",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "onecite",
          "version": "0.0.11",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.IPv6-mcp-transcribe",
    "name": "io.github.IPv6/mcp-transcribe",
    "description": "MCP-Transcribe server allows LLMs to interact with the text content of audio/video files",
    "category": "filesystem",
    "version": "1.0.4",
    "author": "io.github.IPv6",
    "repository": "https://github.com/transcribe-app/mcp-transcribe",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/transcribe-app/mcp-transcribe#readme",
    "homepage": "https://github.com/transcribe-app/mcp-transcribe",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.IPv6/mcp-transcribe",
      "description": "MCP-Transcribe server allows LLMs to interact with the text content of audio/video files",
      "repository": {
        "url": "https://github.com/transcribe-app/mcp-transcribe",
        "source": "github"
      },
      "version": "1.0.4",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/transcribe-app/mcp-transcribe/releases/download/v1.0.4/transcribe-com-v1.0.4.mcpb",
          "fileSha256": "720278617e2a55372919f4ca33bb6298e1e58433f4148fe88b86463fad07bdab",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your MCP-integration URL",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "MCP_INTEGRATION_URL"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.Inflectra-mcp-server-spira",
    "name": "io.github.Inflectra/mcp-server-spira",
    "description": "A Model Context Protocol (MCP) server enabling AI assistants to interact with Spira by Inflectra.",
    "category": "version-control",
    "version": "1.1.1",
    "author": "io.github.Inflectra",
    "repository": "https://github.com/Inflectra/mcp-server-spira",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-server-spira",
    "documentationUrl": "https://github.com/Inflectra/mcp-server-spira#readme",
    "homepage": "https://github.com/Inflectra/mcp-server-spira",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Inflectra/mcp-server-spira",
      "description": "A Model Context Protocol (MCP) server enabling AI assistants to interact with Spira by Inflectra.",
      "repository": {
        "url": "https://github.com/Inflectra/mcp-server-spira",
        "source": "github"
      },
      "version": "1.1.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-server-spira",
          "version": "1.1.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "The base URL for your instance of Spira (typically https://mycompany.spiraservice.net or https://demo-xx.spiraservice.net/mycompany)",
              "isRequired": true,
              "format": "string",
              "name": "INFLECTRA_SPIRA_BASE_URL"
            },
            {
              "description": "The login name you use to access Spira",
              "isRequired": true,
              "format": "string",
              "name": "INFLECTRA_SPIRA_USERNAME"
            },
            {
              "description": "The API Key (RSS Token) you use to access the Spira REST API",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "INFLECTRA_SPIRA_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.IvanMurzak-Unity-MCP",
    "name": "io.github.IvanMurzak/Unity-MCP",
    "description": "Make 3D games in Unity Engine with AI. MCP Server + Plugin for Unity Editor and Unity games.",
    "category": "version-control",
    "version": "0.17.1",
    "author": "io.github.IvanMurzak",
    "repository": "https://github.com/IvanMurzak/Unity-MCP",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/ivanmurzakdev/unity-mcp-server:0.17.1",
    "documentationUrl": "https://github.com/IvanMurzak/Unity-MCP#readme",
    "homepage": "https://github.com/IvanMurzak/Unity-MCP",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.IvanMurzak/Unity-MCP",
      "description": "Make 3D games in Unity Engine with AI. MCP Server + Plugin for Unity Editor and Unity games.",
      "repository": {
        "url": "https://github.com/IvanMurzak/Unity-MCP",
        "source": "github",
        "subfolder": "Unity-MCP-Server"
      },
      "version": "0.17.1",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/ivanmurzakdev/unity-mcp-server:0.17.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Client -> Server <- Plugin connection port (default: 8080)",
              "format": "number",
              "name": "UNITY_MCP_PORT"
            },
            {
              "description": "Plugin -> Server connection timeout (ms) (default: 10000)",
              "format": "number",
              "name": "UNITY_MCP_PLUGIN_TIMEOUT"
            },
            {
              "description": "Client -> Server transport type: stdio or http (default: http)",
              "format": "string",
              "default": "stdio",
              "name": "UNITY_MCP_CLIENT_TRANSPORT"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.IvanRublev-keyphrases-mcp",
    "name": "io.github.IvanRublev/keyphrases-mcp",
    "description": "An MCP server to extract keyphrases from a text with the BERT model",
    "category": "version-control",
    "version": "0.0.4",
    "author": "io.github.IvanRublev",
    "repository": "https://github.com/IvanRublev/keyphrases-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install keyphrases-mcp",
    "documentationUrl": "https://github.com/IvanRublev/keyphrases-mcp#readme",
    "homepage": "https://github.com/IvanRublev/keyphrases-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.IvanRublev/keyphrases-mcp",
      "description": "An MCP server to extract keyphrases from a text with the BERT model",
      "repository": {
        "url": "https://github.com/IvanRublev/keyphrases-mcp",
        "source": "github"
      },
      "version": "0.0.4",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "keyphrases-mcp",
          "version": "0.0.4",
          "runtimeHint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "value": "keyphrases-mcp-server",
              "type": "positional"
            },
            {
              "description": "Directory containing documents to process",
              "isRequired": true,
              "format": "filepath",
              "type": "named",
              "name": "--allowed-dir",
              "valueHint": "documents_directory"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.JustasMonkev-mcp-accessibility-scanner",
    "name": "io.github.JustasMonkev/mcp-accessibility-scanner",
    "description": "MCP server for automated web accessibility scanning with Playwright and Axe-core.",
    "category": "web",
    "version": "1.1.1",
    "author": "io.github.JustasMonkev",
    "repository": "https://github.com/JustasMonkev/mcp-accessibility-scanner",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-accessibility-scanner",
    "documentationUrl": "https://github.com/JustasMonkev/mcp-accessibility-scanner#readme",
    "homepage": "https://github.com/JustasMonkev/mcp-accessibility-scanner",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.JustasMonkev/mcp-accessibility-scanner",
      "description": "MCP server for automated web accessibility scanning with Playwright and Axe-core.",
      "repository": {
        "url": "https://github.com/JustasMonkev/mcp-accessibility-scanner",
        "source": "github"
      },
      "version": "1.1.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-accessibility-scanner",
          "version": "1.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.JustinBeckwith-linkinator-mcp",
    "name": "io.github.JustinBeckwith/linkinator-mcp",
    "description": "MCP server for link checking using linkinator",
    "category": "version-control",
    "version": "0.2.1",
    "author": "io.github.JustinBeckwith",
    "repository": "https://github.com/JustinBeckwith/linkinator-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install linkinator-mcp",
    "documentationUrl": "https://github.com/JustinBeckwith/linkinator-mcp#readme",
    "homepage": "https://github.com/JustinBeckwith/linkinator-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.JustinBeckwith/linkinator-mcp",
      "description": "MCP server for link checking using linkinator",
      "repository": {
        "url": "https://github.com/JustinBeckwith/linkinator-mcp",
        "source": "github"
      },
      "version": "0.2.1",
      "icons": [
        {
          "src": "https://raw.githubusercontent.com/JustinBeckwith/linkinator-mcp/main/site/linkinator-mcp.webp",
          "mimeType": "image/webp",
          "sizes": [
            "any"
          ]
        }
      ],
      "packages": [
        {
          "registryType": "npm",
          "identifier": "linkinator-mcp",
          "version": "0.2.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.KylinMountain-web-fetch-mcp",
    "name": "io.github.KylinMountain/web-fetch-mcp",
    "description": "MCP server for web content fetching, summarizing, comparing, and extracting information",
    "category": "web",
    "version": "0.1.1",
    "author": "io.github.KylinMountain",
    "repository": "https://github.com/KylinMountain/web-fetch-mcp.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install web-fetch-mcp",
    "documentationUrl": "https://github.com/KylinMountain/web-fetch-mcp.git#readme",
    "homepage": "https://github.com/KylinMountain/web-fetch-mcp.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.KylinMountain/web-fetch-mcp",
      "description": "MCP server for web content fetching, summarizing, comparing, and extracting information",
      "repository": {
        "url": "https://github.com/KylinMountain/web-fetch-mcp.git",
        "source": "github"
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "web-fetch-mcp",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Gemini API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "GEMINI_API_KEY"
            },
            {
              "description": "Your proxy for the gemini api service",
              "format": "string",
              "name": "HTTP_PROXY"
            },
            {
              "description": "Your proxy for the gemini api service",
              "format": "string",
              "name": "HTTPS_PROXY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.LinuxSuRen-atest-mcp-server",
    "name": "io.github.LinuxSuRen/atest-mcp-server",
    "description": "Auto-download & launch https://github.com/LinuxSuRen/atest-mcp-server",
    "category": "version-control",
    "version": "1.0.2",
    "author": "io.github.LinuxSuRen",
    "repository": "https://github.com/LinuxSuRen/atest-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install atest-mcp-server-launcher",
    "documentationUrl": "https://github.com/LinuxSuRen/atest-mcp-server#readme",
    "homepage": "https://github.com/LinuxSuRen/atest-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.LinuxSuRen/atest-mcp-server",
      "description": "Auto-download & launch https://github.com/LinuxSuRen/atest-mcp-server",
      "repository": {
        "url": "https://github.com/LinuxSuRen/atest-mcp-server",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "atest-mcp-server-launcher",
          "version": "1.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.Lungshot-ninjaone",
    "name": "io.github.Lungshot/ninjaone",
    "description": "MCP server for NinjaONE RMM with device management, monitoring, and automation",
    "category": "version-control",
    "version": "1.2.9",
    "author": "io.github.Lungshot",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Lungshot/ninjaone",
      "description": "MCP server for NinjaONE RMM with device management, monitoring, and automation",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.2.9"
    }
  },
  {
    "id": "io.github.Lyellr88-marm-mcp-server",
    "name": "io.github.Lyellr88/marm-mcp-server",
    "description": "Universal MCP Server with advanced AI memory capabilities and semantic search.",
    "category": "version-control",
    "version": "2.2.5",
    "author": "io.github.Lyellr88",
    "repository": "https://github.com/Lyellr88/MARM-Systems",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install marm-mcp-server",
    "documentationUrl": "https://github.com/Lyellr88/MARM-Systems#readme",
    "homepage": "https://github.com/Lyellr88/MARM-Systems",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Lyellr88/marm-mcp-server",
      "description": "Universal MCP Server with advanced AI memory capabilities and semantic search.",
      "repository": {
        "url": "https://github.com/Lyellr88/MARM-Systems",
        "source": "github"
      },
      "version": "2.2.5",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "marm-mcp-server",
          "version": "2.2.5",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "oci",
          "identifier": "docker.io/lyellr88/marm-mcp-server:2.2.5",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.MR901-mcp-plots",
    "name": "io.github.MR901/mcp-plots",
    "description": "MCP server for data visualization with Mermaid charts.",
    "category": "version-control",
    "version": "0.0.3",
    "author": "io.github.MR901",
    "repository": "https://github.com/MR901/mcp-plots",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-plots",
    "documentationUrl": "https://github.com/MR901/mcp-plots#readme",
    "homepage": "https://github.com/MR901/mcp-plots",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.MR901/mcp-plots",
      "description": "MCP server for data visualization with Mermaid charts.",
      "repository": {
        "url": "https://github.com/MR901/mcp-plots",
        "source": "github"
      },
      "version": "0.0.3",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-plots",
          "version": "0.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.MR901-plots-mcp",
    "name": "io.github.MR901/plots-mcp",
    "description": "MCP server for data visualization with Mermaid charts.",
    "category": "version-control",
    "version": "0.0.1",
    "author": "io.github.MR901",
    "repository": "https://github.com/MR901/plots-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-plots",
    "documentationUrl": "https://github.com/MR901/plots-mcp#readme",
    "homepage": "https://github.com/MR901/plots-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.MR901/plots-mcp",
      "description": "MCP server for data visualization with Mermaid charts.",
      "repository": {
        "url": "https://github.com/MR901/plots-mcp",
        "source": "github"
      },
      "version": "0.0.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-plots",
          "version": "0.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.MasonChow-source-map-parser-mcp",
    "name": "io.github.MasonChow/source-map-parser-mcp",
    "description": "Parse JavaScript error stack traces back to original source code using source maps",
    "category": "version-control",
    "version": "1.3.2",
    "author": "io.github.MasonChow",
    "repository": "https://github.com/MasonChow/source-map-parser-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install source-map-parser-mcp",
    "documentationUrl": "https://github.com/MasonChow/source-map-parser-mcp#readme",
    "homepage": "https://github.com/MasonChow/source-map-parser-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.MasonChow/source-map-parser-mcp",
      "description": "Parse JavaScript error stack traces back to original source code using source maps",
      "repository": {
        "url": "https://github.com/MasonChow/source-map-parser-mcp",
        "source": "github"
      },
      "version": "1.3.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "source-map-parser-mcp",
          "version": "1.3.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Context lines around error locations in source code",
              "format": "string",
              "name": "SOURCE_MAP_PARSER_CONTEXT_OFFSET_LINE"
            },
            {
              "description": "Maximum memory cache size in MB for source maps",
              "format": "string",
              "name": "SOURCE_MAP_PARSER_RESOURCE_CACHE_MAX_SIZE"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.MauroDruwel-smartschool-mcp",
    "name": "io.github.MauroDruwel/smartschool-mcp",
    "description": "Access Smartschool courses, grades, assignments, and messages through the Model Context Protocol",
    "category": "version-control",
    "version": "0.1.4",
    "author": "io.github.MauroDruwel",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install smartschool-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.MauroDruwel/smartschool-mcp",
      "description": "Access Smartschool courses, grades, assignments, and messages through the Model Context Protocol",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.4",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "smartschool-mcp",
          "version": "0.1.4",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.NeerajG03-vector-memory",
    "name": "io.github.NeerajG03/vector-memory",
    "description": "Semantic document memory using Redis vector store. Save and recall files with natural language.",
    "category": "filesystem",
    "version": "0.3.1",
    "author": "io.github.NeerajG03",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-server-vector-memory",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.NeerajG03/vector-memory",
      "description": "Semantic document memory using Redis vector store. Save and recall files with natural language.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.3.1",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "mcp-server-vector-memory",
          "version": "0.3.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.Nekzus-npm-sentinel-mcp",
    "name": "io.github.Nekzus/npm-sentinel-mcp",
    "description": "NPM Sentinel MCP - AI-powered NPM package analysis for security, dependencies, and performance.",
    "category": "version-control",
    "version": "1.11.8",
    "author": "io.github.Nekzus",
    "repository": "https://github.com/Nekzus/npm-sentinel-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @nekzus/mcp-server",
    "documentationUrl": "https://github.com/Nekzus/npm-sentinel-mcp#readme",
    "homepage": "https://github.com/Nekzus/npm-sentinel-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Nekzus/npm-sentinel-mcp",
      "description": "NPM Sentinel MCP - AI-powered NPM package analysis for security, dependencies, and performance.",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.11.8",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@nekzus/mcp-server",
          "version": "1.11.8",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.NitishGourishetty-contextual-mcp-server",
    "name": "io.github.NitishGourishetty/contextual-mcp-server",
    "description": "RAG-enabled MCP server using Contextual AI. Supports single-agent and multi-agent modes.",
    "category": "version-control",
    "version": "0.1.0",
    "author": "io.github.NitishGourishetty",
    "repository": "https://github.com/NitishGourishetty/contextual-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install contextual-mcp-server",
    "documentationUrl": "https://github.com/NitishGourishetty/contextual-mcp-server#readme",
    "homepage": "https://github.com/NitishGourishetty/contextual-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.NitishGourishetty/contextual-mcp-server",
      "description": "RAG-enabled MCP server using Contextual AI. Supports single-agent and multi-agent modes.",
      "repository": {
        "url": "https://github.com/NitishGourishetty/contextual-mcp-server",
        "source": "github"
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "contextual-mcp-server",
          "version": "0.1.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Contextual AI API key",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "API_KEY"
            },
            {
              "description": "Your Contextual AI agent ID (required only for single-agent mode; omit for multi-agent mode)",
              "format": "string",
              "name": "AGENT_ID"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.OpenCageData-opencage-geocoding-mcp",
    "name": "io.github.OpenCageData/opencage-geocoding-mcp",
    "description": "MCP server for OpenCage geocoding API",
    "category": "version-control",
    "version": "1.0.3",
    "author": "io.github.OpenCageData",
    "repository": "https://github.com/OpenCageData/opencage-geocoding-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @opencage/mcp-opencage-server",
    "documentationUrl": "https://github.com/OpenCageData/opencage-geocoding-mcp#readme",
    "homepage": "https://github.com/OpenCageData/opencage-geocoding-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.OpenCageData/opencage-geocoding-mcp",
      "description": "MCP server for OpenCage geocoding API",
      "repository": {
        "url": "https://github.com/OpenCageData/opencage-geocoding-mcp",
        "source": "github"
      },
      "version": "1.0.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@opencage/mcp-opencage-server",
          "version": "1.0.3",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.OtherVibes-mcp-as-a-judge",
    "name": "io.github.OtherVibes/mcp-as-a-judge",
    "description": "MCP as a Judge: a behavioral MCP that strengthens AI coding assistants via explicit LLM evaluations",
    "category": "version-control",
    "version": "0.3.20",
    "author": "io.github.OtherVibes",
    "repository": "https://github.com/OtherVibes/mcp-as-a-judge",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-as-a-judge",
    "documentationUrl": "https://github.com/OtherVibes/mcp-as-a-judge#readme",
    "homepage": "https://github.com/OtherVibes/mcp-as-a-judge",
    "rawData": {
      "$schema": "",
      "name": "io.github.OtherVibes/mcp-as-a-judge",
      "description": "MCP as a Judge: a behavioral MCP that strengthens AI coding assistants via explicit LLM evaluations",
      "repository": {
        "url": "https://github.com/OtherVibes/mcp-as-a-judge",
        "source": "github"
      },
      "version": "0.3.20",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "mcp-as-a-judge",
          "version": "0.3.20",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.PV-Bhat-vibe-check-mcp-server",
    "name": "io.github.PV-Bhat/vibe-check-mcp-server",
    "description": "Metacognitive AI agent oversight: adaptive CPI interrupts for alignment, reflection and safety",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.PV-Bhat",
    "repository": "https://github.com/PV-Bhat/vibe-check-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @pv-bhat/vibe-check-mcp",
    "documentationUrl": "https://github.com/PV-Bhat/vibe-check-mcp-server#readme",
    "homepage": "https://github.com/PV-Bhat/vibe-check-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.PV-Bhat/vibe-check-mcp-server",
      "description": "Metacognitive AI agent oversight: adaptive CPI interrupts for alignment, reflection and safety",
      "repository": {
        "url": "https://github.com/PV-Bhat/vibe-check-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@pv-bhat/vibe-check-mcp",
          "version": "2.5.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.PagerDuty-pagerduty-mcp",
    "name": "io.github.PagerDuty/pagerduty-mcp",
    "description": "PagerDuty's official MCP server which provides tools to interact with your PagerDuty account.",
    "category": "version-control",
    "version": "0.2.1",
    "author": "io.github.PagerDuty",
    "repository": "https://github.com/PagerDuty/pagerduty-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install pagerduty-mcp",
    "documentationUrl": "https://github.com/PagerDuty/pagerduty-mcp-server#readme",
    "homepage": "https://github.com/PagerDuty/pagerduty-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.PagerDuty/pagerduty-mcp",
      "description": "PagerDuty's official MCP server which provides tools to interact with your PagerDuty account.",
      "repository": {
        "url": "https://github.com/PagerDuty/pagerduty-mcp-server",
        "source": "github"
      },
      "version": "0.2.1",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "pagerduty-mcp",
          "version": "0.2.1",
          "runtimeHint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "--enable-write-tools",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "PagerDuty User API Token - obtain from User Settings > API Access in your PagerDuty account",
              "name": "PAGERDUTY_USER_API_KEY"
            },
            {
              "description": "PagerDuty API host URL (default: https://api.pagerduty.com, EU: https://api.eu.pagerduty.com)",
              "name": "PAGERDUTY_API_HOST"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.Pranavj17-mcp-server-graylog",
    "name": "io.github.Pranavj17/mcp-server-graylog",
    "description": "Search Graylog logs by timestamps, filter by streams, and debug production issues.",
    "category": "version-control",
    "version": "1.0.2",
    "author": "io.github.Pranavj17",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.Pranavj17/mcp-server-graylog",
      "description": "Search Graylog logs by timestamps, filter by streams, and debug production issues.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.2"
    }
  },
  {
    "id": "io.github.PrefectHQ-prefect-mcp-server",
    "name": "io.github.PrefectHQ/prefect-mcp-server",
    "description": "MCP server for Prefect. Monitor and debug workflows, deployments, and automations.",
    "category": "version-control",
    "version": "0.0.1-beta.7",
    "author": "io.github.PrefectHQ",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install prefect-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.PrefectHQ/prefect-mcp-server",
      "description": "MCP server for Prefect. Monitor and debug workflows, deployments, and automations.",
      "title": "Prefect MCP Server",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.1-beta.7",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "prefect-mcp",
          "version": "0.0.1-beta.7",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.ProfessionalWiki-mediawiki-mcp-server",
    "name": "io.github.ProfessionalWiki/mediawiki-mcp-server",
    "description": "MCP server enabling AI clients to interact with any MediaWiki wiki through standard tools",
    "category": "version-control",
    "version": "0.3.0",
    "author": "io.github.ProfessionalWiki",
    "repository": "https://github.com/ProfessionalWiki/MediaWiki-MCP-Server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @professional-wiki/mediawiki-mcp-server",
    "documentationUrl": "https://github.com/ProfessionalWiki/MediaWiki-MCP-Server#readme",
    "homepage": "https://github.com/ProfessionalWiki/MediaWiki-MCP-Server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.ProfessionalWiki/mediawiki-mcp-server",
      "description": "MCP server enabling AI clients to interact with any MediaWiki wiki through standard tools",
      "title": "MediaWiki MCP Server",
      "repository": {
        "url": "https://github.com/ProfessionalWiki/MediaWiki-MCP-Server",
        "source": "github"
      },
      "version": "0.3.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@professional-wiki/mediawiki-mcp-server",
          "version": "0.3.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Path to your configuration file",
              "format": "filepath",
              "default": "config.json",
              "name": "CONFIG"
            },
            {
              "description": "Type of MCP server transport",
              "default": "stdio",
              "choices": [
                "stdio",
                "http"
              ],
              "name": "MCP_TRANSPORT"
            },
            {
              "description": "Port used for StreamableHTTP transport",
              "format": "number",
              "default": "3000",
              "name": "PORT"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.Raistlin82-btp-sap-odata-to-mcp-server-optimized",
    "name": "io.github.Raistlin82/btp-sap-odata-to-mcp-server-optimized",
    "description": "Enterprise SAP OData to MCP Server with AI capabilities and Cloud Foundry integration",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.Raistlin82",
    "repository": "https://github.com/Raistlin82/btp-sap-odata-to-mcp-server-optimized",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install btp-sap-odata-to-mcp-server",
    "documentationUrl": "https://github.com/Raistlin82/btp-sap-odata-to-mcp-server-optimized#readme",
    "homepage": "https://github.com/Raistlin82/btp-sap-odata-to-mcp-server-optimized",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Raistlin82/btp-sap-odata-to-mcp-server-optimized",
      "description": "Enterprise SAP OData to MCP Server with AI capabilities and Cloud Foundry integration",
      "repository": {
        "url": "https://github.com/Raistlin82/btp-sap-odata-to-mcp-server-optimized",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "btp-sap-odata-to-mcp-server",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "URL of the SAP Identity Authentication Service tenant",
              "isRequired": true,
              "format": "string",
              "name": "SAP_IAS_URL"
            },
            {
              "description": "Client ID for the OAuth application in IAS",
              "isRequired": true,
              "format": "string",
              "name": "SAP_IAS_CLIENT_ID"
            },
            {
              "description": "Client Secret for the OAuth application in IAS",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "SAP_IAS_CLIENT_SECRET"
            },
            {
              "description": "Name of the BTP destination used for service discovery",
              "isRequired": true,
              "format": "string",
              "name": "SAP_DESTINATION_NAME"
            },
            {
              "description": "OData discovery mode: pattern, business, whitelist, or all",
              "format": "string",
              "name": "ODATA_DISCOVERY_MODE"
            },
            {
              "description": "Comma-separated patterns to include (pattern mode)",
              "format": "string",
              "name": "ODATA_INCLUDE_PATTERNS"
            },
            {
              "description": "Comma-separated patterns to exclude (pattern mode)",
              "format": "string",
              "name": "ODATA_EXCLUDE_PATTERNS"
            },
            {
              "description": "The port on which the Express server will listen",
              "format": "string",
              "name": "PORT"
            },
            {
              "description": "The application's operating environment",
              "format": "string",
              "name": "NODE_ENV"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.Saidiibrahim-search-papers",
    "name": "io.github.Saidiibrahim/search-papers",
    "description": "An MCP server to search papers from arXiv",
    "category": "version-control",
    "version": "0.1.1",
    "author": "io.github.Saidiibrahim",
    "repository": "https://github.com/Saidiibrahim/search-papers",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install search-papers",
    "documentationUrl": "https://github.com/Saidiibrahim/search-papers#readme",
    "homepage": "https://github.com/Saidiibrahim/search-papers",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Saidiibrahim/search-papers",
      "description": "An MCP server to search papers from arXiv",
      "repository": {
        "url": "https://github.com/Saidiibrahim/search-papers",
        "source": "github"
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "search-papers",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.SamYuan1990-i18n-agent-action",
    "name": "io.github.SamYuan1990/i18n-agent-action",
    "description": "An i18n github action for language translate",
    "category": "version-control",
    "version": "mcp",
    "author": "io.github.SamYuan1990",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull ghcr.io/SamYuan1990/i18n-agent-action:mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.SamYuan1990/i18n-agent-action",
      "description": "An i18n github action for language translate",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "mcp",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "ghcr.io/SamYuan1990/i18n-agent-action:mcp",
          "runtimeHint": "docker",
          "transport": {
            "type": "sse",
            "url": "https://example.com:8080/sse"
          },
          "runtimeArguments": [
            {
              "description": "Port mapping from host to container",
              "value": "8080:8080",
              "type": "named",
              "name": "-p"
            },
            {
              "description": "API key for the i18n service",
              "value": "api_key={api_key}",
              "variables": {
                "api_key": {
                  "description": "Your API key for the translation service",
                  "isRequired": true,
                  "format": "string",
                  "isSecret": true
                }
              },
              "type": "named",
              "name": "-e"
            },
            {
              "description": "Volume mount for model files",
              "value": "{models_path}:/app/models",
              "variables": {
                "models_path": {
                  "description": "Path to your models directory on the host",
                  "isRequired": true,
                  "format": "filepath",
                  "default": "/path/to/your/models"
                }
              },
              "type": "named",
              "name": "-v"
            },
            {
              "description": "Encoder model file path",
              "value": "encoder={encoder_file}",
              "variables": {
                "encoder_file": {
                  "description": "Encoder model file name",
                  "isRequired": true,
                  "format": "string",
                  "default": "/app/models/your-encoder.onnx"
                }
              },
              "type": "named",
              "name": "-e"
            },
            {
              "description": "Decoder model file path",
              "value": "decoder={decoder_file}",
              "variables": {
                "decoder_file": {
                  "description": "Decoder model file name",
                  "isRequired": true,
                  "format": "string",
                  "default": "/app/models/your-decoder.onnx"
                }
              },
              "type": "named",
              "name": "-e"
            },
            {
              "description": "Tokens model file path",
              "value": "tokens={tokens_file}",
              "variables": {
                "tokens_file": {
                  "description": "Tokens model file name",
                  "isRequired": true,
                  "format": "string",
                  "default": "/app/models/your-tokens.onnx"
                }
              },
              "type": "named",
              "name": "-e"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.Selenium39-mcp-server-tempmail",
    "name": "io.github.Selenium39/mcp-server-tempmail",
    "description": "MCP server for temporary email management using ChatTempMail API",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.Selenium39",
    "repository": "https://github.com/Selenium39/mcp-server-tempmail",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-server-tempmail",
    "documentationUrl": "https://github.com/Selenium39/mcp-server-tempmail#readme",
    "homepage": "https://github.com/Selenium39/mcp-server-tempmail",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Selenium39/mcp-server-tempmail",
      "description": "MCP server for temporary email management using ChatTempMail API",
      "repository": {
        "url": "https://github.com/Selenium39/mcp-server-tempmail",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-tempmail",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "API key for ChatTempMail service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TEMPMAIL_API_KEY"
            },
            {
              "description": "Base URL for ChatTempMail API (optional, defaults to https://chat-tempmail.com)",
              "format": "string",
              "name": "TEMPMAIL_BASE_URL"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.ShingWong-node-server-orchestrator",
    "name": "io.github.ShingWong/node-server-orchestrator",
    "description": "MCP server for orchestrating Node.js development servers (backend, frontend, databases, etc.)",
    "category": "database",
    "version": "1.0.0",
    "author": "io.github.ShingWong",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install node-server-orchestrator",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.ShingWong/node-server-orchestrator",
      "description": "MCP server for orchestrating Node.js development servers (backend, frontend, databases, etc.)",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "node-server-orchestrator",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.Skills03-scrimba-teaching",
    "name": "io.github.Skills03/scrimba-teaching",
    "description": "Interactive programming teacher using Scrimba's methodology for 10x retention",
    "category": "version-control",
    "version": "2.0.0",
    "author": "io.github.Skills03",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install scrimba-teaching-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Skills03/scrimba-teaching",
      "description": "Interactive programming teacher using Scrimba's methodology for 10x retention",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "scrimba-teaching-mcp",
          "version": "2.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.SnowLeopard-AI-bigquery-mcp",
    "name": "io.github.SnowLeopard-AI/bigquery-mcp",
    "description": "A SnowLeopardAI-managed MCP server that provides access to Google BigQuery data.",
    "category": "version-control",
    "version": "0.1.0",
    "author": "io.github.SnowLeopard-AI",
    "repository": "https://github.com/SnowLeopard-AI/bigquery-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install sl-bigquery-mcp",
    "documentationUrl": "https://github.com/SnowLeopard-AI/bigquery-mcp#readme",
    "homepage": "https://github.com/SnowLeopard-AI/bigquery-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.SnowLeopard-AI/bigquery-mcp",
      "description": "A SnowLeopardAI-managed MCP server that provides access to Google BigQuery data.",
      "repository": {
        "url": "https://github.com/SnowLeopard-AI/bigquery-mcp",
        "source": "github"
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "sl-bigquery-mcp",
          "version": "0.1.8",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.Snowflake-Labs-mcp",
    "name": "io.github.Snowflake-Labs/mcp",
    "description": "MCP Server for Snowflake from Snowflake Labs",
    "category": "version-control",
    "version": "1.3.3",
    "author": "io.github.Snowflake-Labs",
    "repository": "https://github.com/Snowflake-Labs/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install snowflake-labs-mcp",
    "documentationUrl": "https://github.com/Snowflake-Labs/mcp#readme",
    "homepage": "https://github.com/Snowflake-Labs/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Snowflake-Labs/mcp",
      "description": "MCP Server for Snowflake from Snowflake Labs",
      "repository": {
        "url": "https://github.com/Snowflake-Labs/mcp",
        "source": "github"
      },
      "version": "1.3.3",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "snowflake-labs-mcp",
          "version": "1.3.3",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Path to service specification file",
              "isRequired": true,
              "type": "named",
              "name": "--service-config-file"
            },
            {
              "description": "Account identifier (e.g. xy12345.us-east-1)",
              "type": "named",
              "name": "--account"
            },
            {
              "description": "Snowflake host URL",
              "type": "named",
              "name": "--host"
            },
            {
              "description": "Username for authentication",
              "type": "named",
              "name": "--user"
            },
            {
              "description": "Password or programmatic access token",
              "type": "named",
              "name": "--password"
            },
            {
              "description": "Role to use for connection",
              "type": "named",
              "name": "--role"
            },
            {
              "description": "Warehouse to use for queries",
              "type": "named",
              "name": "--warehouse"
            },
            {
              "description": "Whether passcode is embedded in password",
              "type": "named",
              "name": "--passcode-in-password"
            },
            {
              "description": "MFA passcode for authentication",
              "type": "named",
              "name": "--passcode"
            },
            {
              "description": "Private key for key pair authentication",
              "type": "named",
              "name": "--private-key"
            },
            {
              "description": "Path to private key file",
              "type": "named",
              "name": "--private-key-file"
            },
            {
              "description": "Password for encrypted private key",
              "type": "named",
              "name": "--private-key-file-pwd"
            },
            {
              "description": "Authentication type",
              "default": "snowflake",
              "type": "named",
              "name": "--authenticator"
            },
            {
              "description": "Name of connection from connections.toml (or config.toml) file",
              "type": "named",
              "name": "--connection-name"
            },
            {
              "description": "Transport for the MCP server",
              "default": "stdio",
              "choices": [
                "stdio",
                "http",
                "sse",
                "streamable-http"
              ],
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "Custom endpoint path for HTTP transports",
              "default": "/mcp",
              "type": "named",
              "name": "--endpoint"
            }
          ],
          "environmentVariables": [
            {
              "description": "Account identifier (e.g. xy12345.us-east-1)",
              "format": "string",
              "name": "SNOWFLAKE_ACCOUNT"
            },
            {
              "description": "Snowflake host URL",
              "format": "string",
              "name": "SNOWFLAKE_HOST"
            },
            {
              "description": "Username for authentication",
              "format": "string",
              "name": "SNOWFLAKE_USER"
            },
            {
              "description": "Password or programmatic access token",
              "format": "string",
              "name": "SNOWFLAKE_PASSWORD"
            },
            {
              "description": "Role to use for connection",
              "format": "string",
              "name": "SNOWFLAKE_ROLE"
            },
            {
              "description": "Warehouse to use for queries",
              "format": "string",
              "name": "SNOWFLAKE_WAREHOUSE"
            },
            {
              "description": "MFA passcode for authentication",
              "format": "string",
              "name": "SNOWFLAKE_PASSCODE"
            },
            {
              "description": "Private key for key pair authentication",
              "format": "string",
              "name": "SNOWFLAKE_PRIVATE_KEY"
            },
            {
              "description": "Path to private key file",
              "format": "string",
              "name": "SNOWFLAKE_PRIVATE_KEY_FILE"
            },
            {
              "description": "Password for encrypted private key",
              "format": "string",
              "name": "SNOWFLAKE_PRIVATE_KEY_FILE_PWD"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.SonarSource-sonarqube-mcp-server",
    "name": "io.github.SonarSource/sonarqube-mcp-server",
    "description": "An MCP server that enables integration with SonarQube Server or Cloud for code quality and security.",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.SonarSource",
    "repository": "https://github.com/SonarSource/sonarqube-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/mcp/sonarqube:latest",
    "documentationUrl": "https://github.com/SonarSource/sonarqube-mcp-server#readme",
    "homepage": "https://github.com/SonarSource/sonarqube-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.SonarSource/sonarqube-mcp-server",
      "description": "An MCP server that enables integration with SonarQube Server or Cloud for code quality and security.",
      "repository": {
        "url": "https://github.com/SonarSource/sonarqube-mcp-server",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/mcp/sonarqube:latest",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your SonarQube Server USER token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "SONARQUBE_TOKEN"
            },
            {
              "description": "Your SonarQube Cloud organization key (if using SonarQube Cloud)",
              "format": "string",
              "isSecret": true,
              "name": "SONARQUBE_ORG"
            },
            {
              "description": "Your SonarQube Server URL (if using SonarQube Server)",
              "format": "string",
              "isSecret": true,
              "name": "SONARQUBE_URL"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.Synclub-tech-synclub-dxt",
    "name": "io.github.Synclub-tech/synclub-dxt",
    "description": "SynClub MCP Server for AI-powered comic creation with script generation and image tools",
    "category": "version-control",
    "version": "0.6.0",
    "author": "io.github.Synclub-tech",
    "repository": "https://github.com/Synclub-tech/Synclub-dxt",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/Synclub-tech/Synclub-dxt#readme",
    "homepage": "https://github.com/Synclub-tech/Synclub-dxt",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.Synclub-tech/synclub-dxt",
      "description": "SynClub MCP Server for AI-powered comic creation with script generation and image tools",
      "repository": {
        "url": "https://github.com/Synclub-tech/Synclub-dxt",
        "source": "github"
      },
      "version": "0.6.0"
    }
  },
  {
    "id": "io.github.TonySimonovsky-claude-code-conversation-search-mcp",
    "name": "io.github.TonySimonovsky/claude-code-conversation-search-mcp",
    "description": "Search Claude Code conversation history with natural language queries across all projects",
    "category": "version-control",
    "version": "1.1.3",
    "author": "io.github.TonySimonovsky",
    "repository": "https://github.com/TonySimonovsky/claude-code-conversation-search-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install claude-code-conversation-search-mcp",
    "documentationUrl": "https://github.com/TonySimonovsky/claude-code-conversation-search-mcp#readme",
    "homepage": "https://github.com/TonySimonovsky/claude-code-conversation-search-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.TonySimonovsky/claude-code-conversation-search-mcp",
      "description": "Search Claude Code conversation history with natural language queries across all projects",
      "repository": {
        "url": "https://github.com/TonySimonovsky/claude-code-conversation-search-mcp",
        "source": "github"
      },
      "version": "1.1.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "claude-code-conversation-search-mcp",
          "version": "1.1.3",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.TranThienTrong-asset-auto-generator",
    "name": "io.github.TranThienTrong/asset-auto-generator",
    "description": "An MCP server that provides asset auto generator",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.TranThienTrong",
    "repository": "https://github.com/TranThienTrong/asset-auto-generator.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://TranThienTrong.github.io/mcp/asset-auto-generator",
    "documentationUrl": "https://github.com/TranThienTrong/asset-auto-generator.git#readme",
    "homepage": "https://github.com/TranThienTrong/asset-auto-generator.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.TranThienTrong/asset-auto-generator",
      "description": "An MCP server that provides asset auto generator",
      "repository": {
        "url": "https://github.com/TranThienTrong/asset-auto-generator.git",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://TranThienTrong.github.io/mcp/asset-auto-generator"
        }
      ]
    }
  },
  {
    "id": "io.github.TranThienTrong-asset-auto-picker",
    "name": "io.github.TranThienTrong/asset-auto-picker",
    "description": "An MCP server that provides [describe what your server does]",
    "category": "version-control",
    "version": "1.2.0",
    "author": "io.github.TranThienTrong",
    "repository": "https://github.com/TranThienTrong/asset_auto_picker",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install asset-auto-picker",
    "documentationUrl": "https://github.com/TranThienTrong/asset_auto_picker#readme",
    "homepage": "https://github.com/TranThienTrong/asset_auto_picker",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.TranThienTrong/asset-auto-picker",
      "description": "An MCP server that provides [describe what your server does]",
      "repository": {
        "url": "https://github.com/TranThienTrong/asset_auto_picker",
        "source": "github"
      },
      "version": "1.2.0",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "asset-auto-picker",
          "version": "1.2.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.VectifyAI-pageindex-mcp",
    "name": "io.github.VectifyAI/pageindex-mcp",
    "description": "Reasoning-based RAG system for chatting with long PDFs. Supports local and online files.",
    "category": "filesystem",
    "version": "1.6.2",
    "author": "io.github.VectifyAI",
    "repository": "https://github.com/VectifyAI/pageindex-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install pageindex-mcp",
    "documentationUrl": "https://github.com/VectifyAI/pageindex-mcp#readme",
    "homepage": "https://github.com/VectifyAI/pageindex-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.VectifyAI/pageindex-mcp",
      "description": "Reasoning-based RAG system for chatting with long PDFs. Supports local and online files.",
      "repository": {
        "url": "https://github.com/VectifyAI/pageindex-mcp",
        "source": "github"
      },
      "version": "1.6.2",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "pageindex-mcp",
          "version": "1.6.2",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/VectifyAI/pageindex-mcp/releases/download/v1.6.2/pageindex-mcp-1.6.2.mcpb",
          "fileSha256": "67138e48f8755be07fafb149cb438f1144619e90b232e5329208ec0c2fbf2d6f",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.VictoriaMetrics-Community-mcp-victorialogs",
    "name": "io.github.VictoriaMetrics-Community/mcp-victorialogs",
    "description": "MCP Server for VictoriaLogs. Provides integration with VictoriaLogs API and documentation",
    "category": "version-control",
    "version": "1.3.0",
    "author": "io.github.VictoriaMetrics-Community",
    "repository": "https://github.com/VictoriaMetrics-Community/mcp-victorialogs",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull ghcr.io/victoriametrics-community/mcp-victorialogs:v1.3.0",
    "documentationUrl": "https://github.com/VictoriaMetrics-Community/mcp-victorialogs#readme",
    "homepage": "https://github.com/VictoriaMetrics-Community/mcp-victorialogs",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.VictoriaMetrics-Community/mcp-victorialogs",
      "description": "MCP Server for VictoriaLogs. Provides integration with VictoriaLogs API and documentation",
      "repository": {
        "url": "https://github.com/VictoriaMetrics-Community/mcp-victorialogs",
        "source": "github"
      },
      "version": "1.3.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "ghcr.io/victoriametrics-community/mcp-victorialogs:v1.3.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "URL to VictoriaMetrics instance (it should be root URL of vmlingle or vlselect), for example http://localhost:9428 or https://play-vmlogs.victoriametrics.com",
              "isRequired": true,
              "format": "string",
              "name": "VL_INSTANCE_ENTRYPOINT"
            },
            {
              "description": "Type of VictoriaMetrics instance (single / cluster)",
              "isRequired": true,
              "format": "string",
              "name": "VL_INSTANCE_TYPE"
            },
            {
              "description": "Authentication token for VictoriaMetrics API",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "VL_INSTANCE_BEARER_TOKEN"
            },
            {
              "description": "Comma-separated list of tools to disable",
              "format": "string",
              "name": "MCP_DISABLED_TOOLS"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.VictoriaMetrics-Community-mcp-victoriametrics",
    "name": "io.github.VictoriaMetrics-Community/mcp-victoriametrics",
    "description": "MCP Server for VictoriaMetrics. Provides integration with VictoriaMetrics API and documentation",
    "category": "version-control",
    "version": "1.14.0",
    "author": "io.github.VictoriaMetrics-Community",
    "repository": "https://github.com/VictoriaMetrics-Community/mcp-victoriametrics",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull ghcr.io/victoriametrics-community/mcp-victoriametrics:v1.14.0",
    "documentationUrl": "https://github.com/VictoriaMetrics-Community/mcp-victoriametrics#readme",
    "homepage": "https://github.com/VictoriaMetrics-Community/mcp-victoriametrics",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.VictoriaMetrics-Community/mcp-victoriametrics",
      "description": "MCP Server for VictoriaMetrics. Provides integration with VictoriaMetrics API and documentation",
      "repository": {
        "url": "https://github.com/VictoriaMetrics-Community/mcp-victoriametrics",
        "source": "github"
      },
      "version": "1.14.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "ghcr.io/victoriametrics-community/mcp-victoriametrics:v1.14.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "URL to VictoriaMetrics instance (it should be root URL of vmsingle or vmselect), for example http://localhost:8428 or https://play.victoriametrics.com",
              "isRequired": true,
              "format": "string",
              "name": "VM_INSTANCE_ENTRYPOINT"
            },
            {
              "description": "Type of VictoriaMetrics instance (single / cluster)",
              "isRequired": true,
              "format": "string",
              "name": "VM_INSTANCE_TYPE"
            },
            {
              "description": "Authentication token for VictoriaMetrics API",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "VM_INSTANCE_BEARER_TOKEN"
            },
            {
              "description": "Optional: API key from VictoriaMetrics Cloud Console (if you have deployment in VictoriaMetrics Cloud)",
              "format": "string",
              "isSecret": true,
              "name": "VMC_API_KEY"
            },
            {
              "description": "Comma-separated list of tools to disable",
              "format": "string",
              "name": "MCP_DISABLED_TOOLS"
            },
            {
              "description": "Disable all resources (documentation tool will continue to work)",
              "format": "boolean",
              "name": "MCP_DISABLE_RESOURCES"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.VictoriaMetrics-Community-mcp-victoriatraces",
    "name": "io.github.VictoriaMetrics-Community/mcp-victoriatraces",
    "description": "MCP Server for VictoriaTraces. Provides integration with VictoriaTraces API and documentation",
    "category": "version-control",
    "version": "1.2.0",
    "author": "io.github.VictoriaMetrics-Community",
    "repository": "https://github.com/VictoriaMetrics-Community/mcp-victoriatraces",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull ghcr.io/victoriametrics-community/mcp-victoriatraces:v1.2.0",
    "documentationUrl": "https://github.com/VictoriaMetrics-Community/mcp-victoriatraces#readme",
    "homepage": "https://github.com/VictoriaMetrics-Community/mcp-victoriatraces",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.VictoriaMetrics-Community/mcp-victoriatraces",
      "description": "MCP Server for VictoriaTraces. Provides integration with VictoriaTraces API and documentation",
      "repository": {
        "url": "https://github.com/VictoriaMetrics-Community/mcp-victoriatraces",
        "source": "github"
      },
      "version": "1.2.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "ghcr.io/victoriametrics-community/mcp-victoriatraces:v1.2.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "URL to VictoriaTraces instance (it should be root URL of vtlingle or vtselect), for example http://localhost:10428",
              "isRequired": true,
              "format": "string",
              "name": "VT_INSTANCE_ENTRYPOINT"
            },
            {
              "description": "Authentication token for VictoriaMetrics API",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "VT_INSTANCE_BEARER_TOKEN"
            },
            {
              "description": "Comma-separated list of tools to disable",
              "format": "string",
              "name": "MCP_DISABLED_TOOLS"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.Wolfe-Jam-claude-faf-mcp",
    "name": "io.github.Wolfe-Jam/claude-faf-mcp",
    "description": "Anthropic-Approved MCP Server. 33+ tools for .faf Project DNA. 3.6k downloads.",
    "category": "version-control",
    "version": "2.6.2",
    "author": "io.github.Wolfe-Jam",
    "repository": "https://github.com/Wolfe-Jam/claude-faf-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install claude-faf-mcp",
    "documentationUrl": "https://github.com/Wolfe-Jam/claude-faf-mcp#readme",
    "homepage": "https://github.com/Wolfe-Jam/claude-faf-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.Wolfe-Jam/claude-faf-mcp",
      "description": "Anthropic-Approved MCP Server. 33+ tools for .faf Project DNA. 3.6k downloads.",
      "repository": {
        "url": "https://github.com/Wolfe-Jam/claude-faf-mcp",
        "source": "github"
      },
      "version": "2.6.2",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "claude-faf-mcp",
          "version": "2.6.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.YinTokey-mcp_hackernews",
    "name": "io.github.YinTokey/mcp_hackernews",
    "description": "MCP server exposing a simple Hacker News search tool (top stories).",
    "category": "version-control",
    "version": "1.1.0",
    "author": "io.github.YinTokey",
    "repository": "https://github.com/YinTokey/mcp_hackernews",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-hackernews",
    "documentationUrl": "https://github.com/YinTokey/mcp_hackernews#readme",
    "homepage": "https://github.com/YinTokey/mcp_hackernews",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.YinTokey/mcp_hackernews",
      "description": "MCP server exposing a simple Hacker News search tool (top stories).",
      "repository": {
        "url": "https://github.com/YinTokey/mcp_hackernews",
        "source": "github"
      },
      "version": "1.1.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-hackernews",
          "version": "1.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.aahl-mcp-aktools",
    "name": "io.github.aahl/mcp-aktools",
    "description": "MCP Server for stock and crypto",
    "category": "version-control",
    "version": "0.1.5",
    "author": "io.github.aahl",
    "repository": "https://github.com/aahl/mcp-aktools",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-aktools",
    "documentationUrl": "https://github.com/aahl/mcp-aktools#readme",
    "homepage": "https://github.com/aahl/mcp-aktools",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.aahl/mcp-aktools",
      "description": "MCP Server for stock and crypto",
      "title": "AkTools MCP Server",
      "repository": {
        "url": "https://github.com/aahl/mcp-aktools",
        "source": "github"
      },
      "version": "0.1.5",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "mcp-aktools",
          "version": "0.1.5",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "oci",
          "identifier": "ghcr.io/aahl/mcp-aktools:latest",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.aahl-mcp-notify",
    "name": "io.github.aahl/mcp-notify",
    "description": "MCP Server for notify",
    "category": "version-control",
    "version": "0.1.3",
    "author": "io.github.aahl",
    "repository": "https://github.com/aahl/mcp-notify",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-notify",
    "documentationUrl": "https://github.com/aahl/mcp-notify#readme",
    "homepage": "https://github.com/aahl/mcp-notify",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.aahl/mcp-notify",
      "description": "MCP Server for notify",
      "title": "Notify MCP Server",
      "repository": {
        "url": "https://github.com/aahl/mcp-notify",
        "source": "github"
      },
      "version": "0.1.3",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "mcp-notify",
          "version": "0.1.3",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "oci",
          "identifier": "ghcr.io/aahl/mcp-notify:latest",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.abelljs-abell",
    "name": "io.github.abelljs/abell",
    "description": "AI tools related to Abell. Currently includes MCP of Abell",
    "category": "version-control",
    "version": "0.0.9",
    "author": "io.github.abelljs",
    "repository": "https://github.com/abelljs/abell",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install abell-ai",
    "documentationUrl": "https://github.com/abelljs/abell#readme",
    "homepage": "https://github.com/abelljs/abell",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.abelljs/abell",
      "description": "AI tools related to Abell. Currently includes MCP of Abell",
      "repository": {
        "url": "https://github.com/abelljs/abell",
        "source": "github"
      },
      "version": "0.0.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "abell-ai",
          "version": "0.0.9",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.abhijitjavelin-javelin-guardrails-mcp-server",
    "name": "io.github.abhijitjavelin/javelin-guardrails-mcp-server",
    "description": "An MCP server that provides Javelin Standalone Guardrails",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.abhijitjavelin",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://abhijitjavelin.github.io/javelin-guardrails-mcp-server/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.abhijitjavelin/javelin-guardrails-mcp-server",
      "description": "An MCP server that provides Javelin Standalone Guardrails",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://abhijitjavelin.github.io/javelin-guardrails-mcp-server/mcp",
          "headers": [
            {
              "description": "Javelin API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "x-javelin-apikey"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.abhishekbhakat-airflow-mcp-server",
    "name": "io.github.abhishekbhakat/airflow-mcp-server",
    "description": "An MCP server for Apache Airflow ",
    "category": "version-control",
    "version": "0.9.0",
    "author": "io.github.abhishekbhakat",
    "repository": "https://github.com/abhishekbhakat/airflow-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install airflow-mcp-server",
    "documentationUrl": "https://github.com/abhishekbhakat/airflow-mcp-server#readme",
    "homepage": "https://github.com/abhishekbhakat/airflow-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.abhishekbhakat/airflow-mcp-server",
      "description": "An MCP server for Apache Airflow ",
      "repository": {
        "url": "https://github.com/abhishekbhakat/airflow-mcp-server",
        "source": "github"
      },
      "version": "0.9.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "airflow-mcp-server",
          "version": "0.9.0",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Use only read-only tools for safe operations",
              "type": "named",
              "name": "--safe"
            },
            {
              "description": "Use static tools instead of hierarchical discovery",
              "type": "named",
              "name": "--static-tools"
            }
          ],
          "environmentVariables": [
            {
              "description": "The base URL for the Airflow API (e.g., http://localhost:8080)",
              "isRequired": true,
              "format": "string",
              "name": "AIRFLOW_BASE_URL"
            },
            {
              "description": "The JWT authentication token for Airflow API access",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "AUTH_TOKEN"
            }
          ]
        },
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "airflow-mcp-server",
          "version": "0.8.2",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3000"
          },
          "packageArguments": [
            {
              "description": "Use HTTP (Streamable HTTP) transport",
              "type": "named",
              "name": "--http"
            },
            {
              "description": "Port to run HTTP server on",
              "value": "3000",
              "type": "named",
              "name": "--port"
            },
            {
              "description": "Host to bind HTTP server to",
              "value": "localhost",
              "type": "named",
              "name": "--host"
            },
            {
              "description": "Use only read-only tools for safe operations",
              "type": "named",
              "name": "--safe"
            },
            {
              "description": "Use static tools instead of hierarchical discovery",
              "type": "named",
              "name": "--static-tools"
            }
          ],
          "environmentVariables": [
            {
              "description": "The base URL for the Airflow API (e.g., http://localhost:8080)",
              "isRequired": true,
              "format": "string",
              "name": "AIRFLOW_BASE_URL"
            },
            {
              "description": "The JWT authentication token for Airflow API access",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "AUTH_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.agentailor-slimcontext-mcp-server",
    "name": "io.github.agentailor/slimcontext-mcp-server",
    "description": "MCP Server for SlimContext - AI chat history compression tools",
    "category": "version-control",
    "version": "0.1.2",
    "author": "io.github.agentailor",
    "repository": "https://github.com/agentailor/slimcontext-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install slimcontext-mcp-server",
    "documentationUrl": "https://github.com/agentailor/slimcontext-mcp-server#readme",
    "homepage": "https://github.com/agentailor/slimcontext-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.agentailor/slimcontext-mcp-server",
      "description": "MCP Server for SlimContext - AI chat history compression tools",
      "repository": {
        "url": "https://github.com/agentailor/slimcontext-mcp-server",
        "source": "github"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "slimcontext-mcp-server",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.ai-mcpower-mcpower-proxy",
    "name": "io.github.ai-mcpower/mcpower-proxy",
    "description": "Security proxy that wraps MCP servers with real-time monitoring and policy enforcement",
    "category": "version-control",
    "version": "0.0.60",
    "author": "io.github.ai-mcpower",
    "repository": "https://github.com/MCPower-Security/mcpower-proxy",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcpower-proxy",
    "documentationUrl": "https://github.com/MCPower-Security/mcpower-proxy#readme",
    "homepage": "https://github.com/MCPower-Security/mcpower-proxy",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.ai-mcpower/mcpower-proxy",
      "description": "Security proxy that wraps MCP servers with real-time monitoring and policy enforcement",
      "title": "MCPower Security Proxy",
      "repository": {
        "url": "https://github.com/MCPower-Security/mcpower-proxy",
        "source": "github"
      },
      "version": "0.0.60",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "mcpower-proxy",
          "version": "0.0.60",
          "runtimeHint": "uvx",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.aikts-yandex-tracker-mcp",
    "name": "io.github.aikts/yandex-tracker-mcp",
    "description": "MCP server for Yandex Tracker API.",
    "category": "version-control",
    "version": "0.4.6",
    "author": "io.github.aikts",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install yandex-tracker-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.aikts/yandex-tracker-mcp",
      "description": "MCP server for Yandex Tracker API.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.4.6",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "yandex-tracker-mcp",
          "version": "0.4.6",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.alex-feel-mcp-context-server",
    "name": "io.github.alex-feel/mcp-context-server",
    "description": "An MCP server that provides persistent multimodal context storage for LLM agents.",
    "category": "version-control",
    "version": "0.4.1",
    "author": "io.github.alex-feel",
    "repository": "https://github.com/alex-feel/mcp-context-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-context-server",
    "documentationUrl": "https://github.com/alex-feel/mcp-context-server#readme",
    "homepage": "https://github.com/alex-feel/mcp-context-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.alex-feel/mcp-context-server",
      "description": "An MCP server that provides persistent multimodal context storage for LLM agents.",
      "repository": {
        "url": "https://github.com/alex-feel/mcp-context-server",
        "source": "github"
      },
      "version": "0.4.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-context-server",
          "version": "0.4.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Log level",
              "format": "string",
              "name": "LOG_LEVEL"
            },
            {
              "description": "Maximum individual image size in megabytes",
              "format": "number",
              "name": "MAX_IMAGE_SIZE_MB"
            },
            {
              "description": "Maximum total request size in megabytes",
              "format": "number",
              "name": "MAX_TOTAL_SIZE_MB"
            },
            {
              "description": "Custom database file location path",
              "format": "string",
              "name": "DB_PATH"
            },
            {
              "description": "Maximum number of concurrent read connections in the pool",
              "format": "number",
              "name": "POOL_MAX_READERS"
            },
            {
              "description": "Maximum number of concurrent write connections in the pool",
              "format": "number",
              "name": "POOL_MAX_WRITERS"
            },
            {
              "description": "Connection timeout in seconds",
              "format": "number",
              "name": "POOL_CONNECTION_TIMEOUT_S"
            },
            {
              "description": "Idle connection timeout in seconds",
              "format": "number",
              "name": "POOL_IDLE_TIMEOUT_S"
            },
            {
              "description": "Connection health check interval in seconds",
              "format": "number",
              "name": "POOL_HEALTH_CHECK_INTERVAL_S"
            },
            {
              "description": "Maximum number of retry attempts for failed operations",
              "format": "number",
              "name": "RETRY_MAX_RETRIES"
            },
            {
              "description": "Base delay in seconds between retry attempts",
              "format": "number",
              "name": "RETRY_BASE_DELAY_S"
            },
            {
              "description": "Maximum delay in seconds between retry attempts",
              "format": "number",
              "name": "RETRY_MAX_DELAY_S"
            },
            {
              "description": "Enable random jitter in retry delays",
              "format": "boolean",
              "name": "RETRY_JITTER"
            },
            {
              "description": "Exponential backoff multiplication factor for retries",
              "format": "number",
              "name": "RETRY_BACKOFF_FACTOR"
            },
            {
              "description": "Enable SQLite foreign key constraints",
              "format": "boolean",
              "name": "SQLITE_FOREIGN_KEYS"
            },
            {
              "description": "SQLite journal mode (e.g., WAL, DELETE)",
              "format": "string",
              "name": "SQLITE_JOURNAL_MODE"
            },
            {
              "description": "SQLite synchronous mode (e.g., NORMAL, FULL, OFF)",
              "format": "string",
              "name": "SQLITE_SYNCHRONOUS"
            },
            {
              "description": "SQLite temporary storage location (e.g., MEMORY, FILE)",
              "format": "string",
              "name": "SQLITE_TEMP_STORE"
            },
            {
              "description": "SQLite memory-mapped I/O size in bytes",
              "format": "number",
              "name": "SQLITE_MMAP_SIZE"
            },
            {
              "description": "SQLite cache size (negative value for KB, positive for pages)",
              "format": "number",
              "name": "SQLITE_CACHE_SIZE"
            },
            {
              "description": "SQLite page size in bytes",
              "format": "number",
              "name": "SQLITE_PAGE_SIZE"
            },
            {
              "description": "SQLite WAL autocheckpoint threshold in pages",
              "format": "number",
              "name": "SQLITE_WAL_AUTOCHECKPOINT"
            },
            {
              "description": "SQLite busy timeout in milliseconds",
              "format": "number",
              "name": "SQLITE_BUSY_TIMEOUT_MS"
            },
            {
              "description": "SQLite WAL checkpoint mode (e.g., PASSIVE, FULL, RESTART)",
              "format": "string",
              "name": "SQLITE_WAL_CHECKPOINT"
            },
            {
              "description": "Server shutdown timeout in seconds",
              "format": "number",
              "name": "SHUTDOWN_TIMEOUT_S"
            },
            {
              "description": "Test mode shutdown timeout in seconds",
              "format": "number",
              "name": "SHUTDOWN_TIMEOUT_TEST_S"
            },
            {
              "description": "Queue operation timeout in seconds",
              "format": "number",
              "name": "QUEUE_TIMEOUT_S"
            },
            {
              "description": "Test mode queue timeout in seconds",
              "format": "number",
              "name": "QUEUE_TIMEOUT_TEST_S"
            },
            {
              "description": "Circuit breaker failure threshold before opening",
              "format": "number",
              "name": "CIRCUIT_BREAKER_FAILURE_THRESHOLD"
            },
            {
              "description": "Circuit breaker recovery timeout in seconds",
              "format": "number",
              "name": "CIRCUIT_BREAKER_RECOVERY_TIMEOUT_S"
            },
            {
              "description": "Maximum calls allowed in circuit breaker half-open state",
              "format": "number",
              "name": "CIRCUIT_BREAKER_HALF_OPEN_MAX_CALLS"
            },
            {
              "description": "Enable semantic search functionality",
              "format": "boolean",
              "name": "ENABLE_SEMANTIC_SEARCH"
            },
            {
              "description": "Ollama API host URL for embedding generation",
              "format": "string",
              "name": "OLLAMA_HOST"
            },
            {
              "description": "Embedding model name for semantic search",
              "format": "string",
              "name": "EMBEDDING_MODEL"
            },
            {
              "description": "Embedding vector dimensions",
              "format": "number",
              "name": "EMBEDDING_DIM"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.alondmnt-joplin-mcp",
    "name": "io.github.alondmnt/joplin-mcp",
    "description": "FastMCP server exposing Joplin notes, notebooks, tags, and imports.",
    "category": "version-control",
    "version": "0.4.1",
    "author": "io.github.alondmnt",
    "repository": "https://github.com/alondmnt/joplin-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install joplin-mcp",
    "documentationUrl": "https://github.com/alondmnt/joplin-mcp#readme",
    "homepage": "https://github.com/alondmnt/joplin-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.alondmnt/joplin-mcp",
      "description": "FastMCP server exposing Joplin notes, notebooks, tags, and imports.",
      "repository": {
        "url": "https://github.com/alondmnt/joplin-mcp",
        "source": "github"
      },
      "version": "0.4.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "joplin-mcp",
          "version": "0.4.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Web Clipper authentication token from a running Joplin instance",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "JOPLIN_TOKEN"
            },
            {
              "description": "Optional override for the Joplin Web Clipper base URL (default http://localhost:41184)",
              "format": "string",
              "name": "JOPLIN_URL"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.andrasfe-vulnicheck",
    "name": "io.github.andrasfe/vulnicheck",
    "description": "HTTP MCP Server for comprehensive Python vulnerability scanning and security analysis.",
    "category": "version-control",
    "version": "0.1.0",
    "author": "io.github.andrasfe",
    "repository": "https://github.com/andrasfe/vulnicheck",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/andrasfe/vulnicheck:main",
    "documentationUrl": "https://github.com/andrasfe/vulnicheck#readme",
    "homepage": "https://github.com/andrasfe/vulnicheck",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.andrasfe/vulnicheck",
      "description": "HTTP MCP Server for comprehensive Python vulnerability scanning and security analysis.",
      "repository": {
        "url": "https://github.com/andrasfe/vulnicheck",
        "source": "github"
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/andrasfe/vulnicheck:main",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3000/mcp"
          },
          "environmentVariables": [
            {
              "description": "API key for NIST National Vulnerability Database (increases rate limit from 5 to 50 requests per 30 seconds)",
              "format": "string",
              "isSecret": true,
              "name": "NVD_API_KEY"
            },
            {
              "description": "GitHub token for Advisory Database access (increases rate limit to 5000 requests per hour)",
              "format": "string",
              "isSecret": true,
              "name": "GITHUB_TOKEN"
            },
            {
              "description": "OpenAI API key for LLM-based risk assessment in MCP passthrough operations",
              "format": "string",
              "isSecret": true,
              "name": "OPENAI_API_KEY"
            },
            {
              "description": "Anthropic API key for LLM-based risk assessment (alternative to OpenAI)",
              "format": "string",
              "isSecret": true,
              "name": "ANTHROPIC_API_KEY"
            },
            {
              "description": "Port for MCP HTTP server (default: 3000)",
              "format": "number",
              "name": "MCP_PORT"
            },
            {
              "description": "Cache time-to-live in seconds for vulnerability data (default: 900)",
              "format": "number",
              "name": "CACHE_TTL"
            },
            {
              "description": "Enable HTTP-only mode with MCP client delegation (true/false, default: auto-detect)",
              "format": "string",
              "name": "VULNICHECK_HTTP_ONLY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.antuelle78-weather-mcp",
    "name": "io.github.antuelle78/weather-mcp",
    "description": "A simple MCP server for getting weather information.",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.antuelle78",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "",
      "name": "io.github.antuelle78/weather-mcp",
      "description": "A simple MCP server for getting weather information.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0"
    }
  },
  {
    "id": "io.github.antvis-mcp-server-chart",
    "name": "io.github.antvis/mcp-server-chart",
    "description": "A Model Context Protocol server for generating charts using AntV.",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.antvis",
    "repository": "https://github.com/antvis/mcp-server-chart",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @antv/mcp-server-chart",
    "documentationUrl": "https://github.com/antvis/mcp-server-chart#readme",
    "homepage": "https://github.com/antvis/mcp-server-chart",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.antvis/mcp-server-chart",
      "description": "A Model Context Protocol server for generating charts using AntV.",
      "repository": {
        "url": "https://github.com/antvis/mcp-server-chart",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@antv/mcp-server-chart",
          "version": "0.9.0-beta.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Custom chart generation service URL for private deployment",
              "format": "string",
              "default": "https://antv-studio.alipay.com/api/gpt-vis",
              "name": "VIS_REQUEST_SERVER"
            },
            {
              "description": "Service identifier for chart generation records",
              "format": "string",
              "isSecret": true,
              "name": "SERVICE_ID"
            },
            {
              "description": "Comma-separated list of tool names to disable",
              "format": "string",
              "name": "DISABLED_TOOLS"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.anyproto-anytype-mcp",
    "name": "io.github.anyproto/anytype-mcp",
    "description": "Official MCP server for Anytype API - your encrypted, local and collaborative wiki.",
    "category": "version-control",
    "version": "1.0.7",
    "author": "io.github.anyproto",
    "repository": "https://github.com/anyproto/anytype-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @anyproto/anytype-mcp",
    "documentationUrl": "https://github.com/anyproto/anytype-mcp#readme",
    "homepage": "https://github.com/anyproto/anytype-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.anyproto/anytype-mcp",
      "description": "Official MCP server for Anytype API - your encrypted, local and collaborative wiki.",
      "repository": {
        "url": "https://github.com/anyproto/anytype-mcp",
        "source": "github"
      },
      "version": "1.0.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@anyproto/anytype-mcp",
          "version": "1.0.7",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "JSON string of headers for Anytype API. Example: {\"Authorization\":\"Bearer <YOUR_API_KEY>\", \"Anytype-Version\":\"2025-05-20\"}",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "OPENAPI_MCP_HEADERS"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.appwrite-mcp-for-api",
    "name": "io.github.appwrite/mcp-for-api",
    "description": "MCP (Model Context Protocol) server for Appwrite",
    "category": "web",
    "version": "0.2.8",
    "author": "io.github.appwrite",
    "repository": "https://github.com/appwrite/mcp-for-api",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-server-appwrite",
    "documentationUrl": "https://github.com/appwrite/mcp-for-api#readme",
    "homepage": "https://github.com/appwrite/mcp-for-api",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.appwrite/mcp-for-api",
      "description": "MCP (Model Context Protocol) server for Appwrite",
      "repository": {
        "url": "https://github.com/appwrite/mcp-for-api",
        "source": "github"
      },
      "version": "0.2.8",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "mcp-server-appwrite",
          "version": "0.2.8",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.arielbk-anki-mcp",
    "name": "io.github.arielbk/anki-mcp",
    "description": "MCP server for integrating with Anki flashcards through conversational AI",
    "category": "version-control",
    "version": "0.3.2",
    "author": "io.github.arielbk",
    "repository": "https://github.com/arielbk/anki-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @arielbk/anki-mcp",
    "documentationUrl": "https://github.com/arielbk/anki-mcp#readme",
    "homepage": "https://github.com/arielbk/anki-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.arielbk/anki-mcp",
      "description": "MCP server for integrating with Anki flashcards through conversational AI",
      "repository": {
        "url": "https://github.com/arielbk/anki-mcp",
        "source": "github"
      },
      "version": "0.3.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@arielbk/anki-mcp",
          "version": "0.3.2",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.augee99-mcp-weather",
    "name": "io.github.augee99/mcp-weather",
    "description": "An MCP server that provides [describe what your server does]",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.augee99",
    "repository": "https://github.com/augee99/mcp-weather",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-weather-augee99",
    "documentationUrl": "https://github.com/augee99/mcp-weather#readme",
    "homepage": "https://github.com/augee99/mcp-weather",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.augee99/mcp-weather",
      "description": "An MCP server that provides [describe what your server does]",
      "repository": {
        "url": "https://github.com/augee99/mcp-weather",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-weather-augee99",
          "version": "0.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.augmnt-augments-mcp-server",
    "name": "io.github.augmnt/augments-mcp-server",
    "description": "Augments MCP Server - A comprehensive framework documentation provider for Claude Code",
    "category": "version-control",
    "version": "1.0.2",
    "author": "io.github.augmnt",
    "repository": "https://github.com/augmnt/augments-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install augments-mcp-server",
    "documentationUrl": "https://github.com/augmnt/augments-mcp-server#readme",
    "homepage": "https://github.com/augmnt/augments-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.augmnt/augments-mcp-server",
      "description": "Augments MCP Server - A comprehensive framework documentation provider for Claude Code",
      "repository": {
        "url": "https://github.com/augmnt/augments-mcp-server",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "augments-mcp-server",
          "version": "1.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.b1ff-atlassian-dc-mcp-bitbucket",
    "name": "io.github.b1ff/atlassian-dc-mcp-bitbucket",
    "description": "MCP server for Atlassian Bitbucket Data Center - interact with repositories and code",
    "category": "version-control",
    "version": "0.9.9",
    "author": "io.github.b1ff",
    "repository": "https://github.com/b1ff/atlassian-dc-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @atlassian-dc-mcp/bitbucket",
    "documentationUrl": "https://github.com/b1ff/atlassian-dc-mcp#readme",
    "homepage": "https://github.com/b1ff/atlassian-dc-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-bitbucket",
      "description": "MCP server for Atlassian Bitbucket Data Center - interact with repositories and code",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/bitbucket",
          "version": "0.9.9",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "BITBUCKET_HOST"
            },
            {
              "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
              "format": "string",
              "name": "BITBUCKET_API_BASE_PATH"
            },
            {
              "description": "Bitbucket Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "BITBUCKET_API_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.b1ff-atlassian-dc-mcp-confluence",
    "name": "io.github.b1ff/atlassian-dc-mcp-confluence",
    "description": "MCP server for Atlassian Confluence Data Center - access and manage content",
    "category": "version-control",
    "version": "0.9.9",
    "author": "io.github.b1ff",
    "repository": "https://github.com/b1ff/atlassian-dc-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @atlassian-dc-mcp/confluence",
    "documentationUrl": "https://github.com/b1ff/atlassian-dc-mcp#readme",
    "homepage": "https://github.com/b1ff/atlassian-dc-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-confluence",
      "description": "MCP server for Atlassian Confluence Data Center - access and manage content",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/confluence",
          "version": "0.9.9",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Confluence host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "CONFLUENCE_HOST"
            },
            {
              "description": "Confluence API base path (alternative to CONFLUENCE_HOST)",
              "format": "string",
              "name": "CONFLUENCE_API_BASE_PATH"
            },
            {
              "description": "Confluence Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "CONFLUENCE_API_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.b1ff-atlassian-dc-mcp-jira",
    "name": "io.github.b1ff/atlassian-dc-mcp-jira",
    "description": "MCP server for Atlassian Jira Data Center - search, view, and create issues",
    "category": "version-control",
    "version": "0.9.9",
    "author": "io.github.b1ff",
    "repository": "https://github.com/b1ff/atlassian-dc-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @atlassian-dc-mcp/jira",
    "documentationUrl": "https://github.com/b1ff/atlassian-dc-mcp#readme",
    "homepage": "https://github.com/b1ff/atlassian-dc-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-jira",
      "description": "MCP server for Atlassian Jira Data Center - search, view, and create issues",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/jira",
          "version": "0.9.9",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Jira host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "JIRA_HOST"
            },
            {
              "description": "Jira API base path (alternative to JIRA_HOST)",
              "format": "string",
              "name": "JIRA_API_BASE_PATH"
            },
            {
              "description": "Jira Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "JIRA_API_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.bajoski34-mcp-flutterwave",
    "name": "io.github.bajoski34/mcp-flutterwave",
    "description": "MCP Server to interact with Flutterwave APIs.",
    "category": "version-control",
    "version": "1.2.0",
    "author": "io.github.bajoski34",
    "repository": "https://github.com/bajoski34/mcp-flutterwave",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-flutterwave",
    "documentationUrl": "https://github.com/bajoski34/mcp-flutterwave#readme",
    "homepage": "https://github.com/bajoski34/mcp-flutterwave",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.bajoski34/mcp-flutterwave",
      "description": "MCP Server to interact with Flutterwave APIs.",
      "repository": {
        "url": "https://github.com/bajoski34/mcp-flutterwave",
        "source": "github"
      },
      "version": "1.2.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-flutterwave",
          "version": "1.2.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your SECRET API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "FLW_SECRET_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.benhuang21828-pdfkit",
    "name": "io.github.benhuang21828/pdfkit",
    "description": "AI-powered PDF tools: fill forms, merge, extract data, and split PDFs",
    "category": "version-control",
    "version": "1.0.2",
    "author": "io.github.benhuang21828",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install pdfkit-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.benhuang21828/pdfkit",
      "description": "AI-powered PDF tools: fill forms, merge, extract data, and split PDFs",
      "title": "PDF Kit",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "pdfkit-mcp",
          "version": "1.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.brave-brave-search-mcp-server",
    "name": "io.github.brave/brave-search-mcp-server",
    "description": "Brave Search MCP Server: web results, images, videos, rich results, AI summaries, and more.",
    "category": "web",
    "version": "2.0.58",
    "author": "io.github.brave",
    "repository": "https://github.com/brave/brave-search-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @brave/brave-search-mcp-server",
    "documentationUrl": "https://github.com/brave/brave-search-mcp-server#readme",
    "homepage": "https://github.com/brave/brave-search-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.brave/brave-search-mcp-server",
      "description": "Brave Search MCP Server: web results, images, videos, rich results, AI summaries, and more.",
      "repository": {
        "url": "https://github.com/brave/brave-search-mcp-server",
        "source": "github"
      },
      "version": "2.0.58",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@brave/brave-search-mcp-server",
          "version": "2.0.58",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "BRAVE_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.brightdata-brightdata-mcp",
    "name": "io.github.brightdata/brightdata-mcp",
    "description": "Bright Data's Web MCP server enabling AI agents to search, extract & navigate the web",
    "category": "web",
    "version": "2.6.0",
    "author": "io.github.brightdata",
    "repository": "https://github.com/brightdata/brightdata-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @brightdata/mcp",
    "documentationUrl": "https://github.com/brightdata/brightdata-mcp#readme",
    "homepage": "https://github.com/brightdata/brightdata-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.brightdata/brightdata-mcp",
      "description": "Bright Data's Web MCP server enabling AI agents to search, extract & navigate the web",
      "repository": {
        "url": "https://github.com/brightdata/brightdata-mcp",
        "source": "github"
      },
      "version": "2.6.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@brightdata/mcp",
          "version": "2.6.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for Bright Data",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "API_TOKEN"
            },
            {
              "description": "Your unlocker zone name",
              "format": "string",
              "name": "WEB_UNLOCKER_ZONE"
            },
            {
              "description": "Your browser zone name",
              "format": "string",
              "name": "BROWSER_ZONE"
            },
            {
              "description": "To enable PRO_MODE - set to true",
              "format": "boolean",
              "name": "PRO_MODE"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.browserbase-mcp-server-browserbase",
    "name": "io.github.browserbase/mcp-server-browserbase",
    "description": "MCP server for AI web browser automation using Browserbase and Stagehand",
    "category": "web",
    "version": "2.1.1",
    "author": "io.github.browserbase",
    "repository": "https://github.com/browserbase/mcp-server-browserbase",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @browserbasehq/mcp-server-browserbase",
    "documentationUrl": "https://github.com/browserbase/mcp-server-browserbase#readme",
    "homepage": "https://github.com/browserbase/mcp-server-browserbase",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.browserbase/mcp-server-browserbase",
      "description": "MCP server for AI web browser automation using Browserbase and Stagehand",
      "repository": {
        "url": "https://github.com/browserbase/mcp-server-browserbase",
        "source": "github"
      },
      "version": "2.1.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@browserbasehq/mcp-server-browserbase",
          "version": "2.1.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Browserbase API key",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "BROWSERBASE_API_KEY"
            },
            {
              "description": "Your Browserbase Project ID",
              "isRequired": true,
              "format": "string",
              "name": "BROWSERBASE_PROJECT_ID"
            },
            {
              "description": "Your Gemini API key (default model)",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "GEMINI_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.buildkite-buildkite-mcp-server",
    "name": "io.github.buildkite/buildkite-mcp-server",
    "description": "MCP server exposing Buildkite API data (pipelines, builds, jobs, tests) to AI tooling and editors.",
    "category": "version-control",
    "version": "0.7.0",
    "author": "io.github.buildkite",
    "repository": "https://github.com/buildkite/buildkite-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull ghcr.io/buildkite/buildkite-mcp-server:0.7.0",
    "documentationUrl": "https://github.com/buildkite/buildkite-mcp-server#readme",
    "homepage": "https://github.com/buildkite/buildkite-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.buildkite/buildkite-mcp-server",
      "description": "MCP server exposing Buildkite API data (pipelines, builds, jobs, tests) to AI tooling and editors.",
      "repository": {
        "url": "https://github.com/buildkite/buildkite-mcp-server",
        "source": "github",
        "id": "962909011"
      },
      "version": "0.7.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "ghcr.io/buildkite/buildkite-mcp-server:0.7.0",
          "runtimeHint": "docker",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "description": "The runtime command to execute",
              "value": "run",
              "type": "positional"
            },
            {
              "description": "Run container in interactive mode",
              "type": "named",
              "name": "-i"
            },
            {
              "description": "Automatically remove the container when it exits",
              "type": "named",
              "name": "--rm"
            },
            {
              "description": "Set an environment variable in the runtime",
              "type": "named",
              "name": "-e"
            },
            {
              "description": "Environment variable name",
              "value": "BUILDKITE_API_TOKEN",
              "type": "positional"
            },
            {
              "description": "The container image to run",
              "value": "ghcr.io/buildkite/buildkite-mcp-server:0.7.0",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Buildkite API token for authentication. Get one from https://buildkite.com/user/api-access-tokens",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "BUILDKITE_API_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.burningion-video-editing-mcp",
    "name": "io.github.burningion/video-editing-mcp",
    "description": "MCP Server for Video Jungle - Analyze, Search, Generate, and Edit Videos",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.burningion",
    "repository": "https://github.com/burningion/video-editing-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install video-editor-mcp",
    "documentationUrl": "https://github.com/burningion/video-editing-mcp#readme",
    "homepage": "https://github.com/burningion/video-editing-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.burningion/video-editing-mcp",
      "description": "MCP Server for Video Jungle - Analyze, Search, Generate, and Edit Videos",
      "repository": {
        "url": "https://github.com/burningion/video-editing-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "video-editor-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Video Jungle API Key (found at https://www.video-jungle.com/user/settings)",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "VJ_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.bytedance-mcp-server-browser",
    "name": "io.github.bytedance/mcp-server-browser",
    "description": "MCP server for browser use access",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.bytedance",
    "repository": "https://github.com/bytedance/UI-TARS-desktop",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @agent-infra/mcp-server-browser",
    "documentationUrl": "https://github.com/bytedance/UI-TARS-desktop#readme",
    "homepage": "https://github.com/bytedance/UI-TARS-desktop",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.bytedance/mcp-server-browser",
      "description": "MCP server for browser use access",
      "repository": {
        "url": "https://github.com/bytedance/UI-TARS-desktop",
        "source": "github",
        "subfolder": "packages/agent-infra/mcp-servers/browser"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-browser",
          "version": "latest",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "browser or chrome channel to use, possible values: chrome, edge, firefox.",
              "format": "string",
              "type": "named",
              "name": "browser"
            },
            {
              "description": "Chrome DevTools Protocol endpoint URL",
              "format": "string",
              "type": "named",
              "name": "cdp-endpoint"
            },
            {
              "description": "WebSocket endpoint to connect to, for example",
              "format": "string",
              "type": "named",
              "name": "ws-endpoint"
            },
            {
              "description": "Path to the browser executable",
              "format": "string",
              "type": "named",
              "name": "executable-path"
            },
            {
              "description": "Path to the output directory",
              "format": "string",
              "type": "named",
              "name": "output-dir"
            },
            {
              "description": "Comma-separated list of patterns to bypass the proxy",
              "format": "string",
              "type": "named",
              "name": "proxy-bypass"
            },
            {
              "description": "Proxy server address",
              "format": "string",
              "type": "named",
              "name": "proxy-server"
            },
            {
              "description": "Run server that uses screenshots (Aria snapshots are used by default)",
              "format": "boolean",
              "type": "named",
              "name": "vision"
            }
          ],
          "environmentVariables": [
            {
              "description": "DISPLAY environment variable for browser rendering",
              "format": "string",
              "name": "DISPLAY"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-browser",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "packageArguments": [
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            },
            {
              "description": "browser or chrome channel to use, possible values: chrome, edge, firefox.",
              "format": "string",
              "type": "named",
              "name": "browser"
            },
            {
              "description": "Chrome DevTools Protocol endpoint URL",
              "format": "string",
              "type": "named",
              "name": "cdp-endpoint"
            },
            {
              "description": "WebSocket endpoint to connect to, for example",
              "format": "string",
              "type": "named",
              "name": "ws-endpoint"
            },
            {
              "description": "Path to the browser executable",
              "format": "string",
              "type": "named",
              "name": "executable-path"
            },
            {
              "description": "Path to the output directory",
              "format": "string",
              "type": "named",
              "name": "output-dir"
            },
            {
              "description": "Comma-separated list of patterns to bypass the proxy",
              "format": "string",
              "type": "named",
              "name": "proxy-bypass"
            },
            {
              "description": "Proxy server address",
              "format": "string",
              "type": "named",
              "name": "proxy-server"
            },
            {
              "description": "Run server that uses screenshots (Aria snapshots are used by default)",
              "format": "boolean",
              "type": "named",
              "name": "vision"
            }
          ],
          "environmentVariables": [
            {
              "description": "DISPLAY environment variable for browser rendering",
              "format": "string",
              "name": "DISPLAY"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-browser",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "packageArguments": [
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            },
            {
              "description": "browser or chrome channel to use, possible values: chrome, edge, firefox.",
              "format": "string",
              "type": "named",
              "name": "browser"
            },
            {
              "description": "Chrome DevTools Protocol endpoint URL",
              "format": "string",
              "type": "named",
              "name": "cdp-endpoint"
            },
            {
              "description": "WebSocket endpoint to connect to, for example",
              "format": "string",
              "type": "named",
              "name": "ws-endpoint"
            },
            {
              "description": "Path to the browser executable",
              "format": "string",
              "type": "named",
              "name": "executable-path"
            },
            {
              "description": "Path to the output directory",
              "format": "string",
              "type": "named",
              "name": "output-dir"
            },
            {
              "description": "Comma-separated list of patterns to bypass the proxy",
              "format": "string",
              "type": "named",
              "name": "proxy-bypass"
            },
            {
              "description": "Proxy server address",
              "format": "string",
              "type": "named",
              "name": "proxy-server"
            },
            {
              "description": "Run server that uses screenshots (Aria snapshots are used by default)",
              "format": "boolean",
              "type": "named",
              "name": "vision"
            }
          ],
          "environmentVariables": [
            {
              "description": "DISPLAY environment variable for browser rendering",
              "format": "string",
              "name": "DISPLAY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.bytedance-mcp-server-commands",
    "name": "io.github.bytedance/mcp-server-commands",
    "description": "An MCP server to run arbitrary commands",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.bytedance",
    "repository": "https://github.com/bytedance/UI-TARS-desktop",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @agent-infra/mcp-server-commands",
    "documentationUrl": "https://github.com/bytedance/UI-TARS-desktop#readme",
    "homepage": "https://github.com/bytedance/UI-TARS-desktop",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.bytedance/mcp-server-commands",
      "description": "An MCP server to run arbitrary commands",
      "repository": {
        "url": "https://github.com/bytedance/UI-TARS-desktop",
        "source": "github",
        "subfolder": "packages/agent-infra/mcp-servers/commands"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-commands",
          "version": "latest",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "current working directory",
              "format": "string",
              "type": "named",
              "name": "cwd"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-commands",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "packageArguments": [
            {
              "description": "current working directory",
              "format": "string",
              "type": "named",
              "name": "cwd"
            },
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-commands",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "runtimeArguments": [
            {
              "description": "current working directory",
              "format": "string",
              "type": "named",
              "name": "cwd"
            }
          ],
          "packageArguments": [
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.bytedance-mcp-server-filesystem",
    "name": "io.github.bytedance/mcp-server-filesystem",
    "description": "MCP server for filesystem access",
    "category": "filesystem",
    "version": "1.0.0",
    "author": "io.github.bytedance",
    "repository": "https://github.com/bytedance/UI-TARS-desktop",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @agent-infra/mcp-server-filesystem",
    "documentationUrl": "https://github.com/bytedance/UI-TARS-desktop#readme",
    "homepage": "https://github.com/bytedance/UI-TARS-desktop",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.bytedance/mcp-server-filesystem",
      "description": "MCP server for filesystem access",
      "repository": {
        "url": "https://github.com/bytedance/UI-TARS-desktop",
        "source": "github",
        "subfolder": "packages/agent-infra/mcp-servers/filesystem"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-filesystem",
          "version": "latest",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Comma-separated list of allowed directories for file operations",
              "isRequired": true,
              "format": "string",
              "type": "named",
              "name": "allowed-directories"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-filesystem",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "packageArguments": [
            {
              "description": "Comma-separated list of allowed directories for file operations",
              "isRequired": true,
              "format": "string",
              "type": "named",
              "name": "allowed-directories"
            },
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-filesystem",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "packageArguments": [
            {
              "description": "Comma-separated list of allowed directories for file operations",
              "isRequired": true,
              "format": "string",
              "type": "named",
              "name": "allowed-directories"
            },
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.bytedance-mcp-server-search",
    "name": "io.github.bytedance/mcp-server-search",
    "description": "MCP server for web search operations",
    "category": "web",
    "version": "1.0.0",
    "author": "io.github.bytedance",
    "repository": "https://github.com/bytedance/UI-TARS-desktop",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @agent-infra/mcp-server-search",
    "documentationUrl": "https://github.com/bytedance/UI-TARS-desktop#readme",
    "homepage": "https://github.com/bytedance/UI-TARS-desktop",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.bytedance/mcp-server-search",
      "description": "MCP server for web search operations",
      "repository": {
        "url": "https://github.com/bytedance/UI-TARS-desktop",
        "source": "github",
        "subfolder": "packages/agent-infra/mcp-servers/search"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-search",
          "version": "latest",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Search engine to use for browser search (default: google)",
              "format": "string",
              "default": "google",
              "type": "named",
              "name": "engine"
            },
            {
              "description": "API key for the search provider",
              "format": "string",
              "type": "named",
              "name": "api-key"
            },
            {
              "description": "Base URL for the search provider",
              "format": "string",
              "type": "named",
              "name": "base-url"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-search",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "packageArguments": [
            {
              "description": "Search engine to use for browser search (default: google)",
              "format": "string",
              "default": "google",
              "type": "named",
              "name": "engine"
            },
            {
              "description": "API key for the search provider",
              "format": "string",
              "type": "named",
              "name": "api-key"
            },
            {
              "description": "Base URL for the search provider",
              "format": "string",
              "type": "named",
              "name": "base-url"
            },
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-search",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "packageArguments": [
            {
              "description": "Search engine to use for browser search (default: google)",
              "format": "string",
              "default": "google",
              "type": "named",
              "name": "engine"
            },
            {
              "description": "API key for the search provider",
              "format": "string",
              "type": "named",
              "name": "api-key"
            },
            {
              "description": "Base URL for the search provider",
              "format": "string",
              "type": "named",
              "name": "base-url"
            },
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.cameroncooke-XcodeBuildMCP",
    "name": "io.github.cameroncooke/XcodeBuildMCP",
    "description": "XcodeBuildMCP provides tools for Xcode project management, simulator management, and app utilities.",
    "category": "version-control",
    "version": "1.12.8",
    "author": "io.github.cameroncooke",
    "repository": "https://github.com/cameroncooke/XcodeBuildMCP",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install xcodebuildmcp",
    "documentationUrl": "https://github.com/cameroncooke/XcodeBuildMCP#readme",
    "homepage": "https://github.com/cameroncooke/XcodeBuildMCP",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.cameroncooke/XcodeBuildMCP",
      "description": "XcodeBuildMCP provides tools for Xcode project management, simulator management, and app utilities.",
      "repository": {
        "url": "https://github.com/cameroncooke/XcodeBuildMCP",
        "source": "github"
      },
      "version": "1.12.8",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "xcodebuildmcp",
          "version": "1.12.8",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.carlisia-mcp-factcheck",
    "name": "io.github.carlisia/mcp-factcheck",
    "description": "An MCP server that validates content against MCP specification using semantic search and AI",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.carlisia",
    "repository": "https://github.com/carlisia/mcp-factcheck",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull ghcr.io/carlisia/mcp-factcheck:v1.0.0",
    "documentationUrl": "https://github.com/carlisia/mcp-factcheck#readme",
    "homepage": "https://github.com/carlisia/mcp-factcheck",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.carlisia/mcp-factcheck",
      "description": "An MCP server that validates content against MCP specification using semantic search and AI",
      "repository": {
        "url": "https://github.com/carlisia/mcp-factcheck",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "ghcr.io/carlisia/mcp-factcheck:v1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "OpenAI API key for embedding generation and content validation",
              "isRequired": true,
              "name": "OPENAI_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.cashfree-cashfree-mcp",
    "name": "io.github.cashfree/cashfree-mcp",
    "description": "Cashfree MCP server for cashfree docs and APIs",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.cashfree",
    "repository": "https://github.com/cashfree/cashfree-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @cashfreepayments/cashfree-mcp",
    "documentationUrl": "https://github.com/cashfree/cashfree-mcp#readme",
    "homepage": "https://github.com/cashfree/cashfree-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.cashfree/cashfree-mcp",
      "description": "Cashfree MCP server for cashfree docs and APIs",
      "repository": {
        "url": "https://github.com/cashfree/cashfree-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@cashfreepayments/cashfree-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Payment Gateway App Id",
              "format": "string",
              "isSecret": true,
              "name": "PAYMENTS_APP_ID"
            },
            {
              "description": "Payment Gateway App Secret",
              "format": "string",
              "isSecret": true,
              "name": "PAYMENTS_APP_SECRET"
            },
            {
              "description": "Payouts App Id",
              "format": "string",
              "isSecret": true,
              "name": "PAYOUTS_APP_ID"
            },
            {
              "description": "Payouts App Secret",
              "format": "string",
              "isSecret": true,
              "name": "PAYOUTS_APP_SECRET"
            },
            {
              "description": "Path to the PEM file containing the public key for verifying 2FA signatures",
              "format": "string",
              "name": "TWO_FA_PUBLIC_KEY_PEM_PATH"
            },
            {
              "description": "SecureId App Id",
              "format": "string",
              "isSecret": true,
              "name": "SECUREID_APP_ID"
            },
            {
              "description": "SecureId App Secret",
              "format": "string",
              "isSecret": true,
              "name": "SECUREID_APP_SECRET"
            },
            {
              "description": "Tools (Comma-separated list of modules to enable. Available options: pg, payouts, secureid)",
              "isRequired": true,
              "format": "string",
              "name": "TOOLS"
            },
            {
              "description": "Environment (production/sandbox default: sandbox)",
              "isRequired": true,
              "format": "string",
              "name": "ENV"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.chris-schra-mcp-funnel",
    "name": "io.github.chris-schra/mcp-funnel",
    "description": "MCP proxy that aggregates multiple servers with tool filtering and customization",
    "category": "version-control",
    "version": "0.0.7",
    "author": "io.github.chris-schra",
    "repository": "https://github.com/chris-schra/mcp-funnel",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-funnel",
    "documentationUrl": "https://github.com/chris-schra/mcp-funnel#readme",
    "homepage": "https://github.com/chris-schra/mcp-funnel",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.chris-schra/mcp-funnel",
      "description": "MCP proxy that aggregates multiple servers with tool filtering and customization",
      "repository": {
        "url": "https://github.com/chris-schra/mcp-funnel",
        "source": "github",
        "id": "1055597409",
        "subfolder": "packages/mcp"
      },
      "version": "0.0.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-funnel",
          "version": "0.0.6",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "value": "-y",
              "type": "positional"
            }
          ],
          "packageArguments": [
            {
              "description": "Optional path to .mcp-funnel.json config file",
              "format": "filepath",
              "type": "positional",
              "valueHint": "config_path"
            }
          ],
          "environmentVariables": [
            {
              "description": "Alternative way to specify config file path",
              "format": "filepath",
              "name": "MCP_FUNNEL_CONFIG"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.clappia-dev-clappia-mcp",
    "name": "io.github.clappia-dev/clappia-mcp",
    "description": "An MCP server that provides Clappia workspace, forms, workflows, submissions, and analytics",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.clappia-dev",
    "repository": "https://github.com/clappia-dev/clappia-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/okaru413/clappia-mcp:1.0.1",
    "documentationUrl": "https://github.com/clappia-dev/clappia-mcp#readme",
    "homepage": "https://github.com/clappia-dev/clappia-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.clappia-dev/clappia-mcp",
      "description": "An MCP server that provides Clappia workspace, forms, workflows, submissions, and analytics",
      "repository": {
        "url": "https://github.com/clappia-dev/clappia-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/okaru413/clappia-mcp:1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Clappia API key for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "CLAPPIA_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.cloudquery-mcp",
    "name": "io.github.cloudquery/mcp",
    "description": "CloudQuery MCP server for asset inventory data. Supports CLI, PostgreSQL, and Platform modes.",
    "category": "version-control",
    "version": "1.6.9",
    "author": "io.github.cloudquery",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.cloudquery/mcp",
      "description": "CloudQuery MCP server for asset inventory data. Supports CLI, PostgreSQL, and Platform modes.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.6.9",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/cloudquery/mcp-releases/releases/download/v1.6.9/cq-platform-mcp_1.6.9_darwin_arm64.mcpb",
          "fileSha256": "174f039a7ae18ec2fb03243a72209ad2b5388f3ef47b3e843e1f5b418457d60a",
          "runtimeHint": "darwin-arm64",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/cloudquery/mcp-releases/releases/download/v1.6.9/cq-platform-mcp_1.6.9_darwin_amd64.mcpb",
          "fileSha256": "7c13732f1f836520880575f2635e305b2031d0bd7889d1b61bb0443154009d7f",
          "runtimeHint": "darwin-amd64",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/cloudquery/mcp-releases/releases/download/v1.6.9/cq-platform-mcp_1.6.9_linux_arm64.mcpb",
          "fileSha256": "eac79b5dd29bf11c47823ab2c77d64adbdc1170001398c36f172b49b61567123",
          "runtimeHint": "linux-arm64",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/cloudquery/mcp-releases/releases/download/v1.6.9/cq-platform-mcp_1.6.9_linux_amd64.mcpb",
          "fileSha256": "2cee76607b1b3e26eb0e8f083611909cc9a40a61ddf6cdafe43d5076d448f60a",
          "runtimeHint": "linux-amd64",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/cloudquery/mcp-releases/releases/download/v1.6.9/cq-platform-mcp_1.6.9_windows_amd64.mcpb",
          "fileSha256": "19470e7e2a37abdee17194c71ff24f38c88fa8a6136f13db4b8dc4f11346c320",
          "runtimeHint": "windows-amd64",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.cmpxchg16-mcp-ethical-hacking",
    "name": "io.github.cmpxchg16/mcp-ethical-hacking",
    "description": "An MCP server that provides LinkedIn & Reddit data",
    "category": "version-control",
    "version": "1.4.0",
    "author": "io.github.cmpxchg16",
    "repository": "https://github.com/cmpxchg16/mcp-ethical-hacking",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/cmpxchg16/mcp-ethical-hacking#readme",
    "homepage": "https://github.com/cmpxchg16/mcp-ethical-hacking",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.cmpxchg16/mcp-ethical-hacking",
      "description": "An MCP server that provides LinkedIn & Reddit data",
      "repository": {
        "url": "https://github.com/cmpxchg16/mcp-ethical-hacking",
        "source": "github"
      },
      "version": "1.4.0",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/cmpxchg16/mcp-ethical-hacking/releases/download/v1.4.0/server.mcpb",
          "fileSha256": "5e4f25e7f21b62974861f055cff90c1aef80d3b8bd1f32e05db744d1cbd67605",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.colabfit-colabfit-mcp",
    "name": "io.github.colabfit/colabfit-mcp",
    "description": "An MCP server that provides access to the ColabFit database",
    "category": "database",
    "version": "1.0.0",
    "author": "io.github.colabfit",
    "repository": "https://github.com/colabfit/colabfit-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install colabfit-mcp",
    "documentationUrl": "https://github.com/colabfit/colabfit-mcp#readme",
    "homepage": "https://github.com/colabfit/colabfit-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.colabfit/colabfit-mcp",
      "description": "An MCP server that provides access to the ColabFit database",
      "repository": {
        "url": "https://github.com/colabfit/colabfit-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "colabfit-mcp",
          "version": "0.0.3",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.compl-i-agent-csf",
    "name": "io.github.compl-i-agent/csf",
    "description": "NIST CSF 2.0 - Professional cybersecurity framework with 35 tools and 12 prompts",
    "category": "version-control",
    "version": "2.4.6",
    "author": "io.github.compl-i-agent",
    "repository": "https://github.com/compligent/mcp-platform",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @compligent-mcp/csf",
    "documentationUrl": "https://github.com/compligent/mcp-platform#readme",
    "homepage": "https://github.com/compligent/mcp-platform",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.compl-i-agent/csf",
      "description": "NIST CSF 2.0 - Professional cybersecurity framework with 35 tools and 12 prompts",
      "repository": {
        "url": "https://github.com/compligent/mcp-platform",
        "source": "github",
        "subfolder": "platform/servers/clients/csf-cli"
      },
      "version": "2.4.6",
      "websiteUrl": "https://compl-i-agent.github.io/csf",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@compligent-mcp/csf",
          "version": "2.4.6",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.configcat-mcp-server",
    "name": "io.github.configcat/mcp-server",
    "description": "Enables AI agents to interact with ConfigCat, a feature flag service for teams.",
    "category": "version-control",
    "version": "0.1.3",
    "author": "io.github.configcat",
    "repository": "https://github.com/configcat/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @configcat/mcp-server",
    "documentationUrl": "https://github.com/configcat/mcp-server#readme",
    "homepage": "https://github.com/configcat/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.configcat/mcp-server",
      "description": "Enables AI agents to interact with ConfigCat, a feature flag service for teams.",
      "repository": {
        "url": "https://github.com/configcat/mcp-server",
        "source": "github"
      },
      "version": "0.1.3",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@configcat/mcp-server",
          "version": "0.1.3",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "ConfigCat Management API basic authentication username.",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "CONFIGCAT_API_USER"
            },
            {
              "description": "ConfigCat Management API basic authentication password.",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "CONFIGCAT_API_PASS"
            },
            {
              "description": "Base URL for the ConfigCat API. Defaults to `https://api.configcat.com`.",
              "format": "string",
              "name": "CONFIGCAT_BASE_URL"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.containers-kubernetes-mcp-server",
    "name": "io.github.containers/kubernetes-mcp-server",
    "description": "An MCP server that provides [describe what your server does]",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.containers",
    "repository": "https://github.com/containers/kubernetes-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/containers/kubernetes-mcp-server#readme",
    "homepage": "https://github.com/containers/kubernetes-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.containers/kubernetes-mcp-server",
      "description": "An MCP server that provides [describe what your server does]",
      "repository": {
        "url": "https://github.com/containers/kubernetes-mcp-server",
        "source": "github"
      },
      "version": "1.0.0"
    }
  },
  {
    "id": "io.github.copyleftdev-fabric-atelier",
    "name": "io.github.copyleftdev/fabric-atelier",
    "description": "AI-powered content processing with 226 Fabric patterns for writing, analysis, and code generation.",
    "category": "version-control",
    "version": "0.1.2",
    "author": "io.github.copyleftdev",
    "repository": "https://github.com/copyleftdev/fabric-atelier.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/copyleftdev/fabric-atelier:0.1.2",
    "documentationUrl": "https://github.com/copyleftdev/fabric-atelier.git#readme",
    "homepage": "https://github.com/copyleftdev/fabric-atelier.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.copyleftdev/fabric-atelier",
      "description": "AI-powered content processing with 226 Fabric patterns for writing, analysis, and code generation.",
      "repository": {
        "url": "https://github.com/copyleftdev/fabric-atelier.git",
        "source": "github"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/copyleftdev/fabric-atelier:0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.cr7258-elasticsearch-mcp-server",
    "name": "io.github.cr7258/elasticsearch-mcp-server",
    "description": "MCP server for interacting with Elasticsearch",
    "category": "version-control",
    "version": "2.0.15",
    "author": "io.github.cr7258",
    "repository": "https://github.com/cr7258/elasticsearch-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install elasticsearch-mcp-server",
    "documentationUrl": "https://github.com/cr7258/elasticsearch-mcp-server#readme",
    "homepage": "https://github.com/cr7258/elasticsearch-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.cr7258/elasticsearch-mcp-server",
      "description": "MCP server for interacting with Elasticsearch",
      "repository": {
        "url": "https://github.com/cr7258/elasticsearch-mcp-server",
        "source": "github"
      },
      "version": "2.0.15",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "elasticsearch-mcp-server",
          "version": "2.0.15",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Comma-separated list of Elasticsearch hosts (e.g., https://localhost:9200)",
              "format": "string",
              "default": "https://localhost:9200",
              "name": "ELASTICSEARCH_HOSTS"
            },
            {
              "description": "API key for Elasticsearch or Elastic Cloud authentication (recommended)",
              "format": "string",
              "isSecret": true,
              "name": "ELASTICSEARCH_API_KEY"
            },
            {
              "description": "Username for basic authentication (alternative to API key)",
              "format": "string",
              "name": "ELASTICSEARCH_USERNAME"
            },
            {
              "description": "Password for basic authentication (used with ELASTICSEARCH_USERNAME)",
              "format": "string",
              "isSecret": true,
              "name": "ELASTICSEARCH_PASSWORD"
            },
            {
              "description": "Whether to verify SSL certificates (true/false)",
              "format": "boolean",
              "default": "false",
              "name": "ELASTICSEARCH_VERIFY_CERTS"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.croit-mcp-croit-ceph",
    "name": "io.github.croit/mcp-croit-ceph",
    "description": "MCP server for Croit Ceph cluster management with dynamic OpenAPI tool generation",
    "category": "version-control",
    "version": "0.2.16",
    "author": "io.github.croit",
    "repository": "https://github.com/croit/mcp-croit-ceph",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/croit/mcp-croit-ceph:0.2.16",
    "documentationUrl": "https://github.com/croit/mcp-croit-ceph#readme",
    "homepage": "https://github.com/croit/mcp-croit-ceph",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.croit/mcp-croit-ceph",
      "description": "MCP server for Croit Ceph cluster management with dynamic OpenAPI tool generation",
      "repository": {
        "url": "https://github.com/croit/mcp-croit-ceph",
        "source": "github",
        "id": "1058156155"
      },
      "version": "0.2.16",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/croit/mcp-croit-ceph:0.2.16",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Croit cluster URL (e.g., http://your-cluster.croit.io:8080)",
              "name": "CROIT_HOST"
            },
            {
              "description": "API authentication token for Croit cluster",
              "name": "CROIT_API_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.cyanheads-clinicaltrialsgov-mcp-server",
    "name": "io.github.cyanheads/clinicaltrialsgov-mcp-server",
    "description": "Provides rich tools to search, retrieve, and analyze data from ClinicalTrials.gov API v2.",
    "category": "version-control",
    "version": "1.5.0",
    "author": "io.github.cyanheads",
    "repository": "https://github.com/cyanheads/clinicaltrialsgov-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install clinicaltrialsgov-mcp-server",
    "documentationUrl": "https://github.com/cyanheads/clinicaltrialsgov-mcp-server#readme",
    "homepage": "https://github.com/cyanheads/clinicaltrialsgov-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.cyanheads/clinicaltrialsgov-mcp-server",
      "description": "Provides rich tools to search, retrieve, and analyze data from ClinicalTrials.gov API v2.",
      "repository": {
        "url": "https://github.com/cyanheads/clinicaltrialsgov-mcp-server",
        "source": "github"
      },
      "version": "1.5.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "clinicaltrialsgov-mcp-server",
          "version": "1.5.0",
          "runtimeHint": "bun",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn', 'error').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Storage provider type: 'in-memory', 'filesystem', 'supabase', 'cloudflare-r2', or 'cloudflare-kv'.",
              "format": "string",
              "default": "in-memory",
              "name": "STORAGE_PROVIDER_TYPE"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "clinicaltrialsgov-mcp-server",
          "version": "1.5.0",
          "runtimeHint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3000/mcp"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "The hostname for the HTTP server.",
              "format": "string",
              "default": "127.0.0.1",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3017",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for the MCP server.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn', 'error').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Storage provider type: 'in-memory', 'filesystem', 'supabase', 'cloudflare-r2', or 'cloudflare-kv'.",
              "format": "string",
              "default": "in-memory",
              "name": "STORAGE_PROVIDER_TYPE"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.cyanheads-git-mcp-server",
    "name": "io.github.cyanheads/git-mcp-server",
    "description": "Comprehensive Git MCP server enabling native git tools including clone, commit, worktree, & more.",
    "category": "version-control",
    "version": "2.5.8",
    "author": "io.github.cyanheads",
    "repository": "https://github.com/cyanheads/git-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @cyanheads/git-mcp-server",
    "documentationUrl": "https://github.com/cyanheads/git-mcp-server#readme",
    "homepage": "https://github.com/cyanheads/git-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.cyanheads/git-mcp-server",
      "description": "Comprehensive Git MCP server enabling native git tools including clone, commit, worktree, & more.",
      "repository": {
        "url": "https://github.com/cyanheads/git-mcp-server",
        "source": "github"
      },
      "version": "2.5.8",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@cyanheads/git-mcp-server",
          "version": "2.5.8",
          "runtimeHint": "bun",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Optional absolute path to restrict all git operations to a specific directory tree. Provides security sandboxing for multi-tenant or shared environments.",
              "format": "string",
              "name": "GIT_BASE_DIR"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@cyanheads/git-mcp-server",
          "version": "2.5.8",
          "runtimeHint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3015/mcp"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "The hostname for the HTTP server.",
              "format": "string",
              "default": "127.0.0.1",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3015",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for the MCP server.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Optional absolute path to restrict all git operations to a specific directory tree. Provides security sandboxing for multi-tenant or shared environments.",
              "format": "string",
              "name": "GIT_BASE_DIR"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.cyanheads-mcp-ts-template",
    "name": "io.github.cyanheads/mcp-ts-template",
    "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
    "category": "version-control",
    "version": "2.5.7",
    "author": "io.github.cyanheads",
    "repository": "https://github.com/cyanheads/mcp-ts-template",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-ts-template",
    "documentationUrl": "https://github.com/cyanheads/mcp-ts-template#readme",
    "homepage": "https://github.com/cyanheads/mcp-ts-template",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.cyanheads/mcp-ts-template",
      "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
      "repository": {
        "url": "https://github.com/cyanheads/mcp-ts-template",
        "source": "github"
      },
      "version": "2.5.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.5.7",
          "runtimeHint": "bun",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.5.7",
          "runtimeHint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "The hostname for the HTTP server.",
              "format": "string",
              "default": "127.0.0.1",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for the MCP server.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.cyanheads-protein-mcp-server",
    "name": "io.github.cyanheads/protein-mcp-server",
    "description": "MCP Server for 3D protein structural data retrieval & analysis from RCSB PDB, PDBe, and UniProt.",
    "category": "version-control",
    "version": "1.0.3",
    "author": "io.github.cyanheads",
    "repository": "https://github.com/cyanheads/protein-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install protein-mcp-server",
    "documentationUrl": "https://github.com/cyanheads/protein-mcp-server#readme",
    "homepage": "https://github.com/cyanheads/protein-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.cyanheads/protein-mcp-server",
      "description": "MCP Server for 3D protein structural data retrieval & analysis from RCSB PDB, PDBe, and UniProt.",
      "repository": {
        "url": "https://github.com/cyanheads/protein-mcp-server",
        "source": "github"
      },
      "version": "1.0.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "protein-mcp-server",
          "version": "1.0.3",
          "runtimeHint": "bun",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "protein-mcp-server",
          "version": "1.0.3",
          "runtimeHint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "The hostname for the HTTP server.",
              "format": "string",
              "default": "127.0.0.1",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for the MCP server.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.cyanheads-pubmed-mcp-server",
    "name": "io.github.cyanheads/pubmed-mcp-server",
    "description": "Comprehensive PubMed MCP Server to search, retrieve, and analyze biomedical literature from NCBI.",
    "category": "version-control",
    "version": "1.4.5",
    "author": "io.github.cyanheads",
    "repository": "https://github.com/cyanheads/pubmed-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @cyanheads/pubmed-mcp-server",
    "documentationUrl": "https://github.com/cyanheads/pubmed-mcp-server#readme",
    "homepage": "https://github.com/cyanheads/pubmed-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.cyanheads/pubmed-mcp-server",
      "description": "Comprehensive PubMed MCP Server to search, retrieve, and analyze biomedical literature from NCBI.",
      "repository": {
        "url": "https://github.com/cyanheads/pubmed-mcp-server",
        "source": "github"
      },
      "version": "1.4.5",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@cyanheads/pubmed-mcp-server",
          "version": "1.4.5",
          "runtimeHint": "bun",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Your NCBI API key for higher rate limits.",
              "format": "string",
              "name": "NCBI_API_KEY"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@cyanheads/pubmed-mcp-server",
          "version": "1.4.5",
          "runtimeHint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3017/mcp"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "The host for the HTTP server.",
              "format": "string",
              "default": "localhost",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port for the HTTP server.",
              "format": "string",
              "default": "3017",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for MCP requests.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Your NCBI API key for higher rate limits.",
              "format": "string",
              "name": "NCBI_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.cyanheads-survey-mcp-server",
    "name": "io.github.cyanheads/survey-mcp-server",
    "description": "MCP server for conducting dynamic, conversational surveys with structured data collection.",
    "category": "version-control",
    "version": "1.0.6",
    "author": "io.github.cyanheads",
    "repository": "https://github.com/cyanheads/survey-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @cyanheads/survey-mcp-server",
    "documentationUrl": "https://github.com/cyanheads/survey-mcp-server#readme",
    "homepage": "https://github.com/cyanheads/survey-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.cyanheads/survey-mcp-server",
      "description": "MCP server for conducting dynamic, conversational surveys with structured data collection.",
      "repository": {
        "url": "https://github.com/cyanheads/survey-mcp-server",
        "source": "github"
      },
      "version": "1.0.6",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@cyanheads/survey-mcp-server",
          "version": "1.0.6",
          "runtimeHint": "bun",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Path to the directory containing survey definition files.",
              "format": "string",
              "default": "./surveys",
              "name": "SURVEY_DEFINITIONS_PATH"
            },
            {
              "description": "Path to the directory where survey responses are stored.",
              "format": "string",
              "default": "./storage/responses",
              "name": "SURVEY_RESPONSES_PATH"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@cyanheads/survey-mcp-server",
          "version": "1.0.6",
          "runtimeHint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "The hostname for the HTTP server.",
              "format": "string",
              "default": "127.0.0.1",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for the MCP server.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Path to the directory containing survey definition files.",
              "format": "string",
              "default": "./surveys",
              "name": "SURVEY_DEFINITIONS_PATH"
            },
            {
              "description": "Path to the directory where survey responses are stored.",
              "format": "string",
              "default": "./storage/responses",
              "name": "SURVEY_RESPONSES_PATH"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.dba-i-mssql-dba",
    "name": "io.github.dba-i/mssql-dba",
    "description": "An MCP server that provides [describe what your server does]",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.dba-i",
    "repository": "https://github.com/dba-i/mssql-dba",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mssql-dba",
    "documentationUrl": "https://github.com/dba-i/mssql-dba#readme",
    "homepage": "https://github.com/dba-i/mssql-dba",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.dba-i/mssql-dba",
      "description": "An MCP server that provides [describe what your server does]",
      "repository": {
        "url": "https://github.com/dba-i/mssql-dba",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mssql-dba",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.delorenj-mcp-server-trello",
    "name": "io.github.delorenj/mcp-server-trello",
    "description": "MCP server for Trello boards with rate limiting, type safety, and comprehensive API integration.",
    "category": "version-control",
    "version": "1.5.6",
    "author": "io.github.delorenj",
    "repository": "https://github.com/delorenj/mcp-server-trello",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @delorenj/mcp-server-trello",
    "documentationUrl": "https://github.com/delorenj/mcp-server-trello#readme",
    "homepage": "https://github.com/delorenj/mcp-server-trello",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.delorenj/mcp-server-trello",
      "description": "MCP server for Trello boards with rate limiting, type safety, and comprehensive API integration.",
      "repository": {
        "url": "https://github.com/delorenj/mcp-server-trello",
        "source": "github"
      },
      "version": "1.5.6",
      "websiteUrl": "https://delorenj.github.io/mcp-server-trello",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@delorenj/mcp-server-trello",
          "version": "1.5.6",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Trello API key",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TRELLO_API_KEY"
            },
            {
              "description": "Your Trello token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TRELLO_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.dockersamples-mcp-docker-release-information",
    "name": "io.github.dockersamples/mcp-docker-release-information",
    "description": "MCP server providing Docker Desktop release notes and security information.",
    "category": "version-control",
    "version": "0.3.0",
    "author": "io.github.dockersamples",
    "repository": "https://github.com/dockersamples/mcp-docker-release-information",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/dockersamples/mcp-docker-release-information:0.3.0",
    "documentationUrl": "https://github.com/dockersamples/mcp-docker-release-information#readme",
    "homepage": "https://github.com/dockersamples/mcp-docker-release-information",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.dockersamples/mcp-docker-release-information",
      "description": "MCP server providing Docker Desktop release notes and security information.",
      "repository": {
        "url": "https://github.com/dockersamples/mcp-docker-release-information",
        "source": "github"
      },
      "version": "0.3.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/dockersamples/mcp-docker-release-information:0.3.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.domdomegg-airtable-mcp-server",
    "name": "io.github.domdomegg/airtable-mcp-server",
    "description": "Read and write access to Airtable database schemas, tables, and records.",
    "category": "database",
    "version": "1.9.4",
    "author": "io.github.domdomegg",
    "repository": "https://github.com/domdomegg/airtable-mcp-server.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install airtable-mcp-server",
    "documentationUrl": "https://github.com/domdomegg/airtable-mcp-server.git#readme",
    "homepage": "https://github.com/domdomegg/airtable-mcp-server.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.domdomegg/airtable-mcp-server",
      "description": "Read and write access to Airtable database schemas, tables, and records.",
      "repository": {
        "url": "https://github.com/domdomegg/airtable-mcp-server.git",
        "source": "github"
      },
      "version": "1.9.4",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "airtable-mcp-server",
          "version": "1.9.4",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Airtable personal access token (e.g., pat123.abc123). Create at https://airtable.com/create/tokens/new with scopes: schema.bases:read, data.records:read, and optionally schema.bases:write and data.records:write.",
              "isRequired": true,
              "isSecret": true,
              "name": "AIRTABLE_API_KEY"
            }
          ]
        },
        {
          "registryType": "oci",
          "identifier": "docker.io/domdomegg/airtable-mcp-server:1.9.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Airtable personal access token (e.g., pat123.abc123). Create at https://airtable.com/create/tokens/new with scopes: schema.bases:read, data.records:read, and optionally schema.bases:write and data.records:write.",
              "isRequired": true,
              "isSecret": true,
              "name": "AIRTABLE_API_KEY"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/domdomegg/airtable-mcp-server/releases/download/v1.9.4/airtable-mcp-server.mcpb",
          "version": "1.9.4",
          "fileSha256": "16474be7f95c22c7575cb6c98490fa8744b6637dc528c787490b5adf56d43d96",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.domdomegg-time-mcp-nuget",
    "name": "io.github.domdomegg/time-mcp-nuget",
    "description": "Get the current UTC time in RFC 3339 format.",
    "category": "version-control",
    "version": "1.1.1",
    "author": "io.github.domdomegg",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.domdomegg/time-mcp-nuget",
      "description": "Get the current UTC time in RFC 3339 format.",
      "title": "Time MCP Server",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.1.1",
      "packages": [
        {
          "registryType": "nuget",
          "identifier": "TimeMcpServer",
          "version": "1.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.domdomegg-time-mcp-pypi",
    "name": "io.github.domdomegg/time-mcp-pypi",
    "description": "Get the current UTC time in RFC 3339 format.",
    "category": "version-control",
    "version": "1.1.1",
    "author": "io.github.domdomegg",
    "repository": "https://github.com/domdomegg/time-mcp-pypi.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install time-mcp-pypi",
    "documentationUrl": "https://github.com/domdomegg/time-mcp-pypi.git#readme",
    "homepage": "https://github.com/domdomegg/time-mcp-pypi.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.domdomegg/time-mcp-pypi",
      "description": "Get the current UTC time in RFC 3339 format.",
      "title": "Time MCP Server",
      "repository": {
        "url": "https://github.com/domdomegg/time-mcp-pypi.git",
        "source": "github"
      },
      "version": "1.1.1",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "time-mcp-pypi",
          "version": "1.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.dubuqingfeng-gitlab-mcp-server",
    "name": "io.github.dubuqingfeng/gitlab-mcp-server",
    "description": "GitLab MCP (Model Context Protocol) server for AI agents",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.dubuqingfeng",
    "repository": "https://github.com/dubuqingfeng/gitlab-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @dubuqingfeng/gitlab-mcp-server",
    "documentationUrl": "https://github.com/dubuqingfeng/gitlab-mcp-server#readme",
    "homepage": "https://github.com/dubuqingfeng/gitlab-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.dubuqingfeng/gitlab-mcp-server",
      "description": "GitLab MCP (Model Context Protocol) server for AI agents",
      "repository": {
        "url": "https://github.com/dubuqingfeng/gitlab-mcp-server",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@dubuqingfeng/gitlab-mcp-server",
          "version": "2.0.12",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the gitlab",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "GITLAB_TOKEN"
            },
            {
              "description": "Gitlab URL",
              "format": "string",
              "name": "GITLAB_URL"
            },
            {
              "description": "Lark 机器人 Webhook URL",
              "format": "string",
              "isSecret": true,
              "name": "LARK_WEBHOOK_URL"
            },
            {
              "description": "可选：签名密钥（如果机器人启用了签名验证）",
              "format": "string",
              "isSecret": true,
              "name": "LARK_SECRET_KEY"
            },
            {
              "description": "可选：是否启用通知，默认为 true",
              "format": "boolean",
              "name": "LARK_ENABLE_NOTIFICATION"
            },
            {
              "description": "可选：通知模式 - gitlab_only(仅GitLab)、lark_only(仅Lark)、both(两者都发)，默认为 gitlab_only",
              "format": "string",
              "name": "GITLAB_NOTE_MODE"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.dynatrace-oss-Dynatrace-mcp",
    "name": "io.github.dynatrace-oss/Dynatrace-mcp",
    "description": "Model Context Protocol server for Dynatrace - access logs, events, metrics from Dynatrace via MCP.",
    "category": "version-control",
    "version": "0.9.2",
    "author": "io.github.dynatrace-oss",
    "repository": "https://github.com/dynatrace-oss/Dynatrace-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @dynatrace-oss/dynatrace-mcp-server",
    "documentationUrl": "https://github.com/dynatrace-oss/Dynatrace-mcp#readme",
    "homepage": "https://github.com/dynatrace-oss/Dynatrace-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.dynatrace-oss/Dynatrace-mcp",
      "description": "Model Context Protocol server for Dynatrace - access logs, events, metrics from Dynatrace via MCP.",
      "repository": {
        "url": "https://github.com/dynatrace-oss/Dynatrace-mcp",
        "source": "github"
      },
      "version": "0.9.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@dynatrace-oss/dynatrace-mcp-server",
          "version": "0.9.2",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "The URL of your Dynatrace environment (e.g. 'https://abc12345.apps.dynatrace.com')",
              "isRequired": true,
              "format": "string",
              "name": "DT_ENVIRONMENT"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.easytocloud-mac-letterhead",
    "name": "io.github.easytocloud/mac-letterhead",
    "description": "Professional letterhead PDF generator for macOS with Markdown support and smart margin detection",
    "category": "version-control",
    "version": "0.13.9",
    "author": "io.github.easytocloud",
    "repository": "https://github.com/easytocloud/Mac-letterhead",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install Mac-letterhead",
    "documentationUrl": "https://github.com/easytocloud/Mac-letterhead#readme",
    "homepage": "https://github.com/easytocloud/Mac-letterhead",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.easytocloud/mac-letterhead",
      "description": "Professional letterhead PDF generator for macOS with Markdown support and smart margin detection",
      "repository": {
        "url": "https://github.com/easytocloud/Mac-letterhead",
        "source": "github"
      },
      "version": "0.13.9",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "Mac-letterhead",
          "version": "0.13.9",
          "runtimeHint": "python3",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "mcp",
              "type": ""
            }
          ]
        }
      ],
      "_meta": {}
    }
  },
  {
    "id": "io.github.eat-pray-ai-yutu",
    "name": "io.github.eat-pray-ai/yutu",
    "description": "A fully functional MCP server and CLI for YouTube",
    "category": "version-control",
    "version": "v0.10.4-dev2",
    "author": "io.github.eat-pray-ai",
    "repository": "https://github.com/eat-pray-ai/yutu",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull ghcr.io/eat-pray-ai/yutu:v0.10.4-dev2",
    "documentationUrl": "https://github.com/eat-pray-ai/yutu#readme",
    "homepage": "https://github.com/eat-pray-ai/yutu",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.eat-pray-ai/yutu",
      "description": "A fully functional MCP server and CLI for YouTube",
      "title": "yutu",
      "repository": {
        "url": "https://github.com/eat-pray-ai/yutu",
        "source": "github",
        "id": "643163403"
      },
      "version": "v0.10.4-dev2",
      "icons": [
        {
          "src": "https://raw.githubusercontent.com/eat-pray-ai/yutu/main/assets/yutu-ico.svg",
          "mimeType": "image/svg+xml",
          "sizes": [
            "any"
          ]
        }
      ],
      "packages": [
        {
          "registryType": "oci",
          "identifier": "ghcr.io/eat-pray-ai/yutu:v0.10.4-dev2",
          "runtimeHint": "docker",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:8216/mcp"
          },
          "runtimeArguments": [
            {
              "description": "UID and GID in the container to match host user",
              "value": "{user}:{group}",
              "variables": {
                "group": {
                  "description": "The current user's primary group, output of `id -g`"
                },
                "user": {
                  "description": "The current user, output of `id -u`"
                }
              },
              "type": "named",
              "name": "--user"
            },
            {
              "description": "Mount host directory containing credentials and token",
              "value": "type=bind,source={hostPath},target=/app",
              "variables": {
                "hostPath": {
                  "description": "The directory containing `client_secret.json` and `youtube.token.json`"
                }
              },
              "type": "named",
              "name": "--mount"
            },
            {
              "description": "Publish MCP server port",
              "isRequired": true,
              "value": "8216:8216",
              "type": "named",
              "name": "-p"
            }
          ],
          "packageArguments": [
            {
              "value": "mcp",
              "type": "positional"
            },
            {
              "value": "http",
              "type": "named",
              "name": "--mode"
            }
          ],
          "environmentVariables": [
            {
              "description": "GCP project credential for yutu, base64 encoded JSON or path to JSON file",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YUTU_CREDENTIAL"
            },
            {
              "description": "YouTube authentication token, base64 encoded JSON or path to JSON file",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YUTU_CACHE_TOKEN"
            },
            {
              "description": "Log level",
              "format": "string",
              "default": "INFO",
              "choices": [
                "DEBUG",
                "INFO",
                "WARNING",
                "ERROR"
              ],
              "name": "YUTU_LOG_LEVEL"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.edrich13-mcp-jira-server",
    "name": "io.github.edrich13/mcp-jira-server",
    "description": "MCP server for self-hosted Jira instance with Personal Access Token authentication",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.edrich13",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-jira-server",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.edrich13/mcp-jira-server",
      "description": "MCP server for self-hosted Jira instance with Personal Access Token authentication",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-jira-server",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Base URL of your Jira instance (e.g., https://jira.domain.com)",
              "isRequired": true,
              "format": "string",
              "name": "JIRA_BASE_URL"
            },
            {
              "description": "Your Jira Personal Access Token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "JIRA_PAT"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.eghuzefa-engineer-your-data",
    "name": "io.github.eghuzefa/engineer-your-data",
    "description": "MCP server for data engineering: validation, transformation, visualization, and APIs.",
    "category": "version-control",
    "version": "0.1.3",
    "author": "io.github.eghuzefa",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install engineer-your-data",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.eghuzefa/engineer-your-data",
      "description": "MCP server for data engineering: validation, transformation, visualization, and APIs.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.3",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "engineer-your-data",
          "version": "0.1.3",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.esrisaudiarabia-arcgis-mcp-server",
    "name": "io.github.esrisaudiarabia/arcgis-mcp-server",
    "description": "Intelligent ArcGIS content search. Works with Online/Enterprise. Requires user credentials.",
    "category": "version-control",
    "version": "1.1.5",
    "author": "io.github.esrisaudiarabia",
    "repository": "https://github.com/esrisaudiarabia/esrisaudiarabia-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install arcgis-mcp-server",
    "documentationUrl": "https://github.com/esrisaudiarabia/esrisaudiarabia-mcp#readme",
    "homepage": "https://github.com/esrisaudiarabia/esrisaudiarabia-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.esrisaudiarabia/arcgis-mcp-server",
      "description": "Intelligent ArcGIS content search. Works with Online/Enterprise. Requires user credentials.",
      "repository": {
        "url": "https://github.com/esrisaudiarabia/esrisaudiarabia-mcp",
        "source": "github"
      },
      "version": "1.1.5",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "arcgis-mcp-server",
          "version": "1.1.5",
          "runtimeHint": "python",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your ArcGIS Portal URL (e.g., https://portal.company.com/portal)",
              "isRequired": true,
              "format": "string",
              "name": "ARCGIS_URL"
            },
            {
              "description": "Your ArcGIS Portal Username",
              "isRequired": true,
              "format": "string",
              "name": "ARCGIS_USERNAME"
            },
            {
              "description": "Your ArcGIS Portal Password",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "ARCGIS_PASSWORD"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.estruyf-vscode-demo-time",
    "name": "io.github.estruyf/vscode-demo-time",
    "description": "Enables AI assistants to interact with Demo Time and helps build presentations and demos.",
    "category": "version-control",
    "version": "0.0.55",
    "author": "io.github.estruyf",
    "repository": "https://github.com/estruyf/vscode-demo-time",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @demotime/mcp",
    "documentationUrl": "https://github.com/estruyf/vscode-demo-time#readme",
    "homepage": "https://github.com/estruyf/vscode-demo-time",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.estruyf/vscode-demo-time",
      "description": "Enables AI assistants to interact with Demo Time and helps build presentations and demos.",
      "repository": {
        "url": "https://github.com/estruyf/vscode-demo-time",
        "source": "github"
      },
      "version": "0.0.55",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@demotime/mcp",
          "version": "0.0.55",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.fengcl-mcp-sse-demo-02",
    "name": "io.github.fengcl/mcp-sse-demo-02",
    "description": "Spring Boot MCP 服务器（示例占位描述），通过 GHCR 以 OCI 镜像发布至 MCP Registry。",
    "category": "version-control",
    "version": "0.0.0",
    "author": "io.github.fengcl",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull ghcr.io/fengcl/mcp-sse-demo-02:0.1.5",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.fengcl/mcp-sse-demo-02",
      "description": "Spring Boot MCP 服务器（示例占位描述），通过 GHCR 以 OCI 镜像发布至 MCP Registry。",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "ghcr.io/fengcl/mcp-sse-demo-02:0.1.5",
          "transport": {
            "type": "sse",
            "url": "http://2d816j6296.uicp.fun/mcp/sse"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.firecrawl-firecrawl-mcp-server",
    "name": "io.github.firecrawl/firecrawl-mcp-server",
    "description": "MCP server for Firecrawl web scraping, structured data extraction and web search integration.",
    "category": "web",
    "version": "3.5.2",
    "author": "io.github.firecrawl",
    "repository": "https://github.com/firecrawl/firecrawl-mcp-server.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install firecrawl-mcp",
    "documentationUrl": "https://github.com/firecrawl/firecrawl-mcp-server.git#readme",
    "homepage": "https://github.com/firecrawl/firecrawl-mcp-server.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.firecrawl/firecrawl-mcp-server",
      "description": "MCP server for Firecrawl web scraping, structured data extraction and web search integration.",
      "title": "Firecrawl MCP Server",
      "repository": {
        "url": "https://github.com/firecrawl/firecrawl-mcp-server.git",
        "source": "github"
      },
      "version": "3.5.2",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "firecrawl-mcp",
          "version": "3.5.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for Firecrawl",
              "format": "string",
              "isSecret": true,
              "name": "FIRECRAWL_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.flarco-sling-cli",
    "name": "io.github.flarco/sling-cli",
    "description": "Sling CLI MCP server for data pipeline and replication management",
    "category": "version-control",
    "version": "1.4.24",
    "author": "io.github.flarco",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.flarco/sling-cli",
      "description": "Sling CLI MCP server for data pipeline and replication management",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.4.24"
    }
  },
  {
    "id": "io.github.fliptheweb-yazio-mcp",
    "name": "io.github.fliptheweb/yazio-mcp",
    "description": "MCP server for accessing Yazio user & nutrition data (unofficial)",
    "category": "web",
    "version": "0.0.5",
    "author": "io.github.fliptheweb",
    "repository": "https://github.com/fliptheweb/yazio-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install yazio-mcp",
    "documentationUrl": "https://github.com/fliptheweb/yazio-mcp#readme",
    "homepage": "https://github.com/fliptheweb/yazio-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.fliptheweb/yazio-mcp",
      "description": "MCP server for accessing Yazio user & nutrition data (unofficial)",
      "repository": {
        "url": "https://github.com/fliptheweb/yazio-mcp",
        "source": "github"
      },
      "version": "0.0.5",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "yazio-mcp",
          "version": "0.0.5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Yazio Username",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YAZIO_USERNAME"
            },
            {
              "description": "Yazio Password",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YAZIO_PASSWORD"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.florentine-ai-mcp",
    "name": "io.github.florentine-ai/mcp",
    "description": "MCP server for Florentine.ai - Natural language to MongoDB aggregations",
    "category": "version-control",
    "version": "0.2.1",
    "author": "io.github.florentine-ai",
    "repository": "https://github.com/florentine-ai/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @florentine-ai/mcp",
    "documentationUrl": "https://github.com/florentine-ai/mcp#readme",
    "homepage": "https://github.com/florentine-ai/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.florentine-ai/mcp",
      "description": "MCP server for Florentine.ai - Natural language to MongoDB aggregations",
      "repository": {
        "url": "https://github.com/florentine-ai/mcp",
        "source": "github"
      },
      "version": "0.2.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@florentine-ai/mcp",
          "version": "0.2.1",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "isRequired": true,
              "value": "@florentine-ai/mcp@latest",
              "type": "named",
              "name": "-y"
            }
          ],
          "packageArguments": [
            {
              "description": "The mode to run the MCP server in ('static' or 'dynamic')",
              "isRequired": true,
              "value": "static",
              "type": "named",
              "name": "--mode"
            },
            {
              "description": "Set to true to enable debug logging",
              "format": "boolean",
              "type": "named",
              "name": "--debug"
            },
            {
              "description": "The path to the log file, must be provided if debug is true",
              "format": "filepath",
              "type": "named",
              "name": "--logpath"
            }
          ],
          "environmentVariables": [
            {
              "description": "Your Florentine.ai API key, get it from https://florentine.ai/dashboard",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "FLORENTINE_TOKEN"
            },
            {
              "description": "The LLM service to use, one of 'openai', 'anthropic', 'google' or 'deepseek' (must only be provided if you did not set it in your Florentine.ai account)",
              "format": "string",
              "name": "LLM_SERVICE"
            },
            {
              "description": "Your API key for the LLM service (must only be provided if you did not set it in your Florentine.ai account)",
              "format": "string",
              "isSecret": true,
              "name": "LLM_KEY"
            },
            {
              "description": "Session ID for maintaining server-side context across requests",
              "format": "string",
              "name": "SESSION_ID"
            },
            {
              "description": "Stringified JSON array of return types for the response",
              "format": "string",
              "name": "RETURN_TYPES"
            },
            {
              "description": "Stringified JSON array of values for required inputs keys",
              "format": "string",
              "name": "REQUIRED_INPUTS"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.formulahendry-code-runner",
    "name": "io.github.formulahendry/code-runner",
    "description": "Code Runner MCP Server which can run code in various programming languages.",
    "category": "version-control",
    "version": "0.1.9",
    "author": "io.github.formulahendry",
    "repository": "https://github.com/formulahendry/mcp-server-code-runner",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-server-code-runner",
    "documentationUrl": "https://github.com/formulahendry/mcp-server-code-runner#readme",
    "homepage": "https://github.com/formulahendry/mcp-server-code-runner",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.formulahendry/code-runner",
      "description": "Code Runner MCP Server which can run code in various programming languages.",
      "repository": {
        "url": "https://github.com/formulahendry/mcp-server-code-runner",
        "source": "github"
      },
      "version": "0.1.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-code-runner",
          "version": "0.1.8",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "oci",
          "identifier": "docker.io/formulahendry/mcp-server-code-runner:0.1.8",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.formulahendry-mcp-server-mcp-registry",
    "name": "io.github.formulahendry/mcp-server-mcp-registry",
    "description": "MCP Server for MCP Registry to discover and search for available MCP servers in the registry",
    "category": "version-control",
    "version": "0.1.0",
    "author": "io.github.formulahendry",
    "repository": "https://github.com/formulahendry/mcp-server-mcp-registry",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-server-mcp-registry",
    "documentationUrl": "https://github.com/formulahendry/mcp-server-mcp-registry#readme",
    "homepage": "https://github.com/formulahendry/mcp-server-mcp-registry",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.formulahendry/mcp-server-mcp-registry",
      "description": "MCP Server for MCP Registry to discover and search for available MCP servers in the registry",
      "repository": {
        "url": "https://github.com/formulahendry/mcp-server-mcp-registry",
        "source": "github"
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-mcp-registry",
          "version": "0.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.formulahendry-spec-driven-development",
    "name": "io.github.formulahendry/spec-driven-development",
    "description": "MCP Server that facilitates spec-driven development workflows, not just Vibe Coding.",
    "category": "version-control",
    "version": "0.1.1",
    "author": "io.github.formulahendry",
    "repository": "https://github.com/formulahendry/mcp-server-spec-driven-development",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-server-spec-driven-development",
    "documentationUrl": "https://github.com/formulahendry/mcp-server-spec-driven-development#readme",
    "homepage": "https://github.com/formulahendry/mcp-server-spec-driven-development",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.formulahendry/spec-driven-development",
      "description": "MCP Server that facilitates spec-driven development workflows, not just Vibe Coding.",
      "repository": {
        "url": "https://github.com/formulahendry/mcp-server-spec-driven-development",
        "source": "github"
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-spec-driven-development",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.francisco-perez-sorrosal-cv",
    "name": "io.github.francisco-perez-sorrosal/cv",
    "description": "An MCP server that provides access to Francisco Perez-Sorrosal's CV",
    "category": "version-control",
    "version": "0.0.3",
    "author": "io.github.francisco-perez-sorrosal",
    "repository": "https://github.com/francisco-perez-sorrosal/cv.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/francisco-perez-sorrosal/cv.git#readme",
    "homepage": "https://github.com/francisco-perez-sorrosal/cv.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.francisco-perez-sorrosal/cv",
      "description": "An MCP server that provides access to Francisco Perez-Sorrosal's CV",
      "repository": {
        "url": "https://github.com/francisco-perez-sorrosal/cv.git",
        "source": "github"
      },
      "version": "0.0.3",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/francisco-perez-sorrosal/cv/releases/download/v0.0.3/fps-cv-mcp-0.0.3.mcpb",
          "fileSha256": "d9835e29ee1a95759219f23bb988f71cb9d419b631754fc0ad8ab43b5ff0042e",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.gattjoe-ACMS",
    "name": "io.github.gattjoe/ACMS",
    "description": "Apple Container MCP Server (ACMS) provides access to Apple's container CLI tool on macOS",
    "category": "version-control",
    "version": "0.0.4",
    "author": "io.github.gattjoe",
    "repository": "https://github.com/gattjoe/ACMS",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install ACMS",
    "documentationUrl": "https://github.com/gattjoe/ACMS#readme",
    "homepage": "https://github.com/gattjoe/ACMS",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.gattjoe/ACMS",
      "description": "Apple Container MCP Server (ACMS) provides access to Apple's container CLI tool on macOS",
      "repository": {
        "url": "https://github.com/gattjoe/ACMS",
        "source": "github"
      },
      "version": "0.0.4",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "ACMS",
          "version": "0.0.4",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:8765/mcp"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.gauravfs-14-lit-mcp",
    "name": "io.github.gauravfs-14/lit-mcp",
    "description": "MCP server for academic literature databases (arXiv, DBLP) to accelerate research using LLMs.",
    "category": "database",
    "version": "1.0.0",
    "author": "io.github.gauravfs-14",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install lit-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.gauravfs-14/lit-mcp",
      "description": "MCP server for academic literature databases (arXiv, DBLP) to accelerate research using LLMs.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "lit-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.ggozad-haiku-rag",
    "name": "io.github.ggozad/haiku-rag",
    "description": "Agentic Retrieval Augmented Generation (RAG) with LanceDB",
    "category": "version-control",
    "version": "0.13.1",
    "author": "io.github.ggozad",
    "repository": "https://github.com/ggozad/haiku.rag",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install haiku-rag",
    "documentationUrl": "https://github.com/ggozad/haiku.rag#readme",
    "homepage": "https://github.com/ggozad/haiku.rag",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.ggozad/haiku-rag",
      "description": "Agentic Retrieval Augmented Generation (RAG) with LanceDB",
      "repository": {
        "url": "https://github.com/ggozad/haiku.rag",
        "source": "github"
      },
      "version": "0.13.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "haiku-rag",
          "version": "0.13.1",
          "runtimeHint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "value": "serve",
              "type": "positional"
            },
            {
              "type": "named",
              "name": "--mcp"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.github-github-mcp-server",
    "name": "io.github.github/github-mcp-server",
    "description": "Connect AI assistants to GitHub - manage repos, issues, PRs, and workflows through natural language.",
    "category": "version-control",
    "version": "0.20.1",
    "author": "io.github.github",
    "repository": "https://github.com/github/github-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull ghcr.io/github/github-mcp-server:0.20.1",
    "documentationUrl": "https://github.com/github/github-mcp-server#readme",
    "homepage": "https://github.com/github/github-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.github/github-mcp-server",
      "description": "Connect AI assistants to GitHub - manage repos, issues, PRs, and workflows through natural language.",
      "repository": {
        "url": "https://github.com/github/github-mcp-server",
        "source": "github"
      },
      "version": "0.20.1",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "ghcr.io/github/github-mcp-server:0.20.1",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "description": "The runtime command to execute",
              "isRequired": true,
              "value": "run",
              "type": "positional"
            },
            {
              "description": "Run container in interactive mode",
              "isRequired": true,
              "format": "boolean",
              "value": "true",
              "type": "named",
              "name": "-i"
            },
            {
              "description": "Automatically remove the container when it exits",
              "format": "boolean",
              "value": "true",
              "type": "named",
              "name": "--rm"
            },
            {
              "description": "Set an environment variable in the runtime",
              "isRequired": true,
              "value": "GITHUB_PERSONAL_ACCESS_TOKEN={token}",
              "variables": {
                "token": {
                  "isRequired": true,
                  "format": "string",
                  "isSecret": true
                }
              },
              "type": "named",
              "name": "-e"
            },
            {
              "description": "The container image to run",
              "isRequired": true,
              "value": "ghcr.io/github/github-mcp-server",
              "type": "positional",
              "valueHint": "image_name"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.gjeltep-app-store-connect-mcp",
    "name": "io.github.gjeltep/app-store-connect-mcp",
    "description": "Interact with Apple's App Store Connect API",
    "category": "version-control",
    "version": "0.2.1",
    "author": "io.github.gjeltep",
    "repository": "https://github.com/gjeltep/app-store-connect-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install app-store-connect-mcp",
    "documentationUrl": "https://github.com/gjeltep/app-store-connect-mcp#readme",
    "homepage": "https://github.com/gjeltep/app-store-connect-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.gjeltep/app-store-connect-mcp",
      "description": "Interact with Apple's App Store Connect API",
      "repository": {
        "url": "https://github.com/gjeltep/app-store-connect-mcp",
        "source": "github"
      },
      "version": "0.2.1",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "app-store-connect-mcp",
          "version": "0.2.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "App Store Connect API Key ID",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "APP_STORE_KEY_ID"
            },
            {
              "description": "App Store Connect Issuer ID",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "APP_STORE_ISSUER_ID"
            },
            {
              "description": "Path to the .p8 private key file for App Store Connect authentication",
              "isRequired": true,
              "format": "string",
              "name": "APP_STORE_PRIVATE_KEY_PATH"
            },
            {
              "description": "Default App ID for operations (optional)",
              "format": "string",
              "name": "APP_STORE_APP_ID"
            },
            {
              "description": "Key type: 'team' or 'individual' (defaults to 'team')",
              "format": "string",
              "name": "APP_STORE_KEY_TYPE"
            },
            {
              "description": "Comma-separated list of OAuth scopes (optional)",
              "format": "string",
              "name": "APP_STORE_SCOPE"
            },
            {
              "description": "Subject for individual keys (optional)",
              "format": "string",
              "name": "APP_STORE_SUBJECT"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.goodfel10w-welcome-text-generator-mcp",
    "name": "io.github.goodfel10w/welcome-text-generator-mcp",
    "description": "MCP Server für automatische Generierung professioneller Willkommenstexte für neue Mitarbeiter",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.goodfel10w",
    "repository": "https://github.com/goodfel10w/WelcomeTextGenerator",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install welcome-text-generator-mcp",
    "documentationUrl": "https://github.com/goodfel10w/WelcomeTextGenerator#readme",
    "homepage": "https://github.com/goodfel10w/WelcomeTextGenerator",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.goodfel10w/welcome-text-generator-mcp",
      "description": "MCP Server für automatische Generierung professioneller Willkommenstexte für neue Mitarbeiter",
      "repository": {
        "url": "https://github.com/goodfel10w/WelcomeTextGenerator",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "welcome-text-generator-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.gradion-ai-ipybox",
    "name": "io.github.gradion-ai/ipybox",
    "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
    "category": "filesystem",
    "version": "0.6.6",
    "author": "io.github.gradion-ai",
    "repository": "https://github.com/gradion-ai/ipybox",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install ipybox",
    "documentationUrl": "https://github.com/gradion-ai/ipybox#readme",
    "homepage": "https://github.com/gradion-ai/ipybox",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.gradion-ai/ipybox",
      "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
      "repository": {
        "url": "https://github.com/gradion-ai/ipybox",
        "source": "github"
      },
      "version": "0.6.6",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "ipybox",
          "version": "0.6.6",
          "runtimeHint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Required MCP server subcommand",
              "isRequired": true,
              "value": "mcp",
              "type": "positional"
            },
            {
              "description": "Directory allowed for host filesystem operations",
              "type": "named",
              "name": "--allowed-dir",
              "valueHint": "directory_path",
              "isRepeated": true
            },
            {
              "description": "Domain, IP address, or CIDR range allowed for outbound network access",
              "type": "named",
              "name": "--allowed-domain",
              "valueHint": "domain_or_ip",
              "isRepeated": true
            },
            {
              "description": "Docker image tag to use",
              "type": "named",
              "name": "--container-tag",
              "valueHint": "docker_image_tag"
            },
            {
              "description": "Environment variable for container (KEY=VALUE format)",
              "type": "named",
              "name": "--container-env-var",
              "valueHint": "env_var",
              "isRepeated": true
            },
            {
              "description": "Path to file containing container environment variables",
              "type": "named",
              "name": "--container-env-file",
              "valueHint": "file_path"
            },
            {
              "description": "Bind mount for container (host_path:container_path format)",
              "type": "named",
              "name": "--container-bind",
              "valueHint": "bind_mount",
              "isRepeated": true
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.grafana-mcp-grafana",
    "name": "io.github.grafana/mcp-grafana",
    "description": "An MCP server giving access to Grafana dashboards, data and more.",
    "category": "version-control",
    "version": "v0.7.7",
    "author": "io.github.grafana",
    "repository": "https://github.com/grafana/mcp-grafana",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/grafana/mcp-grafana:0.7.7",
    "documentationUrl": "https://github.com/grafana/mcp-grafana#readme",
    "homepage": "https://github.com/grafana/mcp-grafana",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.grafana/mcp-grafana",
      "description": "An MCP server giving access to Grafana dashboards, data and more.",
      "repository": {
        "url": "https://github.com/grafana/mcp-grafana",
        "source": "github"
      },
      "version": "v0.7.7",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/grafana/mcp-grafana:0.7.7",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "URL to your Grafana instance",
              "isRequired": true,
              "format": "string",
              "name": "GRAFANA_URL"
            },
            {
              "description": "Service account token used to authenticate with your Grafana instance",
              "format": "string",
              "isSecret": true,
              "name": "GRAFANA_SERVICE_ACCOUNT_TOKEN"
            },
            {
              "description": "Username to authenticate with your Grafana instance",
              "format": "string",
              "name": "GRAFANA_USERNAME"
            },
            {
              "description": "Password to authenticate with your Grafana instance",
              "format": "string",
              "isSecret": true,
              "name": "GRAFANA_PASSWORD"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.grupo-avispa-dsr_mcp_server",
    "name": "io.github.grupo-avispa/dsr_mcp_server",
    "description": "An MCP server that provides tools for interacting with Deep State Representation (DSR) graphs.",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.grupo-avispa",
    "repository": "https://github.com/grupo-avispa/dsr_mcp_server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/grupo-avispa/dsr_mcp_server#readme",
    "homepage": "https://github.com/grupo-avispa/dsr_mcp_server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.grupo-avispa/dsr_mcp_server",
      "description": "An MCP server that provides tools for interacting with Deep State Representation (DSR) graphs.",
      "repository": {
        "url": "https://github.com/grupo-avispa/dsr_mcp_server",
        "source": "github"
      },
      "version": "1.0.1",
      "websiteUrl": "https://grupo-avispa.github.io/dsr_mcp_server/"
    }
  },
  {
    "id": "io.github.guanqun-yang-mcp-server-r-counter",
    "name": "io.github.guanqun-yang/mcp-server-r-counter",
    "description": "A MCP Server Counting Number of r's for a Given Query",
    "category": "version-control",
    "version": "0.0.3",
    "author": "io.github.guanqun-yang",
    "repository": "https://github.com/guanqun-yang/mcp-server-r-counter",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-server-r-counter",
    "documentationUrl": "https://github.com/guanqun-yang/mcp-server-r-counter#readme",
    "homepage": "https://github.com/guanqun-yang/mcp-server-r-counter",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.guanqun-yang/mcp-server-r-counter",
      "description": "A MCP Server Counting Number of r's for a Given Query",
      "repository": {
        "url": "https://github.com/guanqun-yang/mcp-server-r-counter",
        "source": "github"
      },
      "version": "0.0.3",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-server-r-counter",
          "version": "0.0.3",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.habedi-omni-lpr",
    "name": "io.github.habedi/omni-lpr",
    "description": "An MCP server for automatic license plate recognition",
    "category": "version-control",
    "version": "0.3.2",
    "author": "io.github.habedi",
    "repository": "https://github.com/habedi/omni-lpr",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install omni-lpr",
    "documentationUrl": "https://github.com/habedi/omni-lpr#readme",
    "homepage": "https://github.com/habedi/omni-lpr",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.habedi/omni-lpr",
      "description": "An MCP server for automatic license plate recognition",
      "repository": {
        "url": "https://github.com/habedi/omni-lpr",
        "source": "github"
      },
      "version": "0.3.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "omni-lpr",
          "version": "0.3.2",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:8000/mcp/"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.hashicorp-terraform-mcp-server",
    "name": "io.github.hashicorp/terraform-mcp-server",
    "description": "Generate more accurate Terraform and automate workflows for HCP Terraform and Terraform Enterprise",
    "category": "version-control",
    "version": "0.3.2",
    "author": "io.github.hashicorp",
    "repository": "https://github.com/hashicorp/terraform-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/hashicorp/terraform-mcp-server:0.3.2",
    "documentationUrl": "https://github.com/hashicorp/terraform-mcp-server#readme",
    "homepage": "https://github.com/hashicorp/terraform-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.hashicorp/terraform-mcp-server",
      "description": "Generate more accurate Terraform and automate workflows for HCP Terraform and Terraform Enterprise",
      "title": "Terraform",
      "repository": {
        "url": "https://github.com/hashicorp/terraform-mcp-server",
        "source": "github"
      },
      "version": "0.3.2",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/hashicorp/terraform-mcp-server:0.3.2",
          "runtimeHint": "docker",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "type": "named",
              "name": "--rm"
            },
            {
              "type": "named",
              "name": "-i"
            },
            {
              "description": "Set an environment variable in the runtime",
              "type": "named",
              "name": "-e",
              "isRepeated": true
            },
            {
              "description": "Environment variable name",
              "value": "TFE_ADDRESS",
              "type": "positional",
              "valueHint": "env_var_name"
            },
            {
              "description": "Set an environment variable in the runtime",
              "type": "named",
              "name": "-e",
              "isRepeated": true
            },
            {
              "description": "Environment variable name",
              "value": "TFE_TOKEN",
              "type": "positional",
              "valueHint": "env_var_name"
            },
            {
              "description": "Set an environment variable in the runtime",
              "type": "named",
              "name": "-e",
              "isRepeated": true
            },
            {
              "description": "Environment variable name",
              "value": "ENABLE_TF_OPERATIONS",
              "type": "positional",
              "valueHint": "env_var_name"
            },
            {
              "description": "The container image to run",
              "value": "hashicorp/terraform-mcp-server:0.3.2",
              "type": "positional",
              "valueHint": "image_name"
            }
          ],
          "environmentVariables": [
            {
              "description": "HCP Terraform or Terraform Enterprise base URL.",
              "default": "https://app.terraform.io",
              "name": "TFE_ADDRESS"
            },
            {
              "description": "HCP Terraform or Terraform Enterprise API token used to authenticate requests.",
              "isSecret": true,
              "name": "TFE_TOKEN"
            },
            {
              "description": "Set to true to enable tools that execute Terraform operations requiring explicit approval.",
              "format": "boolean",
              "default": "false",
              "choices": [
                "true",
                "false"
              ],
              "name": "ENABLE_TF_OPERATIONS"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.hellocoop-admin-mcp",
    "name": "io.github.hellocoop/admin-mcp",
    "description": "Model Context Protocol (MCP) for Hellō Admin API.",
    "category": "version-control",
    "version": "1.5.7",
    "author": "io.github.hellocoop",
    "repository": "https://github.com/hellocoop/admin-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @hellocoop/admin-mcp",
    "documentationUrl": "https://github.com/hellocoop/admin-mcp#readme",
    "homepage": "https://github.com/hellocoop/admin-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.hellocoop/admin-mcp",
      "description": "Model Context Protocol (MCP) for Hellō Admin API.",
      "repository": {
        "url": "https://github.com/hellocoop/admin-mcp",
        "source": "github"
      },
      "version": "1.5.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@hellocoop/admin-mcp",
          "version": "1.5.7",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.henilcalagiya-google-sheets-mcp",
    "name": "io.github.henilcalagiya/google-sheets-mcp",
    "description": "Powerful tools for automating Google Sheets using Model Context Protocol (MCP)",
    "category": "version-control",
    "version": "0.1.6",
    "author": "io.github.henilcalagiya",
    "repository": "https://github.com/henilcalagiya/google-sheets-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install google-sheets-mcp",
    "documentationUrl": "https://github.com/henilcalagiya/google-sheets-mcp#readme",
    "homepage": "https://github.com/henilcalagiya/google-sheets-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.henilcalagiya/google-sheets-mcp",
      "description": "Powerful tools for automating Google Sheets using Model Context Protocol (MCP)",
      "repository": {
        "url": "https://github.com/henilcalagiya/google-sheets-mcp",
        "source": "github"
      },
      "version": "0.1.6",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "google-sheets-mcp",
          "version": "0.1.6",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.henilcalagiya-mcp-apple-notes",
    "name": "io.github.henilcalagiya/mcp-apple-notes",
    "description": "MCP server for Apple Notes integration using AppleScript with full CRUD operations",
    "category": "version-control",
    "version": "0.1.2",
    "author": "io.github.henilcalagiya",
    "repository": "https://github.com/henilcalagiya/mcp-apple-notes",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-apple-notes",
    "documentationUrl": "https://github.com/henilcalagiya/mcp-apple-notes#readme",
    "homepage": "https://github.com/henilcalagiya/mcp-apple-notes",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.henilcalagiya/mcp-apple-notes",
      "description": "MCP server for Apple Notes integration using AppleScript with full CRUD operations",
      "repository": {
        "url": "https://github.com/henilcalagiya/mcp-apple-notes",
        "source": "github"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-apple-notes",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.himorishige-hatago-mcp-hub",
    "name": "io.github.himorishige/hatago-mcp-hub",
    "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
    "category": "version-control",
    "version": "0.0.16",
    "author": "io.github.himorishige",
    "repository": "https://github.com/himorishige/hatago-mcp-hub",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @himorishige/hatago-mcp-hub",
    "documentationUrl": "https://github.com/himorishige/hatago-mcp-hub#readme",
    "homepage": "https://github.com/himorishige/hatago-mcp-hub",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.himorishige/hatago-mcp-hub",
      "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
      "repository": {
        "url": "https://github.com/himorishige/hatago-mcp-hub",
        "source": "github"
      },
      "version": "0.0.16",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@himorishige/hatago-mcp-hub",
          "version": "0.0.16",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.humanjesse-textarttools-mcp",
    "name": "io.github.humanjesse/textarttools-mcp",
    "description": "Unicode text styling and ASCII art generation with 23 styles and 322+ figlet fonts",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.humanjesse",
    "repository": "https://github.com/humanjesse/textarttools-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://humanjesse.github.io/textarttools-mcp/sse",
    "documentationUrl": "https://github.com/humanjesse/textarttools-mcp#readme",
    "homepage": "https://github.com/humanjesse/textarttools-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.humanjesse/textarttools-mcp",
      "description": "Unicode text styling and ASCII art generation with 23 styles and 322+ figlet fonts",
      "repository": {
        "url": "https://github.com/humanjesse/textarttools-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://humanjesse.github.io/textarttools-mcp/sse"
        }
      ]
    }
  },
  {
    "id": "io.github.hummingbot-mcp",
    "name": "io.github.hummingbot/mcp",
    "description": "MCP server exposing Hummingbot API for automated multi-exchange trading",
    "category": "version-control",
    "version": "0.1.0",
    "author": "io.github.hummingbot",
    "repository": "https://github.com/hummingbot/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/hummingbot/hummingbot-mcp:0.1.0",
    "documentationUrl": "https://github.com/hummingbot/mcp#readme",
    "homepage": "https://github.com/hummingbot/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.hummingbot/mcp",
      "description": "MCP server exposing Hummingbot API for automated multi-exchange trading",
      "repository": {
        "url": "https://github.com/hummingbot/mcp",
        "source": "github"
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/hummingbot/hummingbot-mcp:0.1.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Base URL of the Hummingbot API (e.g., http://host.docker.internal:8820 or http://localhost:8000)",
              "isRequired": true,
              "format": "string",
              "name": "HUMMINGBOT_API_URL"
            },
            {
              "description": "Hummingbot API username",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HUMMINGBOT_USERNAME"
            },
            {
              "description": "Hummingbot API password",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HUMMINGBOT_PASSWORD"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.huoshuiai42-huoshui-fetch",
    "name": "io.github.huoshuiai42/huoshui-fetch",
    "description": "An MCP server that provides tools for fetching, converting, and extracting data from web pages.",
    "category": "web",
    "version": "1.0.0",
    "author": "io.github.huoshuiai42",
    "repository": "https://github.com/huoshuiai42/huoshui-fetch",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install huoshui-fetch",
    "documentationUrl": "https://github.com/huoshuiai42/huoshui-fetch#readme",
    "homepage": "https://github.com/huoshuiai42/huoshui-fetch",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.huoshuiai42/huoshui-fetch",
      "description": "An MCP server that provides tools for fetching, converting, and extracting data from web pages.",
      "repository": {
        "url": "https://github.com/huoshuiai42/huoshui-fetch",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "huoshui-fetch",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.huoshuiai42-huoshui-file-converter",
    "name": "io.github.huoshuiai42/huoshui-file-converter",
    "description": "An MCP server that provides document format conversion",
    "category": "filesystem",
    "version": "1.0.0",
    "author": "io.github.huoshuiai42",
    "repository": "https://github.com/huoshuiai42/huoshui-file-converter",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install huoshui-file-converter",
    "documentationUrl": "https://github.com/huoshuiai42/huoshui-file-converter#readme",
    "homepage": "https://github.com/huoshuiai42/huoshui-file-converter",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.huoshuiai42/huoshui-file-converter",
      "description": "An MCP server that provides document format conversion",
      "repository": {
        "url": "https://github.com/huoshuiai42/huoshui-file-converter",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "huoshui-file-converter",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your workding directory",
              "format": "string",
              "name": "HUOSHUI_WORKING_DIR"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.huoshuiai42-huoshui-file-search",
    "name": "io.github.huoshuiai42/huoshui-file-search",
    "description": "An MCP server that provides fast Spotlight file search capabilities for macOS",
    "category": "filesystem",
    "version": "1.0.0",
    "author": "io.github.huoshuiai42",
    "repository": "https://github.com/huoshuiai42/huoshui-file-search",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install huoshui-file-search",
    "documentationUrl": "https://github.com/huoshuiai42/huoshui-file-search#readme",
    "homepage": "https://github.com/huoshuiai42/huoshui-file-search",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.huoshuiai42/huoshui-file-search",
      "description": "An MCP server that provides fast Spotlight file search capabilities for macOS",
      "repository": {
        "url": "https://github.com/huoshuiai42/huoshui-file-search",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "huoshui-file-search",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.huoshuiai42-huoshui-pdf-converter",
    "name": "io.github.huoshuiai42/huoshui-pdf-converter",
    "description": "An MCP server that provides PDF file conversion",
    "category": "filesystem",
    "version": "1.0.0",
    "author": "io.github.huoshuiai42",
    "repository": "https://github.com/huoshuiai42/huoshui-pdf-converter",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install huoshui-pdf-converter",
    "documentationUrl": "https://github.com/huoshuiai42/huoshui-pdf-converter#readme",
    "homepage": "https://github.com/huoshuiai42/huoshui-pdf-converter",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.huoshuiai42/huoshui-pdf-converter",
      "description": "An MCP server that provides PDF file conversion",
      "repository": {
        "url": "https://github.com/huoshuiai42/huoshui-pdf-converter",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "huoshui-pdf-converter",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.huoshuiai42-huoshui-pdf-translator",
    "name": "io.github.huoshuiai42/huoshui-pdf-translator",
    "description": "An MCP server that provides PDF translation service",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.huoshuiai42",
    "repository": "https://github.com/huoshuiai42/huoshui-pdf-translator",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install huoshui-pdf-translator",
    "documentationUrl": "https://github.com/huoshuiai42/huoshui-pdf-translator#readme",
    "homepage": "https://github.com/huoshuiai42/huoshui-pdf-translator",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.huoshuiai42/huoshui-pdf-translator",
      "description": "An MCP server that provides PDF translation service",
      "repository": {
        "url": "https://github.com/huoshuiai42/huoshui-pdf-translator",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "huoshui-pdf-translator",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.idjohnson-vikunjamcp",
    "name": "io.github.idjohnson/vikunjamcp",
    "description": "An MCP server that provides access to Vikunja, a self-hosted task management solution.",
    "category": "version-control",
    "version": "1.0.26",
    "author": "io.github.idjohnson",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/idjohnson/vikunjamcp:0.26",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.idjohnson/vikunjamcp",
      "description": "An MCP server that provides access to Vikunja, a self-hosted task management solution.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.26",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/idjohnson/vikunjamcp:0.26",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "URL to the Vikunja Instance",
              "isRequired": true,
              "format": "string",
              "name": "VIKUNJA_URL"
            },
            {
              "description": "Username to use with the Vikunja Instance",
              "isRequired": true,
              "format": "string",
              "name": "VIKUNJA_USERNAME"
            },
            {
              "description": "Password for user in the Vikunja Instance",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "VIKUNJA_PASSWORD"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.iggredible-vim-mcp",
    "name": "io.github.iggredible/vim-mcp",
    "description": "Connect Claude Code to Vim/Neovim - query state, execute commands, search help, record macros",
    "category": "version-control",
    "version": "0.1.2",
    "author": "io.github.iggredible",
    "repository": "https://github.com/iggredible/vim-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install vim-mcp",
    "documentationUrl": "https://github.com/iggredible/vim-mcp#readme",
    "homepage": "https://github.com/iggredible/vim-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.iggredible/vim-mcp",
      "description": "Connect Claude Code to Vim/Neovim - query state, execute commands, search help, record macros",
      "repository": {
        "url": "https://github.com/iggredible/vim-mcp",
        "source": "github"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "vim-mcp",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.imbenrabi-financial-modeling-prep-mcp-server",
    "name": "io.github.imbenrabi/financial-modeling-prep-mcp-server",
    "description": "MCP server for Financial Modeling Prep API with 250+ financial data tools",
    "category": "version-control",
    "version": "2.5.1",
    "author": "io.github.imbenrabi",
    "repository": "https://github.com/imbenrabi/Financial-Modeling-Prep-MCP-Server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install financial-modeling-prep-mcp-server",
    "documentationUrl": "https://github.com/imbenrabi/Financial-Modeling-Prep-MCP-Server#readme",
    "homepage": "https://github.com/imbenrabi/Financial-Modeling-Prep-MCP-Server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.imbenrabi/financial-modeling-prep-mcp-server",
      "description": "MCP server for Financial Modeling Prep API with 250+ financial data tools",
      "repository": {
        "url": "https://github.com/imbenrabi/Financial-Modeling-Prep-MCP-Server",
        "source": "github",
        "id": "988409529"
      },
      "version": "2.5.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "financial-modeling-prep-mcp-server",
          "version": "2.5.1",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "https://financial-modeling-prep-mcp-server-production.up.railway.app/mcp"
          },
          "packageArguments": [
            {
              "description": "Financial Modeling Prep API access token",
              "format": "string",
              "type": "named",
              "name": "--fmp-token"
            },
            {
              "description": "Port number for HTTP server mode",
              "format": "number",
              "type": "named",
              "name": "--port"
            },
            {
              "description": "Enable dynamic tool discovery mode",
              "format": "boolean",
              "type": "named",
              "name": "--dynamic-tool-discovery"
            },
            {
              "description": "Comma-separated list of tool sets to load",
              "format": "string",
              "type": "named",
              "name": "--fmp-tool-sets"
            }
          ],
          "environmentVariables": [
            {
              "description": "Financial Modeling Prep API access token",
              "format": "string",
              "isSecret": true,
              "name": "FMP_ACCESS_TOKEN"
            },
            {
              "description": "Port number for HTTP server mode",
              "format": "number",
              "name": "PORT"
            },
            {
              "description": "Enable dynamic tool discovery mode",
              "format": "boolean",
              "name": "DYNAMIC_TOOL_DISCOVERY"
            },
            {
              "description": "Comma-separated list of tool sets to load",
              "format": "string",
              "name": "FMP_TOOL_SETS"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.indragiek-uniprof",
    "name": "io.github.indragiek/uniprof",
    "description": "Universal CPU profiler designed for humans and AI agents",
    "category": "filesystem",
    "version": "0.3.4",
    "author": "io.github.indragiek",
    "repository": "https://github.com/indragiek/uniprof",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install uniprof",
    "documentationUrl": "https://github.com/indragiek/uniprof#readme",
    "homepage": "https://github.com/indragiek/uniprof",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.indragiek/uniprof",
      "description": "Universal CPU profiler designed for humans and AI agents",
      "repository": {
        "url": "https://github.com/indragiek/uniprof",
        "source": "github"
      },
      "version": "0.3.4",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "uniprof",
          "version": "0.3.4",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "mcp",
              "type": "positional"
            },
            {
              "value": "run",
              "type": "positional"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.isamu-mulmocast-vision",
    "name": "io.github.isamu/mulmocast-vision",
    "description": "Easy and stylish presentation slide generator.",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.isamu",
    "repository": "https://github.com/receptron/mulmocast-vision",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mulmocast-vision",
    "documentationUrl": "https://github.com/receptron/mulmocast-vision#readme",
    "homepage": "https://github.com/receptron/mulmocast-vision",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.isamu/mulmocast-vision",
      "description": "Easy and stylish presentation slide generator.",
      "repository": {
        "url": "https://github.com/receptron/mulmocast-vision",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mulmocast-vision",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.iworkist-btcmcp",
    "name": "io.github.iworkist/btcmcp",
    "description": "An MCP server that provides Bitcoin price data from Binance API",
    "category": "version-control",
    "version": "0.1.2",
    "author": "io.github.iworkist",
    "repository": "https://github.com/iworkist/btcmcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install btcmcp",
    "documentationUrl": "https://github.com/iworkist/btcmcp#readme",
    "homepage": "https://github.com/iworkist/btcmcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.iworkist/btcmcp",
      "description": "An MCP server that provides Bitcoin price data from Binance API",
      "repository": {
        "url": "https://github.com/iworkist/btcmcp",
        "source": "github"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "btcmcp",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.jamesmontemagno-monkeymcp",
    "name": "io.github.jamesmontemagno/monkeymcp",
    "description": "MCP server providing monkey data, journeys, and location services for various monkey species.",
    "category": "version-control",
    "version": "2.0.3",
    "author": "io.github.jamesmontemagno",
    "repository": "https://github.com/jamesmontemagno/monkeymcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/jamesmontemagno/monkeymcp:2.0.3",
    "documentationUrl": "https://github.com/jamesmontemagno/monkeymcp#readme",
    "homepage": "https://github.com/jamesmontemagno/monkeymcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.jamesmontemagno/monkeymcp",
      "description": "MCP server providing monkey data, journeys, and location services for various monkey species.",
      "repository": {
        "url": "https://github.com/jamesmontemagno/monkeymcp",
        "source": "github"
      },
      "version": "2.0.3",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/jamesmontemagno/monkeymcp:2.0.3",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.jcucci-dotnet-sherlock-mcp",
    "name": "io.github.jcucci/dotnet-sherlock-mcp",
    "description": ".NET assembly introspection MCP server with advanced reflection and type analysis capabilities",
    "category": "version-control",
    "version": "2.3.0",
    "author": "io.github.jcucci",
    "repository": "https://github.com/jcucci/dotnet-sherlock-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/jcucci/dotnet-sherlock-mcp#readme",
    "homepage": "https://github.com/jcucci/dotnet-sherlock-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.jcucci/dotnet-sherlock-mcp",
      "description": ".NET assembly introspection MCP server with advanced reflection and type analysis capabilities",
      "repository": {
        "url": "https://github.com/jcucci/dotnet-sherlock-mcp",
        "source": "github"
      },
      "version": "2.3.0",
      "packages": [
        {
          "registryType": "nuget",
          "identifier": "Sherlock.MCP.Server",
          "version": "2.3.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.jfrog-jfrog-mcp-server",
    "name": "io.github.jfrog/jfrog-mcp-server",
    "description": "MCP Server for JFrog, providing tools for development and artifact management.",
    "category": "version-control",
    "version": "0.1.1",
    "author": "io.github.jfrog",
    "repository": "https://github.com/jfrog/jfrog-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://myPlatform.jfrog.github.io/mcp",
    "documentationUrl": "https://github.com/jfrog/jfrog-mcp-server#readme",
    "homepage": "https://github.com/jfrog/jfrog-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.jfrog/jfrog-mcp-server",
      "description": "MCP Server for JFrog, providing tools for development and artifact management.",
      "title": "JFrog Remote MCP Server",
      "repository": {
        "url": "https://github.com/jfrog/jfrog-mcp-server",
        "source": "github"
      },
      "version": "0.1.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://myPlatform.jfrog.github.io/mcp"
        }
      ]
    }
  },
  {
    "id": "io.github.jgador-websharp",
    "name": "io.github.jgador/websharp",
    "description": "Search the web and extract article text for LLMs.",
    "category": "web",
    "version": "v0.99.0-rc2",
    "author": "io.github.jgador",
    "repository": "https://github.com/jgador/websharp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/jessegador/websharp-mcp:v0.99.0-rc2",
    "documentationUrl": "https://github.com/jgador/websharp#readme",
    "homepage": "https://github.com/jgador/websharp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.jgador/websharp",
      "description": "Search the web and extract article text for LLMs.",
      "repository": {
        "url": "https://github.com/jgador/websharp",
        "source": "github"
      },
      "version": "v0.99.0-rc2",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/jessegador/websharp-mcp:v0.99.0-rc2",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:8081/"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.jjlabsio-korea-stock-mcp",
    "name": "io.github.jjlabsio/korea-stock-mcp",
    "description": "MCP server for korea stock",
    "category": "version-control",
    "version": "1.1.4",
    "author": "io.github.jjlabsio",
    "repository": "https://github.com/jjlabsio/korea-stock-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install korea-stock-mcp",
    "documentationUrl": "https://github.com/jjlabsio/korea-stock-mcp#readme",
    "homepage": "https://github.com/jjlabsio/korea-stock-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.jjlabsio/korea-stock-mcp",
      "description": "MCP server for korea stock",
      "repository": {
        "url": "https://github.com/jjlabsio/korea-stock-mcp",
        "source": "github"
      },
      "version": "1.1.4",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "korea-stock-mcp",
          "version": "1.1.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "DART API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "DART_API_KEY"
            },
            {
              "description": "KRX API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "KRX_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.jkakar-cookwith-mcp",
    "name": "io.github.jkakar/cookwith-mcp",
    "description": "AI-powered recipe generation and transformation tools by Cookwith",
    "category": "version-control",
    "version": "1.0.2",
    "author": "io.github.jkakar",
    "repository": "https://github.com/blaideinc/cookwith-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/blaideinc/cookwith-mcp#readme",
    "homepage": "https://github.com/blaideinc/cookwith-mcp",
    "rawData": {
      "$schema": "",
      "name": "io.github.jkakar/cookwith-mcp",
      "description": "AI-powered recipe generation and transformation tools by Cookwith",
      "repository": {
        "url": "https://github.com/blaideinc/cookwith-mcp",
        "source": "github"
      },
      "version": "1.0.2"
    }
  },
  {
    "id": "io.github.jkakar-recipe-mcp",
    "name": "io.github.jkakar/recipe-mcp",
    "description": "Generate and remix recipes using cookwith.co",
    "category": "version-control",
    "version": "1.0.4",
    "author": "io.github.jkakar",
    "repository": "https://github.com/blaideinc/recipe-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @cookwith/recipe-mcp",
    "documentationUrl": "https://github.com/blaideinc/recipe-mcp#readme",
    "homepage": "https://github.com/blaideinc/recipe-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.jkakar/recipe-mcp",
      "description": "Generate and remix recipes using cookwith.co",
      "repository": {
        "url": "https://github.com/blaideinc/recipe-mcp",
        "source": "github"
      },
      "version": "1.0.4",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@cookwith/recipe-mcp",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.jkawamoto-mcp-bear",
    "name": "io.github.jkawamoto/mcp-bear",
    "description": "A MCP server for interacting with Bear note-taking software.",
    "category": "version-control",
    "version": "0.5.0",
    "author": "io.github.jkawamoto",
    "repository": "https://github.com/jkawamoto/mcp-bear",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/jkawamoto/mcp-bear#readme",
    "homepage": "https://github.com/jkawamoto/mcp-bear",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.jkawamoto/mcp-bear",
      "description": "A MCP server for interacting with Bear note-taking software.",
      "repository": {
        "url": "https://github.com/jkawamoto/mcp-bear",
        "source": "github"
      },
      "version": "0.5.0",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/jkawamoto/mcp-bear/releases/download/v0.5.0/mcp-bear.mcpb",
          "fileSha256": "a6c2f13aa855a6a54f3e1377464af51338a7a69be76ca1ee2921ded456efde59",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Bear API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "BEAR_API_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.jkawamoto-mcp-florence2",
    "name": "io.github.jkawamoto/mcp-florence2",
    "description": "An MCP server for processing images using Florence-2",
    "category": "version-control",
    "version": "0.3.4",
    "author": "io.github.jkawamoto",
    "repository": "https://github.com/jkawamoto/mcp-florence2",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/jkawamoto/mcp-florence2#readme",
    "homepage": "https://github.com/jkawamoto/mcp-florence2",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.jkawamoto/mcp-florence2",
      "description": "An MCP server for processing images using Florence-2",
      "repository": {
        "url": "https://github.com/jkawamoto/mcp-florence2",
        "source": "github"
      },
      "version": "0.3.4",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/jkawamoto/mcp-florence2/releases/download/v0.3.4/mcp-florence2.mcpb",
          "version": "0.3.4",
          "fileSha256": "23e1c7788144dc55e5e4795d71362c35627792b34f917faf3e7b81e08512f4e5",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.jkawamoto-mcp-youtube-transcript",
    "name": "io.github.jkawamoto/mcp-youtube-transcript",
    "description": "An MCP server retrieving transcripts of YouTube videos",
    "category": "version-control",
    "version": "0.5.5",
    "author": "io.github.jkawamoto",
    "repository": "https://github.com/jkawamoto/mcp-youtube-transcript",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/jkawamoto/mcp-youtube-transcript#readme",
    "homepage": "https://github.com/jkawamoto/mcp-youtube-transcript",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.jkawamoto/mcp-youtube-transcript",
      "description": "An MCP server retrieving transcripts of YouTube videos",
      "repository": {
        "url": "https://github.com/jkawamoto/mcp-youtube-transcript",
        "source": "github"
      },
      "version": "0.5.5",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/jkawamoto/mcp-youtube-transcript/releases/download/v0.5.5/mcp-youtube-transcript.mcpb",
          "fileSha256": "57f6c0aafdea34c9f08cd12d0211f8f8e4fa55d251fce9e41e53ee0a50528c8d",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.joelverhagen-Knapcode.SampleMcpServer",
    "name": "io.github.joelverhagen/Knapcode.SampleMcpServer",
    "description": "A sample MCP server using the MCP C# SDK. Generates random numbers and random weather.",
    "category": "version-control",
    "version": "0.7.0-beta",
    "author": "io.github.joelverhagen",
    "repository": "https://github.com/joelverhagen/Knapcode.SampleMcpServer.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/joelverhagen/Knapcode.SampleMcpServer.git#readme",
    "homepage": "https://github.com/joelverhagen/Knapcode.SampleMcpServer.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.joelverhagen/Knapcode.SampleMcpServer",
      "description": "A sample MCP server using the MCP C# SDK. Generates random numbers and random weather.",
      "repository": {
        "url": "https://github.com/joelverhagen/Knapcode.SampleMcpServer.git",
        "source": "github"
      },
      "version": "0.7.0-beta",
      "packages": [
        {
          "registryType": "nuget",
          "registryBaseUrl": "https://api.nuget.org",
          "identifier": "Knapcode.SampleMcpServer",
          "version": "0.7.0-beta",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "mcp",
              "type": "positional",
              "valueHint": "mcp"
            },
            {
              "value": "start",
              "type": "positional",
              "valueHint": "start"
            }
          ],
          "environmentVariables": [
            {
              "value": "{weather_choices}",
              "variables": {
                "weather_choices": {
                  "description": "Comma separated list of weather descriptions to randomly select.",
                  "isRequired": true
                }
              },
              "name": "WEATHER_CHOICES"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.jonathanhefner-hello-mcp-registry",
    "name": "io.github.jonathanhefner/hello-mcp-registry",
    "description": "A simple MCP server.",
    "category": "version-control",
    "version": "0.1.1",
    "author": "io.github.jonathanhefner",
    "repository": "https://github.com/jonathanhefner/hello-mcp-registry",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @jonathanhefner/hello-mcp-registry",
    "documentationUrl": "https://github.com/jonathanhefner/hello-mcp-registry#readme",
    "homepage": "https://github.com/jonathanhefner/hello-mcp-registry",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.jonathanhefner/hello-mcp-registry",
      "description": "A simple MCP server.",
      "repository": {
        "url": "https://github.com/jonathanhefner/hello-mcp-registry",
        "source": "github"
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@jonathanhefner/hello-mcp-registry",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.josefdc-uniprot-mcp",
    "name": "io.github.josefdc/uniprot-mcp",
    "description": "Read-only UniProtKB via MCP (entries, sequences, features, GO, taxonomy, ID mapping).",
    "category": "version-control",
    "version": "0.1.0",
    "author": "io.github.josefdc",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install uniprot-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.josefdc/uniprot-mcp",
      "description": "Read-only UniProtKB via MCP (entries, sequences, features, GO, taxonomy, ID mapping).",
      "title": "UniProt MCP",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "uniprot-mcp",
          "version": "0.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.joshmsimpson-exiftool",
    "name": "io.github.joshmsimpson/exiftool",
    "description": "Read, write, and remove metadata from 150+ file formats using ExifTool",
    "category": "filesystem",
    "version": "0.1.6",
    "author": "io.github.joshmsimpson",
    "repository": "https://github.com/joshmsimpson/exiftool_mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install exiftool-mcp",
    "documentationUrl": "https://github.com/joshmsimpson/exiftool_mcp#readme",
    "homepage": "https://github.com/joshmsimpson/exiftool_mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.joshmsimpson/exiftool",
      "description": "Read, write, and remove metadata from 150+ file formats using ExifTool",
      "repository": {
        "url": "https://github.com/joshmsimpson/exiftool_mcp",
        "source": "github"
      },
      "version": "0.1.6",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "exiftool-mcp",
          "version": "0.1.6",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.jztan-redmine-mcp-server",
    "name": "io.github.jztan/redmine-mcp-server",
    "description": "Production-ready MCP server for Redmine with security, pagination, and enterprise features",
    "category": "version-control",
    "version": "0.6.0",
    "author": "io.github.jztan",
    "repository": "https://github.com/jztan/redmine-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install redmine-mcp-server",
    "documentationUrl": "https://github.com/jztan/redmine-mcp-server#readme",
    "homepage": "https://github.com/jztan/redmine-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.jztan/redmine-mcp-server",
      "description": "Production-ready MCP server for Redmine with security, pagination, and enterprise features",
      "repository": {
        "url": "https://github.com/jztan/redmine-mcp-server",
        "source": "github"
      },
      "version": "0.6.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "redmine-mcp-server",
          "version": "0.6.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "URL of your Redmine server (e.g., https://your-redmine-server.com)",
              "isRequired": true,
              "format": "string",
              "name": "REDMINE_URL"
            },
            {
              "description": "Redmine username for authentication (alternative to API key)",
              "format": "string",
              "name": "REDMINE_USERNAME"
            },
            {
              "description": "Redmine password for authentication (alternative to API key)",
              "format": "string",
              "isSecret": true,
              "name": "REDMINE_PASSWORD"
            },
            {
              "description": "Redmine API key for authentication (alternative to username/password)",
              "format": "string",
              "isSecret": true,
              "name": "REDMINE_API_KEY"
            },
            {
              "description": "Host address for the MCP server (default: 0.0.0.0)",
              "format": "string",
              "default": "0.0.0.0",
              "name": "SERVER_HOST"
            },
            {
              "description": "Port for the MCP server (default: 8000)",
              "format": "number",
              "default": "8000",
              "name": "SERVER_PORT"
            },
            {
              "description": "Public hostname for file download URLs (default: localhost)",
              "format": "string",
              "default": "localhost",
              "name": "PUBLIC_HOST"
            },
            {
              "description": "Public port for file download URLs (default: 8000)",
              "format": "number",
              "default": "8000",
              "name": "PUBLIC_PORT"
            },
            {
              "description": "Directory for storing downloaded attachments (default: ./attachments)",
              "format": "string",
              "default": "./attachments",
              "name": "ATTACHMENTS_DIR"
            },
            {
              "description": "Enable automatic cleanup of expired files (default: true)",
              "format": "boolean",
              "default": "true",
              "name": "AUTO_CLEANUP_ENABLED"
            },
            {
              "description": "Interval between cleanup runs in minutes (default: 10)",
              "format": "number",
              "default": "10",
              "name": "CLEANUP_INTERVAL_MINUTES"
            },
            {
              "description": "Default expiry time for attachments in minutes (default: 60)",
              "format": "number",
              "default": "60",
              "name": "ATTACHMENT_EXPIRES_MINUTES"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.karanb192-reddit-buddy-mcp",
    "name": "io.github.karanb192/reddit-buddy-mcp",
    "description": "Reddit MCP server - browse posts, search content, analyze users.",
    "category": "version-control",
    "version": "1.0.6-test.7",
    "author": "io.github.karanb192",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @karanb192/reddit-buddy-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.karanb192/reddit-buddy-mcp",
      "description": "Reddit MCP server - browse posts, search content, analyze users.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.6-test.7",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@karanb192/reddit-buddy-mcp",
          "version": "1.0.6-test.7",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.karanb192-reddit-mcp-buddy",
    "name": "io.github.karanb192/reddit-mcp-buddy",
    "description": "Reddit browser for AI assistants. Browse posts, search content, analyze users. No API keys needed.",
    "category": "version-control",
    "version": "1.1.10",
    "author": "io.github.karanb192",
    "repository": "https://github.com/karanb192/reddit-mcp-buddy",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install reddit-mcp-buddy",
    "documentationUrl": "https://github.com/karanb192/reddit-mcp-buddy#readme",
    "homepage": "https://github.com/karanb192/reddit-mcp-buddy",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.karanb192/reddit-mcp-buddy",
      "description": "Reddit browser for AI assistants. Browse posts, search content, analyze users. No API keys needed.",
      "repository": {
        "url": "https://github.com/karanb192/reddit-mcp-buddy",
        "source": "github",
        "id": "1056452116"
      },
      "version": "1.1.10",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "reddit-mcp-buddy",
          "version": "1.1.10",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.kayembahamid-cybersim-pro",
    "name": "io.github.kayembahamid/cybersim-pro",
    "description": "Cybersecurity training, simulation, and incident response MCP server",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.kayembahamid",
    "repository": "https://github.com/kayembahamid/cybersim-pro",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/hamcodes/cybersim-pro-mcp:v1.0.1",
    "documentationUrl": "https://github.com/kayembahamid/cybersim-pro#readme",
    "homepage": "https://github.com/kayembahamid/cybersim-pro",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.kayembahamid/cybersim-pro",
      "description": "Cybersecurity training, simulation, and incident response MCP server",
      "repository": {
        "url": "https://github.com/kayembahamid/cybersim-pro",
        "source": "github",
        "subfolder": "cybersim-pro-mcp"
      },
      "version": "1.0.1",
      "websiteUrl": "https://kayembahamid.github.io",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/hamcodes/cybersim-pro-mcp:v1.0.1",
          "runtimeHint": "docker",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "type": "named",
              "name": "--rm"
            },
            {
              "type": "named",
              "name": "-i"
            },
            {
              "value": "hamcodes/cybersim-pro-mcp:v1.0.1",
              "type": "positional"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.kemalersin-fonparam-mcp",
    "name": "io.github.kemalersin/fonparam-mcp",
    "description": "MCP server for FonParam API - Turkish mutual funds data",
    "category": "version-control",
    "version": "1.0.4",
    "author": "io.github.kemalersin",
    "repository": "https://github.com/kemalersin/fonparam-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install fonparam-mcp",
    "documentationUrl": "https://github.com/kemalersin/fonparam-mcp#readme",
    "homepage": "https://github.com/kemalersin/fonparam-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.kemalersin/fonparam-mcp",
      "description": "MCP server for FonParam API - Turkish mutual funds data",
      "repository": {
        "url": "https://github.com/kemalersin/fonparam-mcp",
        "source": "github"
      },
      "version": "1.0.4",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "fonparam-mcp",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.kesslerio-attio-mcp-server",
    "name": "io.github.kesslerio/attio-mcp-server",
    "description": "AI-powered Attio CRM access. Manage contacts, companies, deals, tasks, notes and workflows.",
    "category": "version-control",
    "version": "1.1.8",
    "author": "io.github.kesslerio",
    "repository": "https://github.com/kesslerio/attio-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install attio-mcp",
    "documentationUrl": "https://github.com/kesslerio/attio-mcp-server#readme",
    "homepage": "https://github.com/kesslerio/attio-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.kesslerio/attio-mcp-server",
      "description": "AI-powered Attio CRM access. Manage contacts, companies, deals, tasks, notes and workflows.",
      "repository": {
        "url": "https://github.com/kesslerio/attio-mcp-server",
        "source": "github"
      },
      "version": "1.1.8",
      "websiteUrl": "https://kesslerio.github.io/attio-mcp-server",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "attio-mcp",
          "version": "1.1.8",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Attio API key (required for all tools except health-check)",
              "isRequired": true,
              "isSecret": true,
              "name": "ATTIO_API_KEY"
            },
            {
              "description": "Optional Attio workspace ID for workspace-specific operations",
              "name": "ATTIO_WORKSPACE_ID"
            },
            {
              "description": "Tool mode: 'full' (all tools) or 'search' (search tools only). Default: 'full'",
              "name": "ATTIO_MCP_TOOL_MODE"
            },
            {
              "description": "Logging level: 'DEBUG', 'INFO', 'WARN', 'ERROR'. Default: 'INFO'",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/publisher-provided": {
          "build_info": {
            "timestamp": "2025-10-10T18:30:00Z"
          },
          "tool": "github-actions",
          "version": "1.0.0"
        }
      }
    }
  },
  {
    "id": "io.github.kevincogan-demo-mcp-server",
    "name": "io.github.kevincogan/demo-mcp-server",
    "description": "Demo server entry for local testing",
    "category": "version-control",
    "version": "1.0.4",
    "author": "io.github.kevincogan",
    "repository": "https://github.com/kevincogan/demo-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://kevincogan.github.io/mcp",
    "documentationUrl": "https://github.com/kevincogan/demo-mcp-server#readme",
    "homepage": "https://github.com/kevincogan/demo-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.kevincogan/demo-mcp-server",
      "description": "Demo server entry for local testing",
      "repository": {
        "url": "https://github.com/kevincogan/demo-mcp-server",
        "source": "github"
      },
      "version": "1.0.4",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://kevincogan.github.io/mcp"
        }
      ]
    }
  },
  {
    "id": "io.github.kevinkells-datagraph",
    "name": "io.github.kevinkells/datagraph",
    "description": "Urban data for civic problem-solving: NYC subway, loneliness programs, violence prevention.",
    "category": "version-control",
    "version": "1.1.0",
    "author": "io.github.kevinkells",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install datagraph-city-mcp-server",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.kevinkells/datagraph",
      "description": "Urban data for civic problem-solving: NYC subway, loneliness programs, violence prevention.",
      "title": "DataGraph",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.1.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "datagraph-city-mcp-server",
          "version": "1.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.kevint-cerebras-cerebras-code-mcp",
    "name": "io.github.kevint-cerebras/cerebras-code-mcp",
    "description": "Model Context Protocol (MCP) server for Cerebras to make coding faster in AI-first IDEs",
    "category": "version-control",
    "version": "1.3.1",
    "author": "io.github.kevint-cerebras",
    "repository": "https://github.com/kevint-cerebras/cerebras-code-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install cerebras-code-mcp",
    "documentationUrl": "https://github.com/kevint-cerebras/cerebras-code-mcp#readme",
    "homepage": "https://github.com/kevint-cerebras/cerebras-code-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.kevint-cerebras/cerebras-code-mcp",
      "description": "Model Context Protocol (MCP) server for Cerebras to make coding faster in AI-first IDEs",
      "repository": {
        "url": "https://github.com/kevint-cerebras/cerebras-code-mcp",
        "source": "github"
      },
      "version": "1.3.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "cerebras-code-mcp",
          "version": "1.3.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Cerebras API key from cloud.cerebras.ai",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "CEREBRAS_API_KEY"
            },
            {
              "description": "Optional OpenRouter API key for fallback when Cerebras rate limits are hit",
              "format": "string",
              "isSecret": true,
              "name": "OPENROUTER_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.khaoss85-orchestro",
    "name": "io.github.khaoss85/orchestro",
    "description": "Your AI Development Conductor - 60 MCP tools for intelligent task orchestration",
    "category": "version-control",
    "version": "2.1.0",
    "author": "io.github.khaoss85",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @khaoss85/orchestro",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.khaoss85/orchestro",
      "description": "Your AI Development Conductor - 60 MCP tools for intelligent task orchestration",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.1.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@khaoss85/orchestro",
          "version": "2.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.king-of-the-grackles-reddit-research-mcp",
    "name": "io.github.king-of-the-grackles/reddit-research-mcp",
    "description": "Turn Reddit's chaos into structured insights with full citations - MCP server for Reddit research",
    "category": "version-control",
    "version": "0.1.1",
    "author": "io.github.king-of-the-grackles",
    "repository": "https://github.com/king-of-the-grackles/reddit-research-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install reddit-research-mcp",
    "documentationUrl": "https://github.com/king-of-the-grackles/reddit-research-mcp#readme",
    "homepage": "https://github.com/king-of-the-grackles/reddit-research-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.king-of-the-grackles/reddit-research-mcp",
      "description": "Turn Reddit's chaos into structured insights with full citations - MCP server for Reddit research",
      "repository": {
        "url": "https://github.com/king-of-the-grackles/reddit-research-mcp",
        "source": "github"
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "reddit-research-mcp",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.kirbah-mcp-youtube",
    "name": "io.github.kirbah/mcp-youtube",
    "description": "YouTube MCP server for token-optimized, structured data using the YouTube Data API v3.",
    "category": "version-control",
    "version": "0.2.6",
    "author": "io.github.kirbah",
    "repository": "https://github.com/kirbah/mcp-youtube",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @kirbah/mcp-youtube",
    "documentationUrl": "https://github.com/kirbah/mcp-youtube#readme",
    "homepage": "https://github.com/kirbah/mcp-youtube",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.kirbah/mcp-youtube",
      "description": "YouTube MCP server for token-optimized, structured data using the YouTube Data API v3.",
      "repository": {
        "url": "https://github.com/kirbah/mcp-youtube",
        "source": "github"
      },
      "version": "0.2.6",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@kirbah/mcp-youtube",
          "version": "0.2.6",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "YouTube Data API v3 key",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUTUBE_API_KEY"
            },
            {
              "description": "MongoDB connection string for caching",
              "format": "string",
              "isSecret": true,
              "name": "MDB_MCP_CONNECTION_STRING"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.kkjdaniel-bgg-mcp",
    "name": "io.github.kkjdaniel/bgg-mcp",
    "description": "BoardGameGeek MCP server providing access to BGG API data through standardized tools",
    "category": "version-control",
    "version": "1.4.0",
    "author": "io.github.kkjdaniel",
    "repository": "https://github.com/kkjdaniel/bgg-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/kdaniel/bgg-mcp:1.4.0",
    "documentationUrl": "https://github.com/kkjdaniel/bgg-mcp#readme",
    "homepage": "https://github.com/kkjdaniel/bgg-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.kkjdaniel/bgg-mcp",
      "description": "BoardGameGeek MCP server providing access to BGG API data through standardized tools",
      "repository": {
        "url": "https://github.com/kkjdaniel/bgg-mcp",
        "source": "github"
      },
      "version": "1.4.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/kdaniel/bgg-mcp:1.4.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your BoardGameGeek username for references such as ME or MY in prompts",
              "format": "string",
              "name": "BGG_USERNAME"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.kmalakoff-mcp-pdf",
    "name": "io.github.kmalakoff/mcp-pdf",
    "description": "MCP server for PDF generation using PDFKit",
    "category": "version-control",
    "version": "1.0.3",
    "author": "io.github.kmalakoff",
    "repository": "https://github.com/mcp-z/mcp-pdf",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @mcp-z/mcp-pdf",
    "documentationUrl": "https://github.com/mcp-z/mcp-pdf#readme",
    "homepage": "https://github.com/mcp-z/mcp-pdf",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.kmalakoff/mcp-pdf",
      "description": "MCP server for PDF generation using PDFKit",
      "repository": {
        "url": "https://github.com/mcp-z/mcp-pdf",
        "source": "github"
      },
      "version": "1.0.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@mcp-z/mcp-pdf",
          "version": "1.0.3",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.koki-develop-esa-mcp-server",
    "name": "io.github.koki-develop/esa-mcp-server",
    "description": "A Model Context Protocol (MCP) server for esa.io",
    "category": "version-control",
    "version": "0.3.2",
    "author": "io.github.koki-develop",
    "repository": "https://github.com/koki-develop/esa-mcp-server.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @koki-develop/esa-mcp-server",
    "documentationUrl": "https://github.com/koki-develop/esa-mcp-server.git#readme",
    "homepage": "https://github.com/koki-develop/esa-mcp-server.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.koki-develop/esa-mcp-server",
      "description": "A Model Context Protocol (MCP) server for esa.io",
      "repository": {
        "url": "https://github.com/koki-develop/esa-mcp-server.git",
        "source": "github"
      },
      "version": "0.3.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@koki-develop/esa-mcp-server",
          "version": "0.3.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your esa team",
              "isRequired": true,
              "format": "string",
              "name": "ESA_TEAM"
            },
            {
              "description": "Your esa personal access token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "ESA_ACCESS_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.kontent-ai-mcp-server",
    "name": "io.github.kontent-ai/mcp-server",
    "description": "Connect to Kontent.ai to manage content, types, taxonomies, and workflows via natural language",
    "category": "version-control",
    "version": "0.21.9",
    "author": "io.github.kontent-ai",
    "repository": "https://github.com/kontent-ai/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @kontent-ai/mcp-server",
    "documentationUrl": "https://github.com/kontent-ai/mcp-server#readme",
    "homepage": "https://github.com/kontent-ai/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.kontent-ai/mcp-server",
      "description": "Connect to Kontent.ai to manage content, types, taxonomies, and workflows via natural language",
      "repository": {
        "url": "https://github.com/kontent-ai/mcp-server",
        "source": "github"
      },
      "version": "0.21.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@kontent-ai/mcp-server",
          "version": "0.21.9",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Kontent.ai Management API key",
              "isRequired": true,
              "isSecret": true,
              "name": "KONTENT_API_KEY"
            },
            {
              "description": "Kontent.ai environment ID",
              "isRequired": true,
              "name": "KONTENT_ENVIRONMENT_ID"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@kontent-ai/mcp-server",
          "version": "0.21.9",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3001/mcp"
          },
          "packageArguments": [
            {
              "value": "shttp",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Kontent.ai Management API key",
              "isRequired": true,
              "isSecret": true,
              "name": "KONTENT_API_KEY"
            },
            {
              "description": "Kontent.ai environment ID",
              "isRequired": true,
              "name": "KONTENT_ENVIRONMENT_ID"
            },
            {
              "description": "Server port for HTTP transport (shttp mode only)",
              "name": "PORT"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.kubeshop-testkube-mcp",
    "name": "io.github.kubeshop/testkube-mcp",
    "description": "MCP server for Testkube - Manage test workflows, executions, and artifacts via AI assistants",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.kubeshop",
    "repository": "https://github.com/kubeshop/testkube",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/kubeshop/mcp-server:test",
    "documentationUrl": "https://github.com/kubeshop/testkube#readme",
    "homepage": "https://github.com/kubeshop/testkube",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.kubeshop/testkube-mcp",
      "description": "MCP server for Testkube - Manage test workflows, executions, and artifacts via AI assistants",
      "repository": {
        "url": "https://github.com/kubeshop/testkube",
        "source": "github"
      },
      "version": "1.0.1",
      "icons": [
        {
          "src": "https://avatars.githubusercontent.com/u/82541796?v=4",
          "mimeType": "image/png",
          "sizes": [
            "any"
          ]
        }
      ],
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/kubeshop/mcp-server:test",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Testkube access token for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TK_ACCESS_TOKEN"
            },
            {
              "description": "Testkube organization ID",
              "isRequired": true,
              "format": "string",
              "name": "TK_ORG_ID"
            },
            {
              "description": "Testkube environment ID",
              "isRequired": true,
              "format": "string",
              "name": "TK_ENV_ID"
            },
            {
              "description": "Testkube Control Plane URL (default: https://api.testkube.io)",
              "format": "string",
              "name": "TK_CONTROL_PLANE_URL"
            },
            {
              "description": "Testkube Dashboard URL",
              "format": "string",
              "name": "TK_DASHBOARD_URL"
            },
            {
              "description": "Enable debug mode (default: false)",
              "format": "string",
              "name": "TK_DEBUG"
            },
            {
              "description": "MCP transport type: stdio or shttp (default: stdio)",
              "format": "string",
              "name": "TK_MCP_TRANSPORT"
            },
            {
              "description": "SHTTP host when using shttp transport",
              "format": "string",
              "name": "TK_MCP_SHTTP_HOST"
            },
            {
              "description": "SHTTP port when using shttp transport",
              "format": "string",
              "name": "TK_MCP_SHTTP_PORT"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.lapfelix-xcodemcp",
    "name": "io.github.lapfelix/xcodemcp",
    "description": "Control Xcode directly via JXA for build, test, debug operations with XCLogParser integration",
    "category": "version-control",
    "version": "2.1.4",
    "author": "io.github.lapfelix",
    "repository": "https://github.com/lapfelix/XcodeMCP",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install xcodemcp",
    "documentationUrl": "https://github.com/lapfelix/XcodeMCP#readme",
    "homepage": "https://github.com/lapfelix/XcodeMCP",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.lapfelix/xcodemcp",
      "description": "Control Xcode directly via JXA for build, test, debug operations with XCLogParser integration",
      "repository": {
        "url": "https://github.com/lapfelix/XcodeMCP",
        "source": "github"
      },
      "version": "2.1.4",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "xcodemcp",
          "version": "2.1.4",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.leshchenko1979-fast-mcp-telegram",
    "name": "io.github.leshchenko1979/fast-mcp-telegram",
    "description": "Telegram MCP server with search and messaging capabilities",
    "category": "version-control",
    "version": "0.5.0",
    "author": "io.github.leshchenko1979",
    "repository": "https://github.com/leshchenko1979/fast-mcp-telegram",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install fast-mcp-telegram",
    "documentationUrl": "https://github.com/leshchenko1979/fast-mcp-telegram#readme",
    "homepage": "https://github.com/leshchenko1979/fast-mcp-telegram",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.leshchenko1979/fast-mcp-telegram",
      "description": "Telegram MCP server with search and messaging capabilities",
      "repository": {
        "url": "https://github.com/leshchenko1979/fast-mcp-telegram",
        "source": "github"
      },
      "version": "0.5.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "fast-mcp-telegram",
          "version": "0.5.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Telegram API ID (from https://my.telegram.org/apps)",
              "isRequired": true,
              "name": "API_ID"
            },
            {
              "description": "Telegram API Hash (from https://my.telegram.org/apps)",
              "isRequired": true,
              "isSecret": true,
              "name": "API_HASH"
            },
            {
              "description": "Server mode: stdio (local), http-no-auth (dev), http-auth (prod)",
              "default": "stdio",
              "choices": [
                "stdio",
                "http-no-auth",
                "http-auth"
              ],
              "name": "SERVER_MODE"
            },
            {
              "description": "Custom session directory (defaults to ~/.config/fast-mcp-telegram/)",
              "name": "SESSION_DIR"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.linxule-lotus-wisdom",
    "name": "io.github.linxule/lotus-wisdom",
    "description": "An MCP server for problem-solving using the Lotus Sutra's wisdom framework.",
    "category": "version-control",
    "version": "0.2.1",
    "author": "io.github.linxule",
    "repository": "https://github.com/linxule/lotus-wisdom-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install lotus-wisdom-mcp",
    "documentationUrl": "https://github.com/linxule/lotus-wisdom-mcp#readme",
    "homepage": "https://github.com/linxule/lotus-wisdom-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.linxule/lotus-wisdom",
      "description": "An MCP server for problem-solving using the Lotus Sutra's wisdom framework.",
      "title": "Lotus Wisdom",
      "repository": {
        "url": "https://github.com/linxule/lotus-wisdom-mcp",
        "source": "github",
        "id": "963596268"
      },
      "version": "0.2.1",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "lotus-wisdom-mcp",
          "version": "0.2.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.localstack-localstack-mcp-server",
    "name": "io.github.localstack/localstack-mcp-server",
    "description": "A LocalStack MCP Server providing essential tools for local cloud development & testing",
    "category": "version-control",
    "version": "0.1.5",
    "author": "io.github.localstack",
    "repository": "https://github.com/localstack/localstack-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @localstack/localstack-mcp-server",
    "documentationUrl": "https://github.com/localstack/localstack-mcp-server#readme",
    "homepage": "https://github.com/localstack/localstack-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.localstack/localstack-mcp-server",
      "description": "A LocalStack MCP Server providing essential tools for local cloud development & testing",
      "repository": {
        "url": "https://github.com/localstack/localstack-mcp-server",
        "source": "github"
      },
      "version": "0.1.5",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@localstack/localstack-mcp-server",
          "version": "0.1.5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "LocalStack Auth Token (optional for Pro features)",
              "format": "string",
              "isSecret": true,
              "name": "LOCALSTACK_AUTH_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.macuse-app-macuse",
    "name": "io.github.macuse-app/macuse",
    "description": "Bridges AI assistants with native macOS functionality through the Model Context Protocol (MCP).",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.macuse-app",
    "repository": "https://github.com/macuse-app/macuse",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/macuse-app/macuse#readme",
    "homepage": "https://github.com/macuse-app/macuse",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.macuse-app/macuse",
      "description": "Bridges AI assistants with native macOS functionality through the Model Context Protocol (MCP).",
      "repository": {
        "url": "https://github.com/macuse-app/macuse",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/macuse-app/macuse/releases/download/v1.0.1/macuse-1.0.1.mcpb",
          "fileSha256": "9e3444c567c66a57d15657dca437dbdb9560d16f00e6d4ac3d95ea795b9b482e",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.madhavi-opsera-bug-detector",
    "name": "io.github.madhavi-opsera/bug-detector",
    "description": "Analyzes code for bugs, security vulnerabilities, and code smells",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.madhavi-opsera",
    "repository": "https://github.com/madhavi-opsera/bug-detector",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull ghcr.io/madhavi-opsera/bug-detector:1.0.0",
    "documentationUrl": "https://github.com/madhavi-opsera/bug-detector#readme",
    "homepage": "https://github.com/madhavi-opsera/bug-detector",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.madhavi-opsera/bug-detector",
      "description": "Analyzes code for bugs, security vulnerabilities, and code smells",
      "title": "Bug Detector",
      "repository": {
        "url": "https://github.com/madhavi-opsera/bug-detector",
        "source": "github",
        "id": "madhavi-opsera/bug-detector"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "ghcr.io/madhavi-opsera/bug-detector:1.0.0",
          "runtimeHint": "docker",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "value": "run",
              "type": "positional",
              "valueHint": "docker_command"
            },
            {
              "type": "named",
              "name": "--rm"
            },
            {
              "type": "named",
              "name": "-i"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.mapbox-mcp-server",
    "name": "io.github.mapbox/mcp-server",
    "description": "Geospatial intelligence with Mapbox APIs like geocoding, POI search, directions, isochrones, etc.",
    "category": "version-control",
    "version": "0.5.5",
    "author": "io.github.mapbox",
    "repository": "https://github.com/mapbox/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @mapbox/mcp-server",
    "documentationUrl": "https://github.com/mapbox/mcp-server#readme",
    "homepage": "https://github.com/mapbox/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.mapbox/mcp-server",
      "description": "Geospatial intelligence with Mapbox APIs like geocoding, POI search, directions, isochrones, etc.",
      "repository": {
        "url": "https://github.com/mapbox/mcp-server",
        "source": "github"
      },
      "version": "0.5.5",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@mapbox/mcp-server",
          "version": "0.5.5",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Mapbox access token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "MAPBOX_ACCESS_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.marianfoo-mcp-sap-docs",
    "name": "io.github.marianfoo/mcp-sap-docs",
    "description": "Fast MCP server for unified SAP docs search (SAPUI5, CAP, OpenUI5, wdi5) with BM25 full-text search",
    "category": "version-control",
    "version": "0.3.9",
    "author": "io.github.marianfoo",
    "repository": "https://github.com/marianfoo/mcp-sap-docs",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-sap-docs",
    "documentationUrl": "https://github.com/marianfoo/mcp-sap-docs#readme",
    "homepage": "https://github.com/marianfoo/mcp-sap-docs",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.marianfoo/mcp-sap-docs",
      "description": "Fast MCP server for unified SAP docs search (SAPUI5, CAP, OpenUI5, wdi5) with BM25 full-text search",
      "repository": {
        "url": "https://github.com/marianfoo/mcp-sap-docs",
        "source": "github"
      },
      "version": "0.3.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-sap-docs",
          "version": "0.3.9",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.marlenezw-publish-mcp-server",
    "name": "io.github.marlenezw/publish-mcp-server",
    "description": "An MCP server that helps developers publish their MCP servers to the registry",
    "category": "version-control",
    "version": "0.1.3",
    "author": "io.github.marlenezw",
    "repository": "https://github.com/marlenezw/publish-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install publish-mcp-server",
    "documentationUrl": "https://github.com/marlenezw/publish-mcp-server#readme",
    "homepage": "https://github.com/marlenezw/publish-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.marlenezw/publish-mcp-server",
      "description": "An MCP server that helps developers publish their MCP servers to the registry",
      "repository": {
        "url": "https://github.com/marlenezw/publish-mcp-server",
        "source": "github"
      },
      "version": "0.1.3",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "publish-mcp-server",
          "version": "0.1.3",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.martymarkenson-postgres-connector",
    "name": "io.github.martymarkenson/postgres-connector",
    "description": "MCP server for querying PostgreSQL databases",
    "category": "database",
    "version": "1.0.2",
    "author": "io.github.martymarkenson",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install postgres-connector",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.martymarkenson/postgres-connector",
      "description": "MCP server for querying PostgreSQL databases",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "postgres-connector",
          "version": "1.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.mazemax-mindvalley-products-mcp",
    "name": "io.github.mazemax/mindvalley-products-mcp",
    "description": "AI assistant access to Mindvalley products, masterclasses, programs, and certifications.",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.mazemax",
    "repository": "https://github.com/mazemax/mindvalley-products-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mindvalley-products-mcp",
    "documentationUrl": "https://github.com/mazemax/mindvalley-products-mcp#readme",
    "homepage": "https://github.com/mazemax/mindvalley-products-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.mazemax/mindvalley-products-mcp",
      "description": "AI assistant access to Mindvalley products, masterclasses, programs, and certifications.",
      "repository": {
        "url": "https://github.com/mazemax/mindvalley-products-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mindvalley-products-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.mcp-z-mcp-pdf",
    "name": "io.github.mcp-z/mcp-pdf",
    "description": "MCP server for creative PDF generation with full emoji, Unicode, and offline support",
    "category": "version-control",
    "version": "1.2.0",
    "author": "io.github.mcp-z",
    "repository": "https://github.com/mcp-z/mcp-pdf.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @mcp-z/mcp-pdf",
    "documentationUrl": "https://github.com/mcp-z/mcp-pdf.git#readme",
    "homepage": "https://github.com/mcp-z/mcp-pdf.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.mcp-z/mcp-pdf",
      "description": "MCP server for creative PDF generation with full emoji, Unicode, and offline support",
      "repository": {
        "url": "https://github.com/mcp-z/mcp-pdf.git",
        "source": "github",
        "id": "1069486310"
      },
      "version": "1.2.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@mcp-z/mcp-pdf",
          "version": "1.2.0",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.meloncafe-chromadb-remote-mcp",
    "name": "io.github.meloncafe/chromadb-remote-mcp",
    "description": "Remote ChromaDB vector database MCP server with streamable HTTP transport",
    "category": "database",
    "version": "1.0.1",
    "author": "io.github.meloncafe",
    "repository": "https://github.com/meloncafe/chromadb-remote-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull devsaurus/chromadb-remote-mcp:latest",
    "documentationUrl": "https://github.com/meloncafe/chromadb-remote-mcp#readme",
    "homepage": "https://github.com/meloncafe/chromadb-remote-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.meloncafe/chromadb-remote-mcp",
      "description": "Remote ChromaDB vector database MCP server with streamable HTTP transport",
      "title": "ChromaDB Remote MCP Server",
      "repository": {
        "url": "https://github.com/meloncafe/chromadb-remote-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "devsaurus/chromadb-remote-mcp:latest",
          "runtimeHint": "docker",
          "transport": {
            "type": "streamable-http",
            "url": "https://meloncafe.github.io/chromadb-remote-mcp/mcp"
          },
          "runtimeArguments": [
            {
              "value": "8080:8080",
              "type": "named",
              "name": "-p"
            },
            {
              "value": "MCP_AUTH_TOKEN={MCP_AUTH_TOKEN}",
              "type": "named",
              "name": "-e"
            }
          ],
          "environmentVariables": [
            {
              "description": "URL of your deployed ChromaDB Remote MCP server",
              "isRequired": true,
              "placeholder": "https://your-server.example.com/mcp",
              "name": "CHROMADB_MCP_URL"
            },
            {
              "description": "Authentication token for the MCP server (if enabled)",
              "isSecret": true,
              "name": "MCP_AUTH_TOKEN"
            }
          ]
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://meloncafe.github.io/chromadb-remote-mcp/mcp"
        }
      ]
    }
  },
  {
    "id": "io.github.mfukushim-map-traveler-mcp",
    "name": "io.github.mfukushim/map-traveler-mcp",
    "description": "Virtual traveler library for MCP",
    "category": "version-control",
    "version": "0.1.4",
    "author": "io.github.mfukushim",
    "repository": "https://github.com/mfukushim/map-traveler-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @mfukushim/map-traveler-mcp",
    "documentationUrl": "https://github.com/mfukushim/map-traveler-mcp#readme",
    "homepage": "https://github.com/mfukushim/map-traveler-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.mfukushim/map-traveler-mcp",
      "description": "Virtual traveler library for MCP",
      "repository": {
        "url": "https://github.com/mfukushim/map-traveler-mcp",
        "source": "github"
      },
      "version": "0.1.4",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@mfukushim/map-traveler-mcp",
          "version": "0.1.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "[Map] Google Map API key",
              "format": "string",
              "isSecret": true,
              "name": "MT_GOOGLE_MAP_KEY"
            },
            {
              "description": "[Image.gemini] Gemini Image Api key",
              "format": "string",
              "isSecret": true,
              "name": "MT_GEMINI_IMAGE_KEY"
            },
            {
              "description": "[Image.gemini] Number of retries when generating Gemini images Default: 0",
              "format": "string",
              "name": "MT_MAX_RETRY_GEMINI"
            },
            {
              "description": "[Image.gemini] Character reference image uri (file:// or https://) when generating Gemini image. Multiple settings can be made by separating them with the '|'. When multiple settings are made, they will be selected randomly.",
              "format": "string",
              "name": "MT_AVATAR_IMAGE_URI"
            },
            {
              "description": "[Map.etc] Optional: Map API custom endpoint. Example: direction=https://xxxx,places=https://yyyy ",
              "format": "string",
              "name": "MT_MAP_API_URL"
            },
            {
              "description": "[Map] Optional:Scale of travel time on real roads duration. default 4",
              "format": "string",
              "name": "MT_TIME_SCALE"
            },
            {
              "description": "[db.local] db save path: e.g. %USERPROFILE%/Desktop/traveler.sqlite ,$HOME/traveler.sqlite ",
              "format": "string",
              "name": "MT_SQLITE_PATH"
            },
            {
              "description": "[db.api] Turso sqlite API URL",
              "format": "string",
              "name": "MT_TURSO_URL"
            },
            {
              "description": "[db.api] Turso sqlite API access token",
              "format": "string",
              "isSecret": true,
              "name": "MT_TURSO_TOKEN"
            },
            {
              "description": "[rembg.local] absolute path of the installed rembg cli",
              "format": "string",
              "name": "MT_REMBG_PATH"
            },
            {
              "description": "[rembg.api] withoutbg.com rembg API URL",
              "format": "string",
              "name": "MT_REMBG_URL"
            },
            {
              "description": "[rembg.api] withoutbg.com rembg API key",
              "format": "string",
              "isSecret": true,
              "name": "MT_REMBG_WO_KEY"
            },
            {
              "description": "[Image.pixAi] pixAi API key",
              "format": "string",
              "isSecret": true,
              "name": "MT_PIXAI_KEY"
            },
            {
              "description": "[Image.sd] Stability.ai image generation API key",
              "format": "string",
              "isSecret": true,
              "name": "MT_SD_KEY"
            },
            {
              "description": "[Image.pixAi] Optional: pixAi ModelId, if not set use default model 1648918127446573124 ",
              "format": "string",
              "name": "MT_PIXAI_MODEL_ID"
            },
            {
              "description": "[Image.local.ComfyUi] Option: Generate image using ComfyUI API at specified URL. Example: http://192.168.1.100:8188",
              "format": "string",
              "name": "MT_COMFY_URL"
            },
            {
              "description": "[Image.local.ComfyUi] Optional: Path to API workflow file when using text to image with ComfyUI. If not specified: assets/comfy/t2i_sample.json",
              "format": "string",
              "name": "MT_COMFY_WORKFLOW_T2I"
            },
            {
              "description": "[Image.local.ComfyUi] Optional: Path of API workflow file when image to image in ComfyUI. If not specified: assets/comfy/i2i_sample.json",
              "format": "string",
              "name": "MT_COMFY_WORKFLOW_I2I"
            },
            {
              "description": "[Image.local.ComfyUi] Optional: Variable values to send to the workflow via comfyUI API",
              "format": "string",
              "name": "MT_COMFY_PARAMS"
            },
            {
              "description": "[Image] Optional: Fixed avatar generation prompt. You will no longer be able to change your avatar during conversations.",
              "format": "string",
              "name": "MT_FIXED_MODEL_PROMPT"
            },
            {
              "description": "[Image] Optional: Acceptable avatar image area ratio. default 0.042",
              "format": "string",
              "name": "MT_BODY_AREA_RATIO"
            },
            {
              "description": "[Image] Optional: Acceptable avatar image aspect ratios. default 1.5~2.3",
              "format": "string",
              "name": "MT_BODY_HW_RATIO"
            },
            {
              "description": "[Image] Optional: Avatar composite window horizontal ratio. default 0.5",
              "format": "string",
              "name": "MT_BODY_WINDOW_RATIO_W"
            },
            {
              "description": "[Image] Optional: Avatar composite window aspect ratio. default 0.75",
              "format": "string",
              "name": "MT_BODY_WINDOW_RATIO_H"
            },
            {
              "description": "[Sns.Bs] Bluesky sns registration address",
              "format": "string",
              "name": "MT_BS_ID"
            },
            {
              "description": "[Sns.Bs] bluesky sns password",
              "format": "string",
              "isSecret": true,
              "name": "MT_BS_PASS"
            },
            {
              "description": "[Sns.Bs] bluesky sns handle name: e.g. xxxxxxxx.bsky.social ",
              "format": "string",
              "name": "MT_BS_HANDLE"
            },
            {
              "description": "[etc] Optional: Directly filter the tools to be used. All are available if not specified. e.g. tips,set_traveler_location",
              "format": "string",
              "name": "MT_FILTER_TOOLS"
            },
            {
              "description": "[etc] Option: Specify whether the movement mode is 'realtime' or 'skip'. default realtime",
              "format": "string",
              "name": "MT_MOVE_MODE"
            },
            {
              "description": "[Image] Option: Output image width (pixels) Default is 512",
              "format": "string",
              "name": "MT_IMAGE_WIDTH"
            },
            {
              "description": "[Image] Options: 'true' = do not output image, not specified = output image if possible, default is not specified",
              "format": "string",
              "name": "MT_NO_IMAGE"
            },
            {
              "description": "[Image] Option: 'true' = Output StreetView image as is without avatar superimposition. Not specified = Superimpose avatar image. Default is not specified.",
              "format": "string",
              "name": "MT_NO_AVATAR"
            },
            {
              "description": "[Sns] Optional: Specify the feed tag when posting to SNS (#required, 15 characters or more) Default is #geo_less_traveler",
              "format": "string",
              "name": "MT_FEED_TAG"
            },
            {
              "description": "[Streamable-http] Maximum number of sessions when using Streamable-http",
              "format": "string",
              "name": "MT_MAX_SESSIONS"
            },
            {
              "description": "[Streamable-http] Session TTL when using Streamable-http",
              "format": "string",
              "name": "MT_SESSION_TTL_MS"
            },
            {
              "description": "[Streamable-http] Service TTL when using Streamable-http",
              "format": "string",
              "name": "MT_SERVICE_TTL_MS"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.mickymultani-crypto-bytes",
    "name": "io.github.mickymultani/crypto-bytes",
    "description": "Crypto Bytes MCP Server",
    "category": "version-control",
    "version": "0.1.1",
    "author": "io.github.mickymultani",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install crypto_bytes_mcp_server",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.mickymultani/crypto-bytes",
      "description": "Crypto Bytes MCP Server",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "crypto_bytes_mcp_server",
          "version": "0.1.1",
          "runtimeHint": "python",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "value": "-m",
              "type": "positional"
            },
            {
              "value": "crypto_bytes_mcp_server",
              "type": "positional"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.mobile-next-mobile-mcp",
    "name": "io.github.mobile-next/mobile-mcp",
    "description": "MCP server for iOS and Android Mobile Development, Automation and Testing",
    "category": "version-control",
    "version": "0.0.31",
    "author": "io.github.mobile-next",
    "repository": "https://github.com/mobile-next/mobile-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @mobilenext/mobile-mcp",
    "documentationUrl": "https://github.com/mobile-next/mobile-mcp#readme",
    "homepage": "https://github.com/mobile-next/mobile-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.mobile-next/mobile-mcp",
      "description": "MCP server for iOS and Android Mobile Development, Automation and Testing",
      "repository": {
        "url": "https://github.com/mobile-next/mobile-mcp",
        "source": "github"
      },
      "version": "0.0.31",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@mobilenext/mobile-mcp",
          "version": "0.0.31",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "name": ""
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.mongodb-js-mongodb-mcp-server",
    "name": "io.github.mongodb-js/mongodb-mcp-server",
    "description": "MongoDB Model Context Protocol Server",
    "category": "version-control",
    "version": "1.2.0",
    "author": "io.github.mongodb-js",
    "repository": "https://github.com/mongodb-js/mongodb-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mongodb-mcp-server",
    "documentationUrl": "https://github.com/mongodb-js/mongodb-mcp-server#readme",
    "homepage": "https://github.com/mongodb-js/mongodb-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.mongodb-js/mongodb-mcp-server",
      "description": "MongoDB Model Context Protocol Server",
      "repository": {
        "url": "https://github.com/mongodb-js/mongodb-mcp-server",
        "source": "github"
      },
      "version": "1.2.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "mongodb-mcp-server",
          "version": "1.2.0",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Atlas API client ID for authentication. Required for running Atlas tools.",
              "type": "named",
              "name": "--apiClientId"
            },
            {
              "description": "Atlas API client secret for authentication. Required for running Atlas tools.",
              "type": "named",
              "name": "--apiClientSecret"
            },
            {
              "description": "Time in milliseconds that temporary database users created when connecting to MongoDB Atlas clusters will remain active before being automatically deleted.",
              "type": "named",
              "name": "--atlasTemporaryDatabaseUserLifetimeMs"
            },
            {
              "description": "An array of tool names that require user confirmation before execution. Requires the client to support elicitation.",
              "type": "named",
              "name": "--confirmationRequiredTools"
            },
            {
              "description": "MongoDB connection string for direct database connections. Optional, if not set, you'll need to call the connect tool before interacting with MongoDB data.",
              "type": "named",
              "name": "--connectionString"
            },
            {
              "description": "When set to true, disables validation of embeddings dimensions.",
              "format": "boolean",
              "type": "named",
              "name": "--disableEmbeddingsValidation"
            },
            {
              "description": "An array of tool names, operation types, and/or categories of tools that will be disabled.",
              "type": "named",
              "name": "--disabledTools"
            },
            {
              "description": "Time in milliseconds between export cleanup cycles that remove expired export files.",
              "type": "named",
              "name": "--exportCleanupIntervalMs"
            },
            {
              "description": "Time in milliseconds after which an export is considered expired and eligible for cleanup.",
              "type": "named",
              "name": "--exportTimeoutMs"
            },
            {
              "description": "Folder to store exported data files.",
              "type": "named",
              "name": "--exportsPath"
            },
            {
              "description": "Host address to bind the HTTP server to (only used when transport is 'http').",
              "type": "named",
              "name": "--httpHost"
            },
            {
              "description": "Port number for the HTTP server (only used when transport is 'http').",
              "type": "named",
              "name": "--httpPort"
            },
            {
              "description": "Idle timeout for a client to disconnect (only applies to http transport).",
              "type": "named",
              "name": "--idleTimeoutMs"
            },
            {
              "description": "When set to true, enforces that query operations must use an index, rejecting queries that perform a collection scan.",
              "format": "boolean",
              "type": "named",
              "name": "--indexCheck"
            },
            {
              "description": "Folder to store logs.",
              "type": "named",
              "name": "--logPath"
            },
            {
              "description": "Comma separated values, possible values are 'mcp', 'disk' and 'stderr'.",
              "type": "named",
              "name": "--loggers"
            },
            {
              "description": "The maximum size in bytes for results from a find or aggregate tool call. This serves as an upper bound for the responseBytesLimit parameter in those tools.",
              "format": "number",
              "type": "named",
              "name": "--maxBytesPerQuery"
            },
            {
              "description": "The maximum number of documents that can be returned by a find or aggregate tool call. For the find tool, the effective limit will be the smaller of this value and the tool's limit parameter.",
              "format": "number",
              "type": "named",
              "name": "--maxDocumentsPerQuery"
            },
            {
              "description": "Notification timeout for a client to be aware of disconnect (only applies to http transport).",
              "type": "named",
              "name": "--notificationTimeoutMs"
            },
            {
              "description": "When set to true, only allows read, connect, and metadata operation types, disabling create/update/delete operations.",
              "format": "boolean",
              "type": "named",
              "name": "--readOnly"
            },
            {
              "description": "When set to disabled, disables telemetry collection.",
              "type": "named",
              "name": "--telemetry"
            },
            {
              "description": "Either 'stdio' or 'http'.",
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "API key for Voyage AI embeddings service (required for vector search operations with text-to-embedding conversion).",
              "type": "named",
              "name": "--voyageApiKey"
            }
          ],
          "environmentVariables": [
            {
              "description": "Atlas API client ID for authentication. Required for running Atlas tools.",
              "format": "string",
              "isSecret": true,
              "name": "MDB_MCP_API_CLIENT_ID"
            },
            {
              "description": "Atlas API client secret for authentication. Required for running Atlas tools.",
              "format": "string",
              "isSecret": true,
              "name": "MDB_MCP_API_CLIENT_SECRET"
            },
            {
              "description": "Time in milliseconds that temporary database users created when connecting to MongoDB Atlas clusters will remain active before being automatically deleted.",
              "format": "string",
              "name": "MDB_MCP_ATLAS_TEMPORARY_DATABASE_USER_LIFETIME_MS"
            },
            {
              "description": "An array of tool names that require user confirmation before execution. Requires the client to support elicitation.",
              "format": "string",
              "name": "MDB_MCP_CONFIRMATION_REQUIRED_TOOLS"
            },
            {
              "description": "MongoDB connection string for direct database connections. Optional, if not set, you'll need to call the connect tool before interacting with MongoDB data.",
              "format": "string",
              "isSecret": true,
              "name": "MDB_MCP_CONNECTION_STRING"
            },
            {
              "description": "When set to true, disables validation of embeddings dimensions.",
              "format": "boolean",
              "name": "MDB_MCP_DISABLE_EMBEDDINGS_VALIDATION"
            },
            {
              "description": "An array of tool names, operation types, and/or categories of tools that will be disabled.",
              "format": "string",
              "name": "MDB_MCP_DISABLED_TOOLS"
            },
            {
              "description": "Time in milliseconds between export cleanup cycles that remove expired export files.",
              "format": "string",
              "name": "MDB_MCP_EXPORT_CLEANUP_INTERVAL_MS"
            },
            {
              "description": "Time in milliseconds after which an export is considered expired and eligible for cleanup.",
              "format": "string",
              "name": "MDB_MCP_EXPORT_TIMEOUT_MS"
            },
            {
              "description": "Folder to store exported data files.",
              "format": "string",
              "name": "MDB_MCP_EXPORTS_PATH"
            },
            {
              "description": "Host address to bind the HTTP server to (only used when transport is 'http').",
              "format": "string",
              "name": "MDB_MCP_HTTP_HOST"
            },
            {
              "description": "Port number for the HTTP server (only used when transport is 'http').",
              "format": "string",
              "name": "MDB_MCP_HTTP_PORT"
            },
            {
              "description": "Idle timeout for a client to disconnect (only applies to http transport).",
              "format": "string",
              "name": "MDB_MCP_IDLE_TIMEOUT_MS"
            },
            {
              "description": "When set to true, enforces that query operations must use an index, rejecting queries that perform a collection scan.",
              "format": "boolean",
              "name": "MDB_MCP_INDEX_CHECK"
            },
            {
              "description": "Folder to store logs.",
              "format": "string",
              "name": "MDB_MCP_LOG_PATH"
            },
            {
              "description": "Comma separated values, possible values are 'mcp', 'disk' and 'stderr'.",
              "format": "string",
              "name": "MDB_MCP_LOGGERS"
            },
            {
              "description": "The maximum size in bytes for results from a find or aggregate tool call. This serves as an upper bound for the responseBytesLimit parameter in those tools.",
              "format": "number",
              "name": "MDB_MCP_MAX_BYTES_PER_QUERY"
            },
            {
              "description": "The maximum number of documents that can be returned by a find or aggregate tool call. For the find tool, the effective limit will be the smaller of this value and the tool's limit parameter.",
              "format": "number",
              "name": "MDB_MCP_MAX_DOCUMENTS_PER_QUERY"
            },
            {
              "description": "Notification timeout for a client to be aware of disconnect (only applies to http transport).",
              "format": "string",
              "name": "MDB_MCP_NOTIFICATION_TIMEOUT_MS"
            },
            {
              "description": "When set to true, only allows read, connect, and metadata operation types, disabling create/update/delete operations.",
              "format": "boolean",
              "name": "MDB_MCP_READ_ONLY"
            },
            {
              "description": "When set to disabled, disables telemetry collection.",
              "format": "string",
              "name": "MDB_MCP_TELEMETRY"
            },
            {
              "description": "Either 'stdio' or 'http'.",
              "format": "string",
              "name": "MDB_MCP_TRANSPORT"
            },
            {
              "description": "API key for Voyage AI embeddings service (required for vector search operations with text-to-embedding conversion).",
              "format": "string",
              "isSecret": true,
              "name": "MDB_MCP_VOYAGE_API_KEY"
            }
          ]
        },
        {
          "registryType": "oci",
          "identifier": "docker.io/mongodb/mongodb-mcp-server:1.2.0",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Atlas API client ID for authentication. Required for running Atlas tools.",
              "type": "named",
              "name": "--apiClientId"
            },
            {
              "description": "Atlas API client secret for authentication. Required for running Atlas tools.",
              "type": "named",
              "name": "--apiClientSecret"
            },
            {
              "description": "Time in milliseconds that temporary database users created when connecting to MongoDB Atlas clusters will remain active before being automatically deleted.",
              "type": "named",
              "name": "--atlasTemporaryDatabaseUserLifetimeMs"
            },
            {
              "description": "An array of tool names that require user confirmation before execution. Requires the client to support elicitation.",
              "type": "named",
              "name": "--confirmationRequiredTools"
            },
            {
              "description": "MongoDB connection string for direct database connections. Optional, if not set, you'll need to call the connect tool before interacting with MongoDB data.",
              "type": "named",
              "name": "--connectionString"
            },
            {
              "description": "When set to true, disables validation of embeddings dimensions.",
              "format": "boolean",
              "type": "named",
              "name": "--disableEmbeddingsValidation"
            },
            {
              "description": "An array of tool names, operation types, and/or categories of tools that will be disabled.",
              "type": "named",
              "name": "--disabledTools"
            },
            {
              "description": "Time in milliseconds between export cleanup cycles that remove expired export files.",
              "type": "named",
              "name": "--exportCleanupIntervalMs"
            },
            {
              "description": "Time in milliseconds after which an export is considered expired and eligible for cleanup.",
              "type": "named",
              "name": "--exportTimeoutMs"
            },
            {
              "description": "Folder to store exported data files.",
              "type": "named",
              "name": "--exportsPath"
            },
            {
              "description": "Host address to bind the HTTP server to (only used when transport is 'http').",
              "type": "named",
              "name": "--httpHost"
            },
            {
              "description": "Port number for the HTTP server (only used when transport is 'http').",
              "type": "named",
              "name": "--httpPort"
            },
            {
              "description": "Idle timeout for a client to disconnect (only applies to http transport).",
              "type": "named",
              "name": "--idleTimeoutMs"
            },
            {
              "description": "When set to true, enforces that query operations must use an index, rejecting queries that perform a collection scan.",
              "format": "boolean",
              "type": "named",
              "name": "--indexCheck"
            },
            {
              "description": "Folder to store logs.",
              "type": "named",
              "name": "--logPath"
            },
            {
              "description": "Comma separated values, possible values are 'mcp', 'disk' and 'stderr'.",
              "type": "named",
              "name": "--loggers"
            },
            {
              "description": "The maximum size in bytes for results from a find or aggregate tool call. This serves as an upper bound for the responseBytesLimit parameter in those tools.",
              "format": "number",
              "type": "named",
              "name": "--maxBytesPerQuery"
            },
            {
              "description": "The maximum number of documents that can be returned by a find or aggregate tool call. For the find tool, the effective limit will be the smaller of this value and the tool's limit parameter.",
              "format": "number",
              "type": "named",
              "name": "--maxDocumentsPerQuery"
            },
            {
              "description": "Notification timeout for a client to be aware of disconnect (only applies to http transport).",
              "type": "named",
              "name": "--notificationTimeoutMs"
            },
            {
              "description": "When set to true, only allows read, connect, and metadata operation types, disabling create/update/delete operations.",
              "format": "boolean",
              "type": "named",
              "name": "--readOnly"
            },
            {
              "description": "When set to disabled, disables telemetry collection.",
              "type": "named",
              "name": "--telemetry"
            },
            {
              "description": "Either 'stdio' or 'http'.",
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "API key for Voyage AI embeddings service (required for vector search operations with text-to-embedding conversion).",
              "type": "named",
              "name": "--voyageApiKey"
            }
          ],
          "environmentVariables": [
            {
              "description": "Atlas API client ID for authentication. Required for running Atlas tools.",
              "format": "string",
              "isSecret": true,
              "name": "MDB_MCP_API_CLIENT_ID"
            },
            {
              "description": "Atlas API client secret for authentication. Required for running Atlas tools.",
              "format": "string",
              "isSecret": true,
              "name": "MDB_MCP_API_CLIENT_SECRET"
            },
            {
              "description": "Time in milliseconds that temporary database users created when connecting to MongoDB Atlas clusters will remain active before being automatically deleted.",
              "format": "string",
              "name": "MDB_MCP_ATLAS_TEMPORARY_DATABASE_USER_LIFETIME_MS"
            },
            {
              "description": "An array of tool names that require user confirmation before execution. Requires the client to support elicitation.",
              "format": "string",
              "name": "MDB_MCP_CONFIRMATION_REQUIRED_TOOLS"
            },
            {
              "description": "MongoDB connection string for direct database connections. Optional, if not set, you'll need to call the connect tool before interacting with MongoDB data.",
              "format": "string",
              "isSecret": true,
              "name": "MDB_MCP_CONNECTION_STRING"
            },
            {
              "description": "When set to true, disables validation of embeddings dimensions.",
              "format": "boolean",
              "name": "MDB_MCP_DISABLE_EMBEDDINGS_VALIDATION"
            },
            {
              "description": "An array of tool names, operation types, and/or categories of tools that will be disabled.",
              "format": "string",
              "name": "MDB_MCP_DISABLED_TOOLS"
            },
            {
              "description": "Time in milliseconds between export cleanup cycles that remove expired export files.",
              "format": "string",
              "name": "MDB_MCP_EXPORT_CLEANUP_INTERVAL_MS"
            },
            {
              "description": "Time in milliseconds after which an export is considered expired and eligible for cleanup.",
              "format": "string",
              "name": "MDB_MCP_EXPORT_TIMEOUT_MS"
            },
            {
              "description": "Folder to store exported data files.",
              "format": "string",
              "name": "MDB_MCP_EXPORTS_PATH"
            },
            {
              "description": "Host address to bind the HTTP server to (only used when transport is 'http').",
              "format": "string",
              "name": "MDB_MCP_HTTP_HOST"
            },
            {
              "description": "Port number for the HTTP server (only used when transport is 'http').",
              "format": "string",
              "name": "MDB_MCP_HTTP_PORT"
            },
            {
              "description": "Idle timeout for a client to disconnect (only applies to http transport).",
              "format": "string",
              "name": "MDB_MCP_IDLE_TIMEOUT_MS"
            },
            {
              "description": "When set to true, enforces that query operations must use an index, rejecting queries that perform a collection scan.",
              "format": "boolean",
              "name": "MDB_MCP_INDEX_CHECK"
            },
            {
              "description": "Folder to store logs.",
              "format": "string",
              "name": "MDB_MCP_LOG_PATH"
            },
            {
              "description": "Comma separated values, possible values are 'mcp', 'disk' and 'stderr'.",
              "format": "string",
              "name": "MDB_MCP_LOGGERS"
            },
            {
              "description": "The maximum size in bytes for results from a find or aggregate tool call. This serves as an upper bound for the responseBytesLimit parameter in those tools.",
              "format": "number",
              "name": "MDB_MCP_MAX_BYTES_PER_QUERY"
            },
            {
              "description": "The maximum number of documents that can be returned by a find or aggregate tool call. For the find tool, the effective limit will be the smaller of this value and the tool's limit parameter.",
              "format": "number",
              "name": "MDB_MCP_MAX_DOCUMENTS_PER_QUERY"
            },
            {
              "description": "Notification timeout for a client to be aware of disconnect (only applies to http transport).",
              "format": "string",
              "name": "MDB_MCP_NOTIFICATION_TIMEOUT_MS"
            },
            {
              "description": "When set to true, only allows read, connect, and metadata operation types, disabling create/update/delete operations.",
              "format": "boolean",
              "name": "MDB_MCP_READ_ONLY"
            },
            {
              "description": "When set to disabled, disables telemetry collection.",
              "format": "string",
              "name": "MDB_MCP_TELEMETRY"
            },
            {
              "description": "Either 'stdio' or 'http'.",
              "format": "string",
              "name": "MDB_MCP_TRANSPORT"
            },
            {
              "description": "API key for Voyage AI embeddings service (required for vector search operations with text-to-embedding conversion).",
              "format": "string",
              "isSecret": true,
              "name": "MDB_MCP_VOYAGE_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.moonolgerd-game-mcp",
    "name": "io.github.moonolgerd/game-mcp",
    "description": "Discovers and manages installed games on Windows from Steam, Epic, GOG, Xbox, and other platforms.",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.moonolgerd",
    "repository": "https://github.com/moonolgerd/game-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/moonolgerd/game-mcp#readme",
    "homepage": "https://github.com/moonolgerd/game-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.moonolgerd/game-mcp",
      "description": "Discovers and manages installed games on Windows from Steam, Epic, GOG, Xbox, and other platforms.",
      "repository": {
        "url": "https://github.com/moonolgerd/game-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "nuget",
          "registryBaseUrl": "https://api.nuget.org",
          "identifier": "GameMcpServer",
          "version": "1.0.0",
          "runtimeHint": "dnx",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.morinokami-astro-mcp",
    "name": "io.github.morinokami/astro-mcp",
    "description": "MCP server to support Astro project development",
    "category": "version-control",
    "version": "0.4.2",
    "author": "io.github.morinokami",
    "repository": "https://github.com/morinokami/astro-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install astro-mcp",
    "documentationUrl": "https://github.com/morinokami/astro-mcp#readme",
    "homepage": "https://github.com/morinokami/astro-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.morinokami/astro-mcp",
      "description": "MCP server to support Astro project development",
      "repository": {
        "url": "https://github.com/morinokami/astro-mcp",
        "source": "github"
      },
      "version": "0.4.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "astro-mcp",
          "version": "0.4.2",
          "transport": {
            "type": "sse",
            "url": "http://localhost:4321/__mcp/sse"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.motherduckdb-mcp-server-motherduck",
    "name": "io.github.motherduckdb/mcp-server-motherduck",
    "description": "Fast analytics and data processing with DuckDB and MotherDuck",
    "category": "version-control",
    "version": "0.7.2",
    "author": "io.github.motherduckdb",
    "repository": "https://github.com/motherduckdb/mcp-server-motherduck",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-server-motherduck",
    "documentationUrl": "https://github.com/motherduckdb/mcp-server-motherduck#readme",
    "homepage": "https://github.com/motherduckdb/mcp-server-motherduck",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.motherduckdb/mcp-server-motherduck",
      "description": "Fast analytics and data processing with DuckDB and MotherDuck",
      "repository": {
        "url": "https://github.com/motherduckdb/mcp-server-motherduck",
        "source": "github"
      },
      "version": "0.7.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-server-motherduck",
          "version": "0.7.2",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Transport type for MCP server",
              "default": "stdio",
              "choices": [
                "stdio",
                "sse",
                "stream"
              ],
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "Port to listen on for sse and stream transport mode",
              "format": "number",
              "default": "8000",
              "type": "named",
              "name": "--port"
            },
            {
              "description": "Path to local DuckDB database file or MotherDuck database",
              "default": "md:",
              "type": "named",
              "name": "--db-path"
            },
            {
              "description": "Access token to use for MotherDuck database connections",
              "isSecret": true,
              "type": "named",
              "name": "--motherduck-token"
            },
            {
              "description": "Flag for connecting to DuckDB or MotherDuck in read-only mode",
              "type": "named",
              "name": "--read-only"
            },
            {
              "description": "Home directory for DuckDB",
              "type": "named",
              "name": "--home-dir"
            },
            {
              "description": "Flag for connecting to MotherDuck in SaaS mode (disables filesystem and write permissions for local DuckDB)",
              "type": "named",
              "name": "--saas-mode"
            },
            {
              "description": "Enable JSON responses for HTTP stream (only supported for stream transport)",
              "type": "named",
              "name": "--json-response"
            }
          ],
          "environmentVariables": [
            {
              "description": "Access token to use for MotherDuck database connections",
              "isSecret": true,
              "name": "motherduck_token"
            },
            {
              "description": "Home directory for DuckDB (used as default if --home-dir not specified)",
              "name": "HOME"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.msenol-gorev",
    "name": "io.github.msenol/gorev",
    "description": "Task management system for AI assistants with MCP protocol, templates, and bilingual support (TR/EN)",
    "category": "version-control",
    "version": "0.16.1",
    "author": "io.github.msenol",
    "repository": "https://github.com/msenol/Gorev",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @mehmetsenol/gorev-mcp-server",
    "documentationUrl": "https://github.com/msenol/Gorev#readme",
    "homepage": "https://github.com/msenol/Gorev",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.msenol/gorev",
      "description": "Task management system for AI assistants with MCP protocol, templates, and bilingual support (TR/EN)",
      "repository": {
        "url": "https://github.com/msenol/Gorev",
        "source": "github",
        "id": "msenol/Gorev"
      },
      "version": "0.16.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@mehmetsenol/gorev-mcp-server",
          "version": "0.16.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Language preference (en for English, tr for Turkish)",
              "name": "GOREV_LANG"
            },
            {
              "description": "Directory for storing Gorev database and data files",
              "name": "GOREV_DATA_DIR"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.nailuoGG-anki-mcp-server",
    "name": "io.github.nailuoGG/anki-mcp-server",
    "description": "MCP server enabling LLMs to interact with Anki flashcard software through AnkiConnect",
    "category": "version-control",
    "version": "0.1.8",
    "author": "io.github.nailuoGG",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install anki-mcp-server",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.nailuoGG/anki-mcp-server",
      "description": "MCP server enabling LLMs to interact with Anki flashcard software through AnkiConnect",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.8",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "anki-mcp-server",
          "version": "0.1.8",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.nathishdev-netizen-dida-mcp-server",
    "name": "io.github.nathishdev-netizen/dida-mcp-server",
    "description": "Hotel search, booking, and review MCP server with 12+ detailed fields per hotel",
    "category": "version-control",
    "version": "1.0.2",
    "author": "io.github.nathishdev-netizen",
    "repository": "https://github.com/nathishdev-netizen/dida-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install dida-mcp-server",
    "documentationUrl": "https://github.com/nathishdev-netizen/dida-mcp-server#readme",
    "homepage": "https://github.com/nathishdev-netizen/dida-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.nathishdev-netizen/dida-mcp-server",
      "description": "Hotel search, booking, and review MCP server with 12+ detailed fields per hotel",
      "repository": {
        "url": "https://github.com/nathishdev-netizen/dida-mcp-server",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "dida-mcp-server",
          "version": "1.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.nerfels-mind-map",
    "name": "io.github.nerfels/mind-map",
    "description": "Experimental code intelligence platform for Claude Code with AST parsing and context analysis",
    "category": "version-control",
    "version": "1.12.13",
    "author": "io.github.nerfels",
    "repository": "https://github.com/nerfels/mind-map",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mind-map-mcp",
    "documentationUrl": "https://github.com/nerfels/mind-map#readme",
    "homepage": "https://github.com/nerfels/mind-map",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.nerfels/mind-map",
      "description": "Experimental code intelligence platform for Claude Code with AST parsing and context analysis",
      "repository": {
        "url": "https://github.com/nerfels/mind-map",
        "source": "github"
      },
      "version": "1.12.13",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mind-map-mcp",
          "version": "1.12.13",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Project root directory for MCP to analyze (optional - uses current working directory if not specified)",
              "format": "string",
              "name": "MCP_PROJECT_ROOT"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.nesquikm-rubber-duck",
    "name": "io.github.nesquikm/rubber-duck",
    "description": "An MCP server that bridges to multiple OpenAI-compatible LLMs - your AI rubber duck debugging panel",
    "category": "version-control",
    "version": "1.1.1",
    "author": "io.github.nesquikm",
    "repository": "https://github.com/nesquikm/mcp-rubber-duck",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-rubber-duck",
    "documentationUrl": "https://github.com/nesquikm/mcp-rubber-duck#readme",
    "homepage": "https://github.com/nesquikm/mcp-rubber-duck",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.nesquikm/rubber-duck",
      "description": "An MCP server that bridges to multiple OpenAI-compatible LLMs - your AI rubber duck debugging panel",
      "repository": {
        "url": "https://github.com/nesquikm/mcp-rubber-duck",
        "source": "github"
      },
      "version": "1.1.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-rubber-duck",
          "version": "1.1.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "OpenAI API key (starts with sk-)",
              "format": "string",
              "isSecret": true,
              "name": "OPENAI_API_KEY"
            },
            {
              "description": "Google Gemini API key",
              "format": "string",
              "isSecret": true,
              "name": "GEMINI_API_KEY"
            },
            {
              "description": "Groq API key (starts with gsk_)",
              "format": "string",
              "isSecret": true,
              "name": "GROQ_API_KEY"
            },
            {
              "description": "Default LLM provider to use",
              "format": "string",
              "name": "DEFAULT_PROVIDER"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.netdata-mcp-server",
    "name": "io.github.netdata/mcp-server",
    "description": "AI-powered infrastructure monitoring with real-time metrics, logs, alerts, and ML anomaly detection.",
    "category": "version-control",
    "version": "2.7.1",
    "author": "io.github.netdata",
    "repository": "https://github.com/netdata/netdata",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/netdata/netdata#readme",
    "homepage": "https://github.com/netdata/netdata",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.netdata/mcp-server",
      "description": "AI-powered infrastructure monitoring with real-time metrics, logs, alerts, and ML anomaly detection.",
      "repository": {
        "url": "https://github.com/netdata/netdata",
        "source": "github",
        "subfolder": "docs/netdata-ai/mcp"
      },
      "version": "2.7.1"
    }
  },
  {
    "id": "io.github.neverinfamous-memory-journal-mcp",
    "name": "io.github.neverinfamous/memory-journal-mcp",
    "description": "Developer journal with knowledge graphs, relationships, Git context, and semantic search",
    "category": "version-control",
    "version": "1.1.3",
    "author": "io.github.neverinfamous",
    "repository": "https://github.com/neverinfamous/memory-journal-mcp.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/writenotenow/memory-journal-mcp:v1.1.3",
    "documentationUrl": "https://github.com/neverinfamous/memory-journal-mcp.git#readme",
    "homepage": "https://github.com/neverinfamous/memory-journal-mcp.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.neverinfamous/memory-journal-mcp",
      "description": "Developer journal with knowledge graphs, relationships, Git context, and semantic search",
      "repository": {
        "url": "https://github.com/neverinfamous/memory-journal-mcp.git",
        "source": "github"
      },
      "version": "1.1.3",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/writenotenow/memory-journal-mcp:v1.1.3",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.neverinfamous-postgres-mcp-server",
    "name": "io.github.neverinfamous/postgres-mcp-server",
    "description": "Enterprise PostgreSQL MCP server with 63 tools, 10 resources, 10 prompts for AI-native operations",
    "category": "database",
    "version": "1.1.1",
    "author": "io.github.neverinfamous",
    "repository": "https://github.com/neverinfamous/postgres-mcp.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/writenotenow/postgres-mcp-enhanced:v1.1.1",
    "documentationUrl": "https://github.com/neverinfamous/postgres-mcp.git#readme",
    "homepage": "https://github.com/neverinfamous/postgres-mcp.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.neverinfamous/postgres-mcp-server",
      "description": "Enterprise PostgreSQL MCP server with 63 tools, 10 resources, 10 prompts for AI-native operations",
      "repository": {
        "url": "https://github.com/neverinfamous/postgres-mcp.git",
        "source": "github"
      },
      "version": "1.1.1",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/writenotenow/postgres-mcp-enhanced:v1.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.neverinfamous-sqlite-mcp-server",
    "name": "io.github.neverinfamous/sqlite-mcp-server",
    "description": "SQLite MCP server with 73 tools for JSONB, full-text search, geospatial, and analytics.",
    "category": "database",
    "version": "2.6.3",
    "author": "io.github.neverinfamous",
    "repository": "https://github.com/neverinfamous/sqlite-mcp-server.git",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install sqlite-mcp-server-enhanced",
    "documentationUrl": "https://github.com/neverinfamous/sqlite-mcp-server.git#readme",
    "homepage": "https://github.com/neverinfamous/sqlite-mcp-server.git",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.neverinfamous/sqlite-mcp-server",
      "description": "SQLite MCP server with 73 tools for JSONB, full-text search, geospatial, and analytics.",
      "repository": {
        "url": "https://github.com/neverinfamous/sqlite-mcp-server.git",
        "source": "github"
      },
      "version": "2.6.3",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "sqlite-mcp-server-enhanced",
          "version": "2.6.3",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "oci",
          "identifier": "docker.io/writenotenow/sqlite-mcp-server:v2.6.3",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.nickzitzer-servicenow-nodejs",
    "name": "io.github.nickzitzer/servicenow-nodejs",
    "description": "Multi-instance ServiceNow MCP server with 40+ tools and intelligent schema discovery",
    "category": "version-control",
    "version": "2.1.1",
    "author": "io.github.nickzitzer",
    "repository": "https://github.com/Happy-Technologies-LLC/mcp-servicenow-nodejs",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install servicenow-mcp-server",
    "documentationUrl": "https://github.com/Happy-Technologies-LLC/mcp-servicenow-nodejs#readme",
    "homepage": "https://github.com/Happy-Technologies-LLC/mcp-servicenow-nodejs",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.nickzitzer/servicenow-nodejs",
      "description": "Multi-instance ServiceNow MCP server with 40+ tools and intelligent schema discovery",
      "repository": {
        "url": "https://github.com/Happy-Technologies-LLC/mcp-servicenow-nodejs",
        "source": "github"
      },
      "version": "2.1.1",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "servicenow-mcp-server",
          "version": "2.1.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "ServiceNow instance URL (e.g., https://dev123456.service-now.com)",
              "isRequired": true,
              "format": "string",
              "name": "SERVICENOW_INSTANCE_URL"
            },
            {
              "description": "ServiceNow username",
              "isRequired": true,
              "format": "string",
              "name": "SERVICENOW_USERNAME"
            },
            {
              "description": "ServiceNow password",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "SERVICENOW_PASSWORD"
            },
            {
              "description": "Authentication type (default: basic)",
              "format": "string",
              "name": "SERVICENOW_AUTH_TYPE"
            },
            {
              "description": "Specific instance name from config file (optional)",
              "format": "string",
              "name": "SERVICENOW_INSTANCE"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.nickzren-opentargets",
    "name": "io.github.nickzren/opentargets",
    "description": "Open Targets MCP server for targets, diseases, drugs, variants, and evidence",
    "category": "version-control",
    "version": "0.2.0",
    "author": "io.github.nickzren",
    "repository": "https://github.com/nickzren/opentargets-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install opentargets-mcp",
    "documentationUrl": "https://github.com/nickzren/opentargets-mcp#readme",
    "homepage": "https://github.com/nickzren/opentargets-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.nickzren/opentargets",
      "description": "Open Targets MCP server for targets, diseases, drugs, variants, and evidence",
      "repository": {
        "url": "https://github.com/nickzren/opentargets-mcp",
        "source": "github",
        "id": "984363568"
      },
      "version": "0.2.0",
      "websiteUrl": "https://nickzren.github.io/opentargets-mcp/",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "opentargets-mcp",
          "version": "0.2.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.nigue3025-tw-cwa-weather-mcp",
    "name": "io.github.nigue3025/tw-cwa-weather-mcp",
    "description": "Access Taiwan CWA weather data and forecasts for all counties and cities",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.nigue3025",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install tw-cwa-weather-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.nigue3025/tw-cwa-weather-mcp",
      "description": "Access Taiwan CWA weather data and forecasts for all counties and cities",
      "title": "Taiwan CWA Weather",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "tw-cwa-weather-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.niradler-dependency-mcp",
    "name": "io.github.niradler/dependency-mcp",
    "description": "MCP server for checking package versions across multiple package managers",
    "category": "version-control",
    "version": "0.0.5",
    "author": "io.github.niradler",
    "repository": "https://github.com/niradler/dependency-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install dependency-mcp",
    "documentationUrl": "https://github.com/niradler/dependency-mcp#readme",
    "homepage": "https://github.com/niradler/dependency-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.niradler/dependency-mcp",
      "description": "MCP server for checking package versions across multiple package managers",
      "repository": {
        "url": "https://github.com/niradler/dependency-mcp",
        "source": "github"
      },
      "version": "0.0.5",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "dependency-mcp",
          "version": "0.0.5",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.njlnaet-coderswap-mcp-server",
    "name": "io.github.njlnaet/coderswap-mcp-server",
    "description": "Build searchable AI research knowledge bases with hybrid vector search directly in Claude Desktop.",
    "category": "version-control",
    "version": "0.1.2",
    "author": "io.github.njlnaet",
    "repository": "https://github.com/njlnaet/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @coderswap/mcp-server",
    "documentationUrl": "https://github.com/njlnaet/mcp-server#readme",
    "homepage": "https://github.com/njlnaet/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.njlnaet/coderswap-mcp-server",
      "description": "Build searchable AI research knowledge bases with hybrid vector search directly in Claude Desktop.",
      "title": "CoderSwap MCP Server",
      "repository": {
        "url": "https://github.com/njlnaet/mcp-server",
        "source": "github"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@coderswap/mcp-server",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.noahgift-depyler-mcp",
    "name": "io.github.noahgift/depyler-mcp",
    "description": "MCP server for Depyler: Python-to-Rust transpiler with analysis and verification tools",
    "category": "version-control",
    "version": "3.4.0",
    "author": "io.github.noahgift",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.noahgift/depyler-mcp",
      "description": "MCP server for Depyler: Python-to-Rust transpiler with analysis and verification tools",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "3.4.0"
    }
  },
  {
    "id": "io.github.noahgift-pmcp",
    "name": "io.github.noahgift/pmcp",
    "description": "High-quality Rust SDK for Model Context Protocol (MCP) with full TypeScript SDK compatibility",
    "category": "version-control",
    "version": "1.6.1",
    "author": "io.github.noahgift",
    "repository": "https://github.com/noahgift/rust-mcp-sdk",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/noahgift/rust-mcp-sdk#readme",
    "homepage": "https://github.com/noahgift/rust-mcp-sdk",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.noahgift/pmcp",
      "description": "High-quality Rust SDK for Model Context Protocol (MCP) with full TypeScript SDK compatibility",
      "repository": {
        "url": "https://github.com/noahgift/rust-mcp-sdk",
        "source": "github"
      },
      "version": "1.6.1"
    }
  },
  {
    "id": "io.github.noahgift-ruchy-mcp",
    "name": "io.github.noahgift/ruchy-mcp",
    "description": "MCP server for Ruchy: code analysis, scoring, linting, formatting, and transpilation tools",
    "category": "version-control",
    "version": "3.67.0",
    "author": "io.github.noahgift",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.noahgift/ruchy-mcp",
      "description": "MCP server for Ruchy: code analysis, scoring, linting, formatting, and transpilation tools",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "3.67.0"
    }
  },
  {
    "id": "io.github.nowledge-co-server.json",
    "name": "io.github.nowledge-co/server.json",
    "description": "A server that provides MCPB package functionality for Nowledge Mem",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.nowledge-co",
    "repository": "https://github.com/nowledge-co/claude-dxt",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install nowledge-mem",
    "documentationUrl": "https://github.com/nowledge-co/claude-dxt#readme",
    "homepage": "https://github.com/nowledge-co/claude-dxt",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.nowledge-co/server.json",
      "description": "A server that provides MCPB package functionality for Nowledge Mem",
      "repository": {
        "url": "https://github.com/nowledge-co/claude-dxt",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "nowledge-mem",
          "version": "1.1.0",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/nowledge-co/claude-dxt/releases/download/v1.0.0/claude-dxt.mcpb",
          "fileSha256": "68d0c882efa7925cd1400a5a6c8e20e2a3b59e7abf8ae6bd45863d0be41aeb9a",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.nrwl-nx-console",
    "name": "io.github.nrwl/nx-console",
    "description": "A Model Context Protocol server implementation for Nx",
    "category": "version-control",
    "version": "0.6.12",
    "author": "io.github.nrwl",
    "repository": "https://github.com/nrwl/nx-console",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install nx-mcp",
    "documentationUrl": "https://github.com/nrwl/nx-console#readme",
    "homepage": "https://github.com/nrwl/nx-console",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.nrwl/nx-console",
      "description": "A Model Context Protocol server implementation for Nx",
      "repository": {
        "url": "https://github.com/nrwl/nx-console",
        "source": "github"
      },
      "version": "0.6.12",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "nx-mcp",
          "version": "0.6.12",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.oguzc-playwright-wizard-mcp",
    "name": "io.github.oguzc/playwright-wizard-mcp",
    "description": "MCP server providing Playwright test generation wizard with intelligent prompts and best practices",
    "category": "version-control",
    "version": "0.1.6",
    "author": "io.github.oguzc",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install playwright-wizard-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.oguzc/playwright-wizard-mcp",
      "description": "MCP server providing Playwright test generation wizard with intelligent prompts and best practices",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.6",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "playwright-wizard-mcp",
          "version": "0.1.6",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.olostep-olostep-mcp-server",
    "name": "io.github.olostep/olostep-mcp-server",
    "description": "Olostep MCP server for web scraping, google search and website urls search.",
    "category": "web",
    "version": "1.0.7",
    "author": "io.github.olostep",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install olostep-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.olostep/olostep-mcp-server",
      "description": "Olostep MCP server for web scraping, google search and website urls search.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.7",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "olostep-mcp",
          "version": "1.0.7",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.ooples-mcp-console-automation",
    "name": "io.github.ooples/mcp-console-automation",
    "description": "MCP server for AI-driven console application automation and monitoring",
    "category": "version-control",
    "version": "1.0.2",
    "author": "io.github.ooples",
    "repository": "https://github.com/ooples/mcp-console-automation",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-console-automation",
    "documentationUrl": "https://github.com/ooples/mcp-console-automation#readme",
    "homepage": "https://github.com/ooples/mcp-console-automation",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.ooples/mcp-console-automation",
      "description": "MCP server for AI-driven console application automation and monitoring",
      "repository": {
        "url": "https://github.com/ooples/mcp-console-automation",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-console-automation",
          "version": "1.0.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Logging level for console output (error, warn, info, debug, trace)",
              "format": "string",
              "name": "LOG_LEVEL"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.ooples-token-optimizer-mcp",
    "name": "io.github.ooples/token-optimizer-mcp",
    "description": "Intelligent token optimization achieving 95%+ reduction through caching, compression, and 80+ tools",
    "category": "version-control",
    "version": "2.1.0",
    "author": "io.github.ooples",
    "repository": "https://github.com/ooples/token-optimizer-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install token-optimizer-mcp",
    "documentationUrl": "https://github.com/ooples/token-optimizer-mcp#readme",
    "homepage": "https://github.com/ooples/token-optimizer-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.ooples/token-optimizer-mcp",
      "description": "Intelligent token optimization achieving 95%+ reduction through caching, compression, and 80+ tools",
      "repository": {
        "url": "https://github.com/ooples/token-optimizer-mcp",
        "source": "github"
      },
      "version": "2.1.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "token-optimizer-mcp",
          "version": "2.1.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Directory path for cache storage (optional, defaults to ~/.token-optimizer-cache)",
              "format": "string",
              "name": "TOKEN_OPTIMIZER_CACHE_DIR"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.opencontext-team-mcp-server",
    "name": "io.github.opencontext-team/mcp-server",
    "description": "An MCP server that provides visual memory and context storage with knowledge graph capabilities",
    "category": "version-control",
    "version": "1.0.2",
    "author": "io.github.opencontext-team",
    "repository": "https://github.com/testing9384/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install visual-memory-context-server",
    "documentationUrl": "https://github.com/testing9384/mcp-server#readme",
    "homepage": "https://github.com/testing9384/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.opencontext-team/mcp-server",
      "description": "An MCP server that provides visual memory and context storage with knowledge graph capabilities",
      "repository": {
        "url": "https://github.com/testing9384/mcp-server",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "visual-memory-context-server",
          "version": "1.0.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Path to the memory.json file for knowledge graph storage",
              "format": "string",
              "name": "MEMORY_FILE_PATH"
            },
            {
              "description": "Comma-separated list of directories the server can access, or JSON array format",
              "format": "string",
              "name": "ALLOWED_DIRECTORIES"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.overstarry-qweather-mcp",
    "name": "io.github.overstarry/qweather-mcp",
    "description": "a qweather mcp server",
    "category": "version-control",
    "version": "1.0.12",
    "author": "io.github.overstarry",
    "repository": "https://github.com/overstarry/qweather-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install qweather-mcp",
    "documentationUrl": "https://github.com/overstarry/qweather-mcp#readme",
    "homepage": "https://github.com/overstarry/qweather-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.overstarry/qweather-mcp",
      "description": "a qweather mcp server",
      "repository": {
        "url": "https://github.com/overstarry/qweather-mcp",
        "source": "github"
      },
      "version": "1.0.12",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "qweather-mcp",
          "version": "1.0.12",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your qweather api host",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "QWEATHER_API_BASE"
            },
            {
              "description": "Your qweather api key",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "QWEATHER_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.p1va-symbols",
    "name": "io.github.p1va/symbols",
    "description": "MCP server to read, inspect and troubleshoot codebase symbols",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.p1va",
    "repository": "https://github.com/p1va/symbols",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @p1va/symbols",
    "documentationUrl": "https://github.com/p1va/symbols#readme",
    "homepage": "https://github.com/p1va/symbols",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.p1va/symbols",
      "description": "MCP server to read, inspect and troubleshoot codebase symbols",
      "repository": {
        "url": "https://github.com/p1va/symbols",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@p1va/symbols",
          "version": "0.0.10",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.pab1it0-prometheus-mcp-server",
    "name": "io.github.pab1it0/prometheus-mcp-server",
    "description": "MCP server providing Prometheus metrics access and PromQL query execution for AI assistants",
    "category": "version-control",
    "version": "1.3.2",
    "author": "io.github.pab1it0",
    "repository": "https://github.com/pab1it0/prometheus-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull ghcr.io/pab1it0/prometheus-mcp-server:1.3.2",
    "documentationUrl": "https://github.com/pab1it0/prometheus-mcp-server#readme",
    "homepage": "https://github.com/pab1it0/prometheus-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.pab1it0/prometheus-mcp-server",
      "description": "MCP server providing Prometheus metrics access and PromQL query execution for AI assistants",
      "repository": {
        "url": "https://github.com/pab1it0/prometheus-mcp-server",
        "source": "github"
      },
      "version": "1.3.2",
      "websiteUrl": "https://pab1it0.github.io/prometheus-mcp-server",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "ghcr.io/pab1it0/prometheus-mcp-server:1.3.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Prometheus server URL (e.g., http://localhost:9090)",
              "isRequired": true,
              "format": "string",
              "name": "PROMETHEUS_URL"
            },
            {
              "description": "Username for Prometheus basic authentication",
              "format": "string",
              "name": "PROMETHEUS_USERNAME"
            },
            {
              "description": "Password for Prometheus basic authentication",
              "format": "string",
              "isSecret": true,
              "name": "PROMETHEUS_PASSWORD"
            },
            {
              "description": "Bearer token for Prometheus authentication",
              "format": "string",
              "isSecret": true,
              "name": "PROMETHEUS_TOKEN"
            },
            {
              "description": "Organization ID for multi-tenant Prometheus setups",
              "format": "string",
              "name": "ORG_ID"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.paiml-pforge",
    "name": "io.github.paiml/pforge",
    "description": "Zero-boilerplate MCP server framework with declarative YAML configuration",
    "category": "version-control",
    "version": "0.1.2",
    "author": "io.github.paiml",
    "repository": "https://github.com/paiml/pforge",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/paiml/pforge#readme",
    "homepage": "https://github.com/paiml/pforge",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.paiml/pforge",
      "description": "Zero-boilerplate MCP server framework with declarative YAML configuration",
      "repository": {
        "url": "https://github.com/paiml/pforge",
        "source": "github"
      },
      "version": "0.1.2"
    }
  },
  {
    "id": "io.github.paiml-pmat-agent",
    "name": "io.github.paiml/pmat-agent",
    "description": "Zero-config AI context generation and code quality toolkit with Claude Code Agent Mode support",
    "category": "version-control",
    "version": "2.121.0",
    "author": "io.github.paiml",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.paiml/pmat-agent",
      "description": "Zero-config AI context generation and code quality toolkit with Claude Code Agent Mode support",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.121.0"
    }
  },
  {
    "id": "io.github.paiml-pmcp",
    "name": "io.github.paiml/pmcp",
    "description": "High-quality Rust SDK for Model Context Protocol (MCP) with full TypeScript SDK compatibility",
    "category": "version-control",
    "version": "1.6.1",
    "author": "io.github.paiml",
    "repository": "https://github.com/paiml/rust-mcp-sdk",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/paiml/rust-mcp-sdk#readme",
    "homepage": "https://github.com/paiml/rust-mcp-sdk",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.paiml/pmcp",
      "description": "High-quality Rust SDK for Model Context Protocol (MCP) with full TypeScript SDK compatibility",
      "repository": {
        "url": "https://github.com/paiml/rust-mcp-sdk",
        "source": "github"
      },
      "version": "1.6.1"
    }
  },
  {
    "id": "io.github.paiml-rash",
    "name": "io.github.paiml/rash",
    "description": "Transpile Rust code to POSIX-compliant shell scripts with formal correctness guarantees",
    "category": "version-control",
    "version": "0.1.0",
    "author": "io.github.paiml",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.paiml/rash",
      "description": "Transpile Rust code to POSIX-compliant shell scripts with formal correctness guarantees",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0"
    }
  },
  {
    "id": "io.github.pedro-rivas-android-puppeteer-mcp",
    "name": "io.github.pedro-rivas/android-puppeteer-mcp",
    "description": "MCP server for Android automation with UI interaction, screenshots, and device control",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.pedro-rivas",
    "repository": "https://github.com/pedro-rivas/android-puppeteer-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install android-puppeteer-mcp",
    "documentationUrl": "https://github.com/pedro-rivas/android-puppeteer-mcp#readme",
    "homepage": "https://github.com/pedro-rivas/android-puppeteer-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.pedro-rivas/android-puppeteer-mcp",
      "description": "MCP server for Android automation with UI interaction, screenshots, and device control",
      "repository": {
        "url": "https://github.com/pedro-rivas/android-puppeteer-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "android-puppeteer-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.pkolawa-krs-poland-mcp-server",
    "name": "io.github.pkolawa/krs-poland-mcp-server",
    "description": "Polish National registry of businesses and other legal entities",
    "category": "version-control",
    "version": "1.0.17",
    "author": "io.github.pkolawa",
    "repository": "https://github.com/pkolawa/krs-poland-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install krs-poland-mcp-server",
    "documentationUrl": "https://github.com/pkolawa/krs-poland-mcp-server#readme",
    "homepage": "https://github.com/pkolawa/krs-poland-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.pkolawa/krs-poland-mcp-server",
      "description": "Polish National registry of businesses and other legal entities",
      "repository": {
        "url": "https://github.com/pkolawa/krs-poland-mcp-server",
        "source": "github"
      },
      "version": "1.0.17",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "krs-poland-mcp-server",
          "version": "1.0.17",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.pkolawa-mcp-krs-poland",
    "name": "io.github.pkolawa/mcp-krs-poland",
    "description": "Polish National government's registry of all businesses, foundations, and other legal entities.",
    "category": "version-control",
    "version": "1.0.11",
    "author": "io.github.pkolawa",
    "repository": "https://github.com/pkolawa/mcp-krs-poland",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install krs-poland-mcp-server",
    "documentationUrl": "https://github.com/pkolawa/mcp-krs-poland#readme",
    "homepage": "https://github.com/pkolawa/mcp-krs-poland",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.pkolawa/mcp-krs-poland",
      "description": "Polish National government's registry of all businesses, foundations, and other legal entities.",
      "repository": {
        "url": "https://github.com/pkolawa/mcp-krs-poland",
        "source": "github"
      },
      "version": "1.0.11",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "krs-poland-mcp-server",
          "version": "1.0.11",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.portel-dev-ncp",
    "name": "io.github.portel-dev/ncp",
    "description": "N-to-1 MCP Orchestration. Unified gateway for multiple MCP servers with intelligent tool discovery.",
    "category": "version-control",
    "version": "1.5.3",
    "author": "io.github.portel-dev",
    "repository": "https://github.com/portel-dev/ncp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @portel/ncp",
    "documentationUrl": "https://github.com/portel-dev/ncp#readme",
    "homepage": "https://github.com/portel-dev/ncp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.portel-dev/ncp",
      "description": "N-to-1 MCP Orchestration. Unified gateway for multiple MCP servers with intelligent tool discovery.",
      "repository": {
        "url": "https://github.com/portel-dev/ncp",
        "source": "github"
      },
      "version": "1.5.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@portel/ncp",
          "version": "1.5.3",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Enable debug logging for troubleshooting",
              "default": "false",
              "name": "NCP_DEBUG"
            },
            {
              "description": "Operating mode: 'mcp' for AI assistant integration or 'cli' for command-line",
              "default": "mcp",
              "name": "NCP_MODE"
            },
            {
              "description": "Disable colored output in logs and CLI",
              "default": "false",
              "name": "NO_COLOR"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.pree-dew-mcp-bookmark",
    "name": "io.github.pree-dew/mcp-bookmark",
    "description": "MCP Server for adding bookmarks in openai RAG",
    "category": "version-control",
    "version": "0.1.5",
    "author": "io.github.pree-dew",
    "repository": "https://github.com/pree-dew/mcp-bookmark",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-bookmark-server",
    "documentationUrl": "https://github.com/pree-dew/mcp-bookmark#readme",
    "homepage": "https://github.com/pree-dew/mcp-bookmark",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.pree-dew/mcp-bookmark",
      "description": "MCP Server for adding bookmarks in openai RAG",
      "repository": {
        "url": "https://github.com/pree-dew/mcp-bookmark",
        "source": "github"
      },
      "version": "0.1.5",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-bookmark-server",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "open ai api key",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "OPENAI_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.priyankark-lighthouse-mcp",
    "name": "io.github.priyankark/lighthouse-mcp",
    "description": "MCP server for Google Lighthouse performance metrics",
    "category": "version-control",
    "version": "0.1.9",
    "author": "io.github.priyankark",
    "repository": "https://github.com/priyankark/lighthouse-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install lighthouse-mcp",
    "documentationUrl": "https://github.com/priyankark/lighthouse-mcp#readme",
    "homepage": "https://github.com/priyankark/lighthouse-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.priyankark/lighthouse-mcp",
      "description": "MCP server for Google Lighthouse performance metrics",
      "repository": {
        "url": "https://github.com/priyankark/lighthouse-mcp",
        "source": "github"
      },
      "version": "0.1.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "lighthouse-mcp",
          "version": "0.1.9",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.promplate-hmr",
    "name": "io.github.promplate/hmr",
    "description": "Hot Module Reload (HMR) for Python with reactive programming and MCP tools",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.promplate",
    "repository": "https://github.com/promplate/pyth-on-line",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://promplate.github.io/pyth-on-line/hmr/mcp",
    "documentationUrl": "https://github.com/promplate/pyth-on-line#readme",
    "homepage": "https://github.com/promplate/pyth-on-line",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.promplate/hmr",
      "description": "Hot Module Reload (HMR) for Python with reactive programming and MCP tools",
      "repository": {
        "url": "https://github.com/promplate/pyth-on-line",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://promplate.github.io/pyth-on-line/hmr/mcp"
        }
      ]
    }
  },
  {
    "id": "io.github.pshivapr-selenium-mcp",
    "name": "io.github.pshivapr/selenium-mcp",
    "description": "Selenium Tools for MCP",
    "category": "version-control",
    "version": "0.4.6",
    "author": "io.github.pshivapr",
    "repository": "https://github.com/pshivapr/selenium-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install selenium-webdriver-mcp",
    "documentationUrl": "https://github.com/pshivapr/selenium-mcp#readme",
    "homepage": "https://github.com/pshivapr/selenium-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.pshivapr/selenium-mcp",
      "description": "Selenium Tools for MCP",
      "repository": {
        "url": "https://github.com/pshivapr/selenium-mcp",
        "source": "github"
      },
      "version": "0.4.6",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "selenium-webdriver-mcp",
          "version": "0.4.6",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.ptyagiegnyte-egnyte-mcp-server",
    "name": "io.github.ptyagiegnyte/egnyte-mcp-server",
    "description": "Official Egnyte MCP Server for AI integration with document search, analysis, and collaboration.",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.ptyagiegnyte",
    "repository": "https://github.com/egnyte/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/egnyte/mcp-server#readme",
    "homepage": "https://github.com/egnyte/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.ptyagiegnyte/egnyte-mcp-server",
      "description": "Official Egnyte MCP Server for AI integration with document search, analysis, and collaboration.",
      "repository": {
        "url": "https://github.com/egnyte/mcp-server",
        "source": "github"
      },
      "version": "1.0.0"
    }
  },
  {
    "id": "io.github.ptyagiegnyte-egnyte-remote",
    "name": "io.github.ptyagiegnyte/egnyte-remote",
    "description": "Secure integration between AI tools and Egnyte content with search, analysis, and workflow tools.",
    "category": "version-control",
    "version": "1.0.2",
    "author": "io.github.ptyagiegnyte",
    "repository": "https://github.com/sachin-shetty/egnyte-ai-samples",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://ptyagiegnyte.github.io/egnyte-remote/mcp",
    "documentationUrl": "https://github.com/sachin-shetty/egnyte-ai-samples#readme",
    "homepage": "https://github.com/sachin-shetty/egnyte-ai-samples",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.ptyagiegnyte/egnyte-remote",
      "description": "Secure integration between AI tools and Egnyte content with search, analysis, and workflow tools.",
      "repository": {
        "url": "https://github.com/sachin-shetty/egnyte-ai-samples",
        "source": "github"
      },
      "version": "1.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://ptyagiegnyte.github.io/egnyte-remote/mcp"
        }
      ]
    }
  },
  {
    "id": "io.github.pubnub-mcp-server",
    "name": "io.github.pubnub/mcp-server",
    "description": "PubNub MCP for Real-time messaging. API Access and SDK documentation.",
    "category": "version-control",
    "version": "1.0.106",
    "author": "io.github.pubnub",
    "repository": "https://github.com/pubnub/pubnub-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/pubnub/pubnub-mcp-server#readme",
    "homepage": "https://github.com/pubnub/pubnub-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.pubnub/mcp-server",
      "description": "PubNub MCP for Real-time messaging. API Access and SDK documentation.",
      "repository": {
        "url": "https://github.com/pubnub/pubnub-mcp-server",
        "source": "github"
      },
      "version": "1.0.106"
    }
  },
  {
    "id": "io.github.pzep1-mcp-meet",
    "name": "io.github.pzep1/mcp-meet",
    "description": "One-click Google Meet scheduling and Apple Calendar mirroring with smart availability detection",
    "category": "version-control",
    "version": "0.3.1",
    "author": "io.github.pzep1",
    "repository": "https://github.com/znz-systems/mcp-meet",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-meet",
    "documentationUrl": "https://github.com/znz-systems/mcp-meet#readme",
    "homepage": "https://github.com/znz-systems/mcp-meet",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.pzep1/mcp-meet",
      "description": "One-click Google Meet scheduling and Apple Calendar mirroring with smart availability detection",
      "repository": {
        "url": "https://github.com/znz-systems/mcp-meet",
        "source": "github"
      },
      "version": "0.3.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-meet",
          "version": "0.3.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Google OAuth Client ID",
              "isRequired": true,
              "format": "string",
              "name": "GOOGLE_CLIENT_ID"
            },
            {
              "description": "Google OAuth Client Secret",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "GOOGLE_CLIENT_SECRET"
            },
            {
              "description": "Google OAuth Redirect URI",
              "format": "string",
              "default": "http://localhost:5173/oauth2/callback",
              "name": "GOOGLE_REDIRECT_URI"
            },
            {
              "description": "Comma-separated list of calendar IDs to check for availability",
              "format": "string",
              "default": "primary",
              "name": "CALENDAR_IDS"
            },
            {
              "description": "Name of the Apple Calendar to create events in",
              "format": "string",
              "default": "Meetings",
              "name": "APPLE_CALENDAR_NAME"
            },
            {
              "description": "Timezone for calendar operations",
              "format": "string",
              "default": "Europe/London",
              "name": "TZ"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.r-huijts-strava-mcp",
    "name": "io.github.r-huijts/strava-mcp",
    "description": "MCP server for accessing Strava API",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.r-huijts",
    "repository": "https://github.com/r-huijts/strava-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install strava-mcp-server",
    "documentationUrl": "https://github.com/r-huijts/strava-mcp#readme",
    "homepage": "https://github.com/r-huijts/strava-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.r-huijts/strava-mcp",
      "description": "MCP server for accessing Strava API",
      "repository": {
        "url": "https://github.com/r-huijts/strava-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "strava-mcp-server",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Strava API client ID",
              "isRequired": true,
              "format": "string",
              "name": "STRAVA_CLIENT_ID"
            },
            {
              "description": "Your Strava API client secret",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "STRAVA_CLIENT_SECRET"
            },
            {
              "description": "Your Strava API access token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "STRAVA_ACCESS_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.railwayapp-mcp-server",
    "name": "io.github.railwayapp/mcp-server",
    "description": "Official Railway MCP server",
    "category": "version-control",
    "version": "0.1.5",
    "author": "io.github.railwayapp",
    "repository": "https://github.com/railwayapp/railway-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @railway/mcp-server",
    "documentationUrl": "https://github.com/railwayapp/railway-mcp-server#readme",
    "homepage": "https://github.com/railwayapp/railway-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.railwayapp/mcp-server",
      "description": "Official Railway MCP server",
      "repository": {
        "url": "https://github.com/railwayapp/railway-mcp-server",
        "source": "github"
      },
      "version": "0.1.5",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@railway/mcp-server",
          "version": "0.1.5",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.rbonestell-ap-mcp-server",
    "name": "io.github.rbonestell/ap-mcp-server",
    "description": "Model Context Protocol (MCP) server for the Associated Press Media API",
    "category": "version-control",
    "version": "1.2.6",
    "author": "io.github.rbonestell",
    "repository": "https://github.com/rbonestell/ap-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install ap-mcp-server",
    "documentationUrl": "https://github.com/rbonestell/ap-mcp-server#readme",
    "homepage": "https://github.com/rbonestell/ap-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.rbonestell/ap-mcp-server",
      "description": "Model Context Protocol (MCP) server for the Associated Press Media API",
      "repository": {
        "url": "https://github.com/rbonestell/ap-mcp-server",
        "source": "github"
      },
      "version": "1.2.6",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "ap-mcp-server",
          "version": "1.2.6",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.ref-tools-ref-tools-mcp",
    "name": "io.github.ref-tools/ref-tools-mcp",
    "description": "Token efficient search for coding agents over public and private documentation.",
    "category": "version-control",
    "version": "3.0.1",
    "author": "io.github.ref-tools",
    "repository": "https://github.com/ref-tools/ref-tools-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install ref-tools-mcp",
    "documentationUrl": "https://github.com/ref-tools/ref-tools-mcp#readme",
    "homepage": "https://github.com/ref-tools/ref-tools-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.ref-tools/ref-tools-mcp",
      "description": "Token efficient search for coding agents over public and private documentation.",
      "repository": {
        "url": "https://github.com/ref-tools/ref-tools-mcp",
        "source": "github"
      },
      "version": "3.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "ref-tools-mcp",
          "version": "3.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for Ref",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "REF_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.rfdez-pvpc-mcp-server",
    "name": "io.github.rfdez/pvpc-mcp-server",
    "description": "Retrieve daily PVPC electricity tariffs for 2.0 TD consumers, published by Red Eléctrica.",
    "category": "version-control",
    "version": "3.2.3",
    "author": "io.github.rfdez",
    "repository": "https://github.com/rfdez/pvpc-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @rfdez/pvpc-mcp-server",
    "documentationUrl": "https://github.com/rfdez/pvpc-mcp-server#readme",
    "homepage": "https://github.com/rfdez/pvpc-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.rfdez/pvpc-mcp-server",
      "description": "Retrieve daily PVPC electricity tariffs for 2.0 TD consumers, published by Red Eléctrica.",
      "repository": {
        "url": "https://github.com/rfdez/pvpc-mcp-server",
        "source": "github"
      },
      "version": "3.2.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@rfdez/pvpc-mcp-server",
          "version": "3.2.3",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Use stdio transport type for MCP server",
              "value": "stdio",
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "ESIOS API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "type": "named",
              "name": "--api-key"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@rfdez/pvpc-mcp-server",
          "version": "3.2.3",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:8080/mcp",
            "headers": [
              {
                "description": "ESIOS API key for authentication",
                "isRequired": true,
                "isSecret": true,
                "name": "X-API-Key"
              }
            ]
          },
          "packageArguments": [
            {
              "description": "Use HTTP transport type for MCP server",
              "value": "http",
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "Port for HTTP transport",
              "default": "8080",
              "type": "named",
              "name": "--port"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.rghsoftware-linux-filesystem",
    "name": "io.github.rghsoftware/linux-filesystem",
    "description": "Enhanced Linux filesystem access with symlinks, permissions, and chmod support",
    "category": "filesystem",
    "version": "1.2.1",
    "author": "io.github.rghsoftware",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.rghsoftware/linux-filesystem",
      "description": "Enhanced Linux filesystem access with symlinks, permissions, and chmod support",
      "title": "Linux Filesystem",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.2.1",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/rghsoftware/linux-filesystem-extension/releases/download/v1.2.1/linux-filesystem.mcpb",
          "fileSha256": "3174a623da8d3da7013467bb877dde5591a8f6e04dad0430b2784303ecbfedfe",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.rnaga-wp-mcp",
    "name": "io.github.rnaga/wp-mcp",
    "description": "MCP server for WordPress. Manage posts, users, comments, terms, metadata, and settings.",
    "category": "version-control",
    "version": "1.0.4",
    "author": "io.github.rnaga",
    "repository": "https://github.com/rnaga/wp-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @rnaga/wp-mcp",
    "documentationUrl": "https://github.com/rnaga/wp-mcp#readme",
    "homepage": "https://github.com/rnaga/wp-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.rnaga/wp-mcp",
      "description": "MCP server for WordPress. Manage posts, users, comments, terms, metadata, and settings.",
      "title": "WordPress MCP Server",
      "repository": {
        "url": "https://github.com/rnaga/wp-mcp",
        "source": "github"
      },
      "version": "1.0.4",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@rnaga/wp-mcp",
          "version": "1.0.4",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "description": "Automatically confirm npx package installation",
              "type": "named",
              "name": "-y"
            }
          ],
          "packageArguments": [
            {
              "description": "Command to run (local, remote, http, utils)",
              "value": "local",
              "type": "positional"
            },
            {
              "description": "Subcommand to start the local MCP server",
              "value": "start",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "WordPress username to assume for capability checks",
              "isRequired": true,
              "name": "LOCAL_USERNAME"
            },
            {
              "description": "WordPress database host",
              "isRequired": true,
              "name": "WP_DB_HOST"
            },
            {
              "description": "WordPress database port",
              "default": "3306",
              "name": "WP_DB_PORT"
            },
            {
              "description": "WordPress database name",
              "isRequired": true,
              "name": "WP_DB_NAME"
            },
            {
              "description": "WordPress database user",
              "isRequired": true,
              "name": "WP_DB_USER"
            },
            {
              "description": "WordPress database password",
              "isRequired": true,
              "isSecret": true,
              "name": "WP_DB_PASSWORD"
            },
            {
              "description": "Enable WordPress multisite mode",
              "default": "false",
              "name": "LOCAL_MULTISITE"
            },
            {
              "description": "Default blog ID for multisite",
              "default": "1",
              "name": "LOCAL_DEFAULT_BLOG_ID"
            },
            {
              "description": "Default site ID for multisite",
              "default": "1",
              "name": "LOCAL_DEFAULT_SITE_ID"
            },
            {
              "description": "Enable SSL for database connection",
              "default": "false",
              "name": "LOCAL_SSL_ENABLED"
            },
            {
              "description": "Path to SSL CA certificate file",
              "name": "LOCAL_SSL_CA_FILEPATH"
            },
            {
              "description": "Path to SSL certificate file",
              "name": "LOCAL_SSL_CERT_FILEPATH"
            },
            {
              "description": "Path to SSL key file",
              "name": "LOCAL_SSL_KEY_FILEPATH"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.robotmcp-ros-mcp-server",
    "name": "io.github.robotmcp/ros-mcp-server",
    "description": "Connect AI models like Claude & ChatGPT with ROS robots using MCP",
    "category": "version-control",
    "version": "2.1.8",
    "author": "io.github.robotmcp",
    "repository": "https://github.com/robotmcp/ros-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install ros-mcp",
    "documentationUrl": "https://github.com/robotmcp/ros-mcp-server#readme",
    "homepage": "https://github.com/robotmcp/ros-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.robotmcp/ros-mcp-server",
      "description": "Connect AI models like Claude & ChatGPT with ROS robots using MCP",
      "repository": {
        "url": "https://github.com/robotmcp/ros-mcp-server",
        "source": "github"
      },
      "version": "2.1.8",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "ros-mcp",
          "version": "2.1.8",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.rogiervdbrnk-mcp-real-estate-server",
    "name": "io.github.rogiervdbrnk/mcp-real-estate-server",
    "description": "MCP server for Dutch real estate data. API_KEY_ID optional for testing.",
    "category": "version-control",
    "version": "1.1.1",
    "author": "io.github.rogiervdbrnk",
    "repository": "https://github.com/rogiervdbrnk/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull ghcr.io/rogiervdbrnk/mcp-server:1.1.1",
    "documentationUrl": "https://github.com/rogiervdbrnk/mcp-server#readme",
    "homepage": "https://github.com/rogiervdbrnk/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.rogiervdbrnk/mcp-real-estate-server",
      "description": "MCP server for Dutch real estate data. API_KEY_ID optional for testing.",
      "repository": {
        "url": "https://github.com/rogiervdbrnk/mcp-server",
        "source": "github"
      },
      "version": "1.1.1",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "ghcr.io/rogiervdbrnk/mcp-server:1.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.ruvnet-claude-flow",
    "name": "io.github.ruvnet/claude-flow",
    "description": "AI orchestration with hive-mind swarms, neural networks, and 87 MCP tools for enterprise dev.",
    "category": "version-control",
    "version": "2.0.0-alpha.107",
    "author": "io.github.ruvnet",
    "repository": "https://github.com/ruvnet/claude-flow",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install claude-flow",
    "documentationUrl": "https://github.com/ruvnet/claude-flow#readme",
    "homepage": "https://github.com/ruvnet/claude-flow",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.ruvnet/claude-flow",
      "description": "AI orchestration with hive-mind swarms, neural networks, and 87 MCP tools for enterprise dev.",
      "repository": {
        "url": "https://github.com/ruvnet/claude-flow",
        "source": "github",
        "id": "854513237"
      },
      "version": "2.0.0-alpha.107",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "claude-flow",
          "version": "2.0.0-alpha.107",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Anthropic API key for Claude AI models",
              "format": "string",
              "isSecret": true,
              "name": "ANTHROPIC_API_KEY"
            },
            {
              "description": "Operation mode: development, production, or test",
              "format": "string",
              "name": "CLAUDE_FLOW_MODE"
            },
            {
              "description": "Path for persistent memory storage",
              "format": "string",
              "name": "CLAUDE_FLOW_MEMORY_PATH"
            },
            {
              "description": "Maximum number of concurrent agents",
              "format": "string",
              "name": "CLAUDE_FLOW_MAX_AGENTS"
            },
            {
              "description": "MCP server port",
              "format": "string",
              "name": "CLAUDE_FLOW_PORT"
            },
            {
              "description": "GitHub personal access token for repository operations",
              "format": "string",
              "isSecret": true,
              "name": "GITHUB_TOKEN"
            },
            {
              "description": "Flow Nexus cloud platform API key",
              "format": "string",
              "isSecret": true,
              "name": "FLOW_NEXUS_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.ruvnet-flow-nexus",
    "name": "io.github.ruvnet/flow-nexus",
    "description": "Cloud-powered AI platform with multi-agent swarms, sandboxes, and workflow automation",
    "category": "version-control",
    "version": "0.1.121",
    "author": "io.github.ruvnet",
    "repository": "https://github.com/ruvnet/flow-nexus",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install flow-nexus",
    "documentationUrl": "https://github.com/ruvnet/flow-nexus#readme",
    "homepage": "https://github.com/ruvnet/flow-nexus",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.ruvnet/flow-nexus",
      "description": "Cloud-powered AI platform with multi-agent swarms, sandboxes, and workflow automation",
      "repository": {
        "url": "https://github.com/ruvnet/flow-nexus",
        "source": "github"
      },
      "version": "0.1.121",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "flow-nexus",
          "version": "0.1.121",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "API key for Flow Nexus authentication",
              "format": "string",
              "isSecret": true,
              "name": "FLOW_NEXUS_API_KEY"
            },
            {
              "description": "Base URL for Flow Nexus API",
              "format": "string",
              "name": "FLOW_NEXUS_BASE_URL"
            },
            {
              "description": "E2B API key for sandbox creation",
              "format": "string",
              "isSecret": true,
              "name": "E2B_API_KEY"
            },
            {
              "description": "Anthropic API key for Claude integration",
              "format": "string",
              "isSecret": true,
              "name": "ANTHROPIC_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.ruvnet-ruv-swarm",
    "name": "io.github.ruvnet/ruv-swarm",
    "description": "Neural network swarm orchestration with WebAssembly acceleration and MCP integration",
    "category": "web",
    "version": "1.0.19",
    "author": "io.github.ruvnet",
    "repository": "https://github.com/ruvnet/ruv-FANN",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install ruv-swarm",
    "documentationUrl": "https://github.com/ruvnet/ruv-FANN#readme",
    "homepage": "https://github.com/ruvnet/ruv-FANN",
    "rawData": {
      "$schema": "",
      "name": "io.github.ruvnet/ruv-swarm",
      "description": "Neural network swarm orchestration with WebAssembly acceleration and MCP integration",
      "repository": {
        "url": "https://github.com/ruvnet/ruv-FANN",
        "source": "github",
        "subfolder": "ruv-swarm"
      },
      "version": "1.0.19",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "ruv-swarm",
          "version": "1.0.19",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Log level for ruv-swarm operations",
              "format": "string",
              "default": "info",
              "choices": [
                "debug",
                "info",
                "warn",
                "error"
              ],
              "name": "RUV_SWARM_LOG_LEVEL"
            },
            {
              "description": "Database path for persistence storage",
              "format": "string",
              "name": "RUV_SWARM_DB_PATH"
            },
            {
              "description": "Enable WebAssembly SIMD optimizations",
              "format": "boolean",
              "default": "true",
              "choices": [
                "true",
                "false"
              ],
              "name": "RUV_SWARM_ENABLE_SIMD"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.ryaker-appstore-connect-mcp",
    "name": "io.github.ryaker/appstore-connect-mcp",
    "description": "MCP server for Apple Store Connect API integration with OAuth authentication support",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.ryaker",
    "repository": "https://github.com/ryaker/appstore-connect-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @ryaker/appstore-connect-mcp",
    "documentationUrl": "https://github.com/ryaker/appstore-connect-mcp#readme",
    "homepage": "https://github.com/ryaker/appstore-connect-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.ryaker/appstore-connect-mcp",
      "description": "MCP server for Apple Store Connect API integration with OAuth authentication support",
      "repository": {
        "url": "https://github.com/ryaker/appstore-connect-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@ryaker/appstore-connect-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Apple App Store Connect API Key ID",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "APPLE_KEY_ID"
            },
            {
              "description": "Apple App Store Connect Issuer ID",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "APPLE_ISSUER_ID"
            },
            {
              "description": "Apple App Store Connect Private Key (base64 encoded or raw)",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "APPLE_PRIVATE_KEY"
            },
            {
              "description": "Optional: Specific Bundle ID to filter apps",
              "format": "string",
              "name": "APPLE_BUNDLE_ID"
            },
            {
              "description": "Optional: Specific App Store ID",
              "format": "string",
              "name": "APPLE_APP_STORE_ID"
            },
            {
              "description": "Enable OAuth authentication (true/false)",
              "format": "string",
              "name": "OAUTH_ENABLED"
            },
            {
              "description": "OAuth issuer URL (e.g., https://your-tenant.auth0.com)",
              "format": "string",
              "name": "OAUTH_ISSUER"
            },
            {
              "description": "OAuth audience URL",
              "format": "string",
              "name": "OAUTH_AUDIENCE"
            },
            {
              "description": "OAuth JWKS URI for token validation",
              "format": "string",
              "name": "OAUTH_JWKS_URI"
            },
            {
              "description": "Server URL for OAuth deployment",
              "format": "string",
              "name": "SERVER_URL"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.ryanbaumann-platform-ai",
    "name": "io.github.ryanbaumann/platform-ai",
    "description": "Google Maps Platform Code Assist MCP",
    "category": "version-control",
    "version": "0.2.0",
    "author": "io.github.ryanbaumann",
    "repository": "https://github.com/googlemaps/platform-ai",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @googlemaps/code-assist-mcp",
    "documentationUrl": "https://github.com/googlemaps/platform-ai#readme",
    "homepage": "https://github.com/googlemaps/platform-ai",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.ryanbaumann/platform-ai",
      "description": "Google Maps Platform Code Assist MCP",
      "repository": {
        "url": "https://github.com/googlemaps/platform-ai",
        "source": "github"
      },
      "version": "0.2.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@googlemaps/code-assist-mcp",
          "version": "0.2.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.sachin-shetty-egnyte-ai-samples",
    "name": "io.github.sachin-shetty/egnyte-ai-samples",
    "description": "Secure integration between AI tools and Egnyte content with search, analysis, and workflow tools.",
    "category": "version-control",
    "version": "1.0.2",
    "author": "io.github.sachin-shetty",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.sachin-shetty/egnyte-ai-samples",
      "description": "Secure integration between AI tools and Egnyte content with search, analysis, and workflow tools.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.2"
    }
  },
  {
    "id": "io.github.saucelabs-sample-test-frameworks-sauce-api-mcp",
    "name": "io.github.saucelabs-sample-test-frameworks/sauce-api-mcp",
    "description": "An open-source MCP server that provides LLM access to the Sauce Labs API",
    "category": "web",
    "version": "1.0.0",
    "author": "io.github.saucelabs-sample-test-frameworks",
    "repository": "https://github.com/saucelabs/sauce-api-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install sauce-api-mcp",
    "documentationUrl": "https://github.com/saucelabs/sauce-api-mcp#readme",
    "homepage": "https://github.com/saucelabs/sauce-api-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.saucelabs-sample-test-frameworks/sauce-api-mcp",
      "description": "An open-source MCP server that provides LLM access to the Sauce Labs API",
      "repository": {
        "url": "https://github.com/saucelabs/sauce-api-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "sauce-api-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "value": "<sauce-user-name>",
              "name": "SAUCE_USERNAME"
            },
            {
              "value": "<sauce-access-key>",
              "name": "SAUCE_ACCESS_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.savhascelik-meta-api-mcp-server",
    "name": "io.github.savhascelik/meta-api-mcp-server",
    "description": "You can connect any API to LLMs. This enables AI to interact directly with APIs",
    "category": "web",
    "version": "1.0.1",
    "author": "io.github.savhascelik",
    "repository": "https://github.com/savhascelik/meta-api-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install meta-api-mcp-server",
    "documentationUrl": "https://github.com/savhascelik/meta-api-mcp-server#readme",
    "homepage": "https://github.com/savhascelik/meta-api-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.savhascelik/meta-api-mcp-server",
      "description": "You can connect any API to LLMs. This enables AI to interact directly with APIs",
      "repository": {
        "url": "https://github.com/savhascelik/meta-api-mcp-server",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "meta-api-mcp-server",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "If the api you are connecting to requires api_key, you can use this variable and you can also define different variables",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.schemacrawler-schemacrawler-ai",
    "name": "io.github.schemacrawler/schemacrawler-ai",
    "description": "Enables natural language schema queries — explore tables, keys, procedures, and get SQL help fast",
    "category": "version-control",
    "version": "v16.29.1-1",
    "author": "io.github.schemacrawler",
    "repository": "https://github.com/schemacrawler/SchemaCrawler-AI",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/schemacrawler/schemacrawler-ai:v16.29.1-1",
    "documentationUrl": "https://github.com/schemacrawler/SchemaCrawler-AI#readme",
    "homepage": "https://github.com/schemacrawler/SchemaCrawler-AI",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.schemacrawler/schemacrawler-ai",
      "description": "Enables natural language schema queries — explore tables, keys, procedures, and get SQL help fast",
      "repository": {
        "url": "https://github.com/schemacrawler/SchemaCrawler-AI",
        "source": "github"
      },
      "version": "v16.29.1-1",
      "websiteUrl": "https://schemacrawler.github.io",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/schemacrawler/schemacrawler-ai:v16.29.1-1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Database user name. Can be optional depending on the database connection type.",
              "format": "string",
              "isSecret": true,
              "name": "SCHCRWLR_DATABASE_USER"
            },
            {
              "description": "Database user password. Can be optional depending on the database connection type.",
              "format": "string",
              "isSecret": true,
              "name": "SCHCRWLR_DATABASE_PASSWORD"
            },
            {
              "description": "JDBC URL for database connection. If this is provided, the server, host, port and database are not used.",
              "format": "string",
              "name": "SCHCRWLR_JDBC_URL"
            },
            {
              "description": "SchemaCrawler database plugin, for example, 'sqlserver' or 'sqlite'. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_SERVER"
            },
            {
              "description": "Database host. Defaults to localhost. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_HOST"
            },
            {
              "description": "Database port. Defaults to the default port for the server type. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_PORT"
            },
            {
              "description": "Database to connect to (optional). Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_DATABASE"
            },
            {
              "description": "How much database metadata to retrieve. Values are 'minimum', 'standard', 'detailed' or 'maximum'.",
              "format": "string",
              "name": "SCHCRWLR_INFO_LEVEL"
            },
            {
              "description": "Logging verbosity level. Values are 'SEVERE', 'WARNING', 'INFO', 'CONFIG', or 'FINE'.",
              "format": "string",
              "name": "SCHCRWLR_LOG_LEVEL"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.sellisd-mcp-units",
    "name": "io.github.sellisd/mcp-units",
    "description": "An MCP server that provides some common units conversions for cooking",
    "category": "version-control",
    "version": "0.3.3",
    "author": "io.github.sellisd",
    "repository": "https://github.com/sellisd/mcp-units",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-units",
    "documentationUrl": "https://github.com/sellisd/mcp-units#readme",
    "homepage": "https://github.com/sellisd/mcp-units",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.sellisd/mcp-units",
      "description": "An MCP server that provides some common units conversions for cooking",
      "repository": {
        "url": "https://github.com/sellisd/mcp-units",
        "source": "github"
      },
      "version": "0.3.3",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-units",
          "version": "0.3.3",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.shalevshalit-image-recognition-mcp",
    "name": "io.github.shalevshalit/image-recognition-mcp",
    "description": "MCP server for AI-powered image recognition and description using OpenAI vision models.",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.shalevshalit",
    "repository": "https://github.com/mcp-s-ai/image-recognition-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install image-recognition-mcp",
    "documentationUrl": "https://github.com/mcp-s-ai/image-recognition-mcp#readme",
    "homepage": "https://github.com/mcp-s-ai/image-recognition-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.shalevshalit/image-recognition-mcp",
      "description": "MCP server for AI-powered image recognition and description using OpenAI vision models.",
      "repository": {
        "url": "https://github.com/mcp-s-ai/image-recognition-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "image-recognition-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your OpenAI API key for image recognition and description services",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "OPENAI_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.shalevshalit-image-recongnition-mcp",
    "name": "io.github.shalevshalit/image-recongnition-mcp",
    "description": "MCP server for AI-powered image recognition and description using OpenAI vision models.",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.shalevshalit",
    "repository": "https://github.com/mcp-s-ai/image-recongnition-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install image-recongnition-mcp",
    "documentationUrl": "https://github.com/mcp-s-ai/image-recongnition-mcp#readme",
    "homepage": "https://github.com/mcp-s-ai/image-recongnition-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.shalevshalit/image-recongnition-mcp",
      "description": "MCP server for AI-powered image recognition and description using OpenAI vision models.",
      "repository": {
        "url": "https://github.com/mcp-s-ai/image-recongnition-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "image-recongnition-mcp",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your OpenAI API key for image recognition and description services",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "OPENAI_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.sharksalesinfo-blip-portfolio",
    "name": "io.github.sharksalesinfo-blip/portfolio",
    "description": "Marketing strateeg portfolio met AI kennisbank voor marketing, sales en strategie inzichten.",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.sharksalesinfo-blip",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://sharksalesinfo-blip.github.io/mcp-server",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.sharksalesinfo-blip/portfolio",
      "description": "Marketing strateeg portfolio met AI kennisbank voor marketing, sales en strategie inzichten.",
      "title": "SharkSales Portfolio & Kennisbank",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://sharksalesinfo-blip.github.io/mcp-server"
        }
      ]
    }
  },
  {
    "id": "io.github.shinpr-mcp-image",
    "name": "io.github.shinpr/mcp-image",
    "description": "AI image generation MCP server using Nano Banana with intelligent prompt enhancement",
    "category": "version-control",
    "version": "0.2.3",
    "author": "io.github.shinpr",
    "repository": "https://github.com/shinpr/mcp-image",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-image",
    "documentationUrl": "https://github.com/shinpr/mcp-image#readme",
    "homepage": "https://github.com/shinpr/mcp-image",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.shinpr/mcp-image",
      "description": "AI image generation MCP server using Nano Banana with intelligent prompt enhancement",
      "repository": {
        "url": "https://github.com/shinpr/mcp-image",
        "source": "github"
      },
      "version": "0.2.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-image",
          "version": "0.2.3",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Google Gemini API key for image generation (get from https://aistudio.google.com/apikey)",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "GEMINI_API_KEY"
            },
            {
              "description": "Absolute path to directory where generated images will be saved (defaults to ./output)",
              "format": "string",
              "name": "IMAGE_OUTPUT_DIR"
            },
            {
              "description": "Set to 'true' to disable automatic prompt optimization and use direct prompts",
              "format": "boolean",
              "name": "SKIP_PROMPT_ENHANCEMENT"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.simplemindedbot-mnemex",
    "name": "io.github.simplemindedbot/mnemex",
    "description": "Temporal memory for AI with decay and reinforcement. Two-layer storage (JSONL + Markdown).",
    "category": "version-control",
    "version": "0.5.2",
    "author": "io.github.simplemindedbot",
    "repository": "https://github.com/simplemindedbot/mnemex",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mnemex",
    "documentationUrl": "https://github.com/simplemindedbot/mnemex#readme",
    "homepage": "https://github.com/simplemindedbot/mnemex",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.simplemindedbot/mnemex",
      "description": "Temporal memory for AI with decay and reinforcement. Two-layer storage (JSONL + Markdown).",
      "repository": {
        "url": "https://github.com/simplemindedbot/mnemex",
        "source": "github"
      },
      "version": "0.5.2",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "mnemex",
          "version": "0.5.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Storage path for short-term memory JSONL files",
              "format": "string",
              "default": "~/.config/mnemex/jsonl",
              "name": "MNEMEX_STORAGE_PATH"
            },
            {
              "description": "Path to Obsidian vault for long-term memory",
              "format": "string",
              "name": "LTM_VAULT_PATH"
            },
            {
              "description": "Decay model: power_law (default), exponential, or two_component",
              "format": "string",
              "default": "power_law",
              "name": "MNEMEX_DECAY_MODEL"
            },
            {
              "description": "Half-life in days for power-law decay model",
              "format": "number",
              "default": "3.0",
              "name": "MNEMEX_PL_HALFLIFE_DAYS"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.spences10-mcp-omnisearch",
    "name": "io.github.spences10/mcp-omnisearch",
    "description": "MCP server for integrating Omnisearch with LLMs",
    "category": "version-control",
    "version": "0.0.15",
    "author": "io.github.spences10",
    "repository": "https://github.com/spences10/mcp-omnisearch",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-omnisearch",
    "documentationUrl": "https://github.com/spences10/mcp-omnisearch#readme",
    "homepage": "https://github.com/spences10/mcp-omnisearch",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.spences10/mcp-omnisearch",
      "description": "MCP server for integrating Omnisearch with LLMs",
      "repository": {
        "url": "https://github.com/spences10/mcp-omnisearch",
        "source": "github"
      },
      "version": "0.0.15",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-omnisearch",
          "version": "0.0.15",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.spences10-mcp-sqlite-tools",
    "name": "io.github.spences10/mcp-sqlite-tools",
    "description": "MCP server for local SQLite database operations",
    "category": "database",
    "version": "0.0.11",
    "author": "io.github.spences10",
    "repository": "https://github.com/spences10/mcp-sqlite-tools",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-sqlite-tools",
    "documentationUrl": "https://github.com/spences10/mcp-sqlite-tools#readme",
    "homepage": "https://github.com/spences10/mcp-sqlite-tools",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.spences10/mcp-sqlite-tools",
      "description": "MCP server for local SQLite database operations",
      "repository": {
        "url": "https://github.com/spences10/mcp-sqlite-tools",
        "source": "github"
      },
      "version": "0.0.11",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-sqlite-tools",
          "version": "0.0.11",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.spences10-mcp-turso-cloud",
    "name": "io.github.spences10/mcp-turso-cloud",
    "description": "MCP server for integrating Turso with LLMs",
    "category": "version-control",
    "version": "0.0.9",
    "author": "io.github.spences10",
    "repository": "https://github.com/spences10/mcp-turso-cloud",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-turso-cloud",
    "documentationUrl": "https://github.com/spences10/mcp-turso-cloud#readme",
    "homepage": "https://github.com/spences10/mcp-turso-cloud",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.spences10/mcp-turso-cloud",
      "description": "MCP server for integrating Turso with LLMs",
      "repository": {
        "url": "https://github.com/spences10/mcp-turso-cloud",
        "source": "github"
      },
      "version": "0.0.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-turso-cloud",
          "version": "0.0.9",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Turso Platform API token for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TURSO_API_TOKEN"
            },
            {
              "description": "Turso organization name",
              "isRequired": true,
              "format": "string",
              "name": "TURSO_ORGANIZATION"
            },
            {
              "description": "Default database name (optional)",
              "format": "string",
              "name": "TURSO_DEFAULT_DATABASE"
            },
            {
              "description": "Token expiration time (default: 7d)",
              "format": "string",
              "name": "TOKEN_EXPIRATION"
            },
            {
              "description": "Default token permission level (default: full-access)",
              "format": "string",
              "name": "TOKEN_PERMISSION"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.srikrishna235-scrimba-teaching-mcp",
    "name": "io.github.srikrishna235/scrimba-teaching-mcp",
    "description": "Unified MCP for Scrimba's interactive programming education with visual learning",
    "category": "version-control",
    "version": "3.0.4",
    "author": "io.github.srikrishna235",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install scrimba-teaching-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.srikrishna235/scrimba-teaching-mcp",
      "description": "Unified MCP for Scrimba's interactive programming education with visual learning",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "3.0.4",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "scrimba-teaching-mcp",
          "version": "3.0.4",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.srprasanna-mcp-skill-hub",
    "name": "io.github.srprasanna/mcp-skill-hub",
    "description": "MCP server that loads and serves skills from a mounted directory with hot reload.",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.srprasanna",
    "repository": "https://github.com/srprasanna/mcp-skill-hub",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/srprasanna/mcp-skill-hub:1.0.0",
    "documentationUrl": "https://github.com/srprasanna/mcp-skill-hub#readme",
    "homepage": "https://github.com/srprasanna/mcp-skill-hub",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.srprasanna/mcp-skill-hub",
      "description": "MCP server that loads and serves skills from a mounted directory with hot reload.",
      "title": "MCP Skills Server",
      "repository": {
        "url": "https://github.com/srprasanna/mcp-skill-hub",
        "source": "github"
      },
      "version": "1.0.0",
      "websiteUrl": "https://srprasanna.github.io/mcp-skill-hub",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/srprasanna/mcp-skill-hub:1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Root directory containing skill folders",
              "default": "/skills",
              "name": "MCP_SKILLS_DIR"
            },
            {
              "description": "Enable automatic reloading when SKILL.md files change",
              "default": "true",
              "name": "MCP_SKILLS_HOT_RELOAD"
            },
            {
              "description": "Logging verbosity: DEBUG, INFO, WARNING, ERROR, CRITICAL",
              "default": "INFO",
              "name": "MCP_SKILLS_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/publisher-provided": {
          "migratedFrom": "https://registry.modelcontextprotocol.io/schema/server.json"
        }
      }
    }
  },
  {
    "id": "io.github.srprasanna-mcp-skills-server",
    "name": "io.github.srprasanna/mcp-skills-server",
    "description": "MCP server that loads and serves skills from a mounted directory with hot reload.",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.srprasanna",
    "repository": "https://github.com/srprasanna/mcp-skill-hub",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/srprasanna/mcp-skills-server:1.0.0",
    "documentationUrl": "https://github.com/srprasanna/mcp-skill-hub#readme",
    "homepage": "https://github.com/srprasanna/mcp-skill-hub",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.srprasanna/mcp-skills-server",
      "description": "MCP server that loads and serves skills from a mounted directory with hot reload.",
      "title": "MCP Skills Server",
      "repository": {
        "url": "https://github.com/srprasanna/mcp-skill-hub",
        "source": "github"
      },
      "version": "1.0.0",
      "websiteUrl": "https://srprasanna.github.io/mcp-skill-hub",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/srprasanna/mcp-skills-server:1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Root directory containing skill folders",
              "default": "/skills",
              "name": "MCP_SKILLS_DIR"
            },
            {
              "description": "Enable automatic reloading when SKILL.md files change",
              "default": "true",
              "name": "MCP_SKILLS_HOT_RELOAD"
            },
            {
              "description": "Logging verbosity: DEBUG, INFO, WARNING, ERROR, CRITICAL",
              "default": "INFO",
              "name": "MCP_SKILLS_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/publisher-provided": {
          "migratedFrom": "https://registry.modelcontextprotocol.io/schema/server.json"
        }
      }
    }
  },
  {
    "id": "io.github.stefanoamorelli-fred-mcp-server",
    "name": "io.github.stefanoamorelli/fred-mcp-server",
    "description": "Federal Reserve Economic Data (FRED) MCP Server - Access all 800,000+ economic time series",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.stefanoamorelli",
    "repository": "https://github.com/stefanoamorelli/fred-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install fred-mcp-server",
    "documentationUrl": "https://github.com/stefanoamorelli/fred-mcp-server#readme",
    "homepage": "https://github.com/stefanoamorelli/fred-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.stefanoamorelli/fred-mcp-server",
      "description": "Federal Reserve Economic Data (FRED) MCP Server - Access all 800,000+ economic time series",
      "repository": {
        "url": "https://github.com/stefanoamorelli/fred-mcp-server",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "fred-mcp-server",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your FRED API key to access the API",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "FRED_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.stefanoamorelli-sec-edgar-mcp",
    "name": "io.github.stefanoamorelli/sec-edgar-mcp",
    "description": "SEC EDGAR MCP server that provides access to the US public filings through the US SEC EDGAR API",
    "category": "version-control",
    "version": "1.0.5",
    "author": "io.github.stefanoamorelli",
    "repository": "https://github.com/stefanoamorelli/sec-edgar-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install sec-edgar-mcp",
    "documentationUrl": "https://github.com/stefanoamorelli/sec-edgar-mcp#readme",
    "homepage": "https://github.com/stefanoamorelli/sec-edgar-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.stefanoamorelli/sec-edgar-mcp",
      "description": "SEC EDGAR MCP server that provides access to the US public filings through the US SEC EDGAR API",
      "repository": {
        "url": "https://github.com/stefanoamorelli/sec-edgar-mcp",
        "source": "github"
      },
      "version": "1.0.5",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "sec-edgar-mcp",
          "version": "1.0.5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "The user agent to access the SEC EDGAR API",
              "isRequired": true,
              "format": "string",
              "name": "SEC_EDGAR_USER_AGENT"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.surendranb-google-analytics-mcp",
    "name": "io.github.surendranb/google-analytics-mcp",
    "description": "An MCP server that provides [describe what your server does]",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.surendranb",
    "repository": "https://github.com/surendranb/google-analytics-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install google-analytics-mcp",
    "documentationUrl": "https://github.com/surendranb/google-analytics-mcp#readme",
    "homepage": "https://github.com/surendranb/google-analytics-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.surendranb/google-analytics-mcp",
      "description": "An MCP server that provides [describe what your server does]",
      "repository": {
        "url": "https://github.com/surendranb/google-analytics-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "google-analytics-mcp",
          "version": "1.2.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.svnscha-mcp-windbg",
    "name": "io.github.svnscha/mcp-windbg",
    "description": "A Model Context Protocol server for Windows crash dump analysis using WinDbg/CDB",
    "category": "version-control",
    "version": "0.10.0",
    "author": "io.github.svnscha",
    "repository": "https://github.com/svnscha/mcp-windbg",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-windbg",
    "documentationUrl": "https://github.com/svnscha/mcp-windbg#readme",
    "homepage": "https://github.com/svnscha/mcp-windbg",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.svnscha/mcp-windbg",
      "description": "A Model Context Protocol server for Windows crash dump analysis using WinDbg/CDB",
      "repository": {
        "url": "https://github.com/svnscha/mcp-windbg",
        "source": "github"
      },
      "version": "0.10.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-windbg",
          "version": "0.10.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Custom path to cdb.exe (optional)",
              "format": "string",
              "name": "CDB_PATH"
            },
            {
              "description": "Symbol path for Windows debugging (optional, defaults to Microsoft symbol server)",
              "format": "string",
              "name": "_NT_SYMBOL_PATH"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.taurgis-sfcc-dev-mcp",
    "name": "io.github.taurgis/sfcc-dev-mcp",
    "description": "MCP server for Salesforce B2C Commerce Cloud development assistance",
    "category": "version-control",
    "version": "1.0.14",
    "author": "io.github.taurgis",
    "repository": "https://github.com/taurgis/sfcc-dev-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install sfcc-dev-mcp",
    "documentationUrl": "https://github.com/taurgis/sfcc-dev-mcp#readme",
    "homepage": "https://github.com/taurgis/sfcc-dev-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.taurgis/sfcc-dev-mcp",
      "description": "MCP server for Salesforce B2C Commerce Cloud development assistance",
      "repository": {
        "url": "https://github.com/taurgis/sfcc-dev-mcp",
        "source": "github"
      },
      "version": "1.0.14",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "sfcc-dev-mcp",
          "version": "1.0.14",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.taylorleese-mcp-toolz",
    "name": "io.github.taylorleese/mcp-toolz",
    "description": "Context management, todo persistence, and multi-AI perspectives for Claude Code",
    "category": "version-control",
    "version": "0.3.2",
    "author": "io.github.taylorleese",
    "repository": "https://github.com/taylorleese/mcp-toolz",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-toolz",
    "documentationUrl": "https://github.com/taylorleese/mcp-toolz#readme",
    "homepage": "https://github.com/taylorleese/mcp-toolz",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.taylorleese/mcp-toolz",
      "description": "Context management, todo persistence, and multi-AI perspectives for Claude Code",
      "repository": {
        "url": "https://github.com/taylorleese/mcp-toolz",
        "source": "github"
      },
      "version": "0.3.2",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "mcp-toolz",
          "version": "0.3.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "OpenAI API key for ChatGPT second opinions",
              "format": "string",
              "isSecret": true,
              "name": "OPENAI_API_KEY"
            },
            {
              "description": "Anthropic API key for Claude second opinions",
              "format": "string",
              "isSecret": true,
              "name": "ANTHROPIC_API_KEY"
            },
            {
              "description": "Google API key for Gemini second opinions",
              "format": "string",
              "isSecret": true,
              "name": "GOOGLE_API_KEY"
            },
            {
              "description": "DeepSeek API key for DeepSeek second opinions",
              "format": "string",
              "isSecret": true,
              "name": "DEEPSEEK_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.tcehjaava-tmdb-mcp-server",
    "name": "io.github.tcehjaava/tmdb-mcp-server",
    "description": "MCP server for The Movie Database (TMDB) API",
    "category": "database",
    "version": "0.1.1",
    "author": "io.github.tcehjaava",
    "repository": "https://github.com/tcehjaava/tmdb-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install tmdb-mcp-server",
    "documentationUrl": "https://github.com/tcehjaava/tmdb-mcp-server#readme",
    "homepage": "https://github.com/tcehjaava/tmdb-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.tcehjaava/tmdb-mcp-server",
      "description": "MCP server for The Movie Database (TMDB) API",
      "repository": {
        "url": "https://github.com/tcehjaava/tmdb-mcp-server",
        "source": "github"
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "tmdb-mcp-server",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "TMDB API access token (get free at https://www.themoviedb.org/settings/api)",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TMDB_ACCESS_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.team-earth-datagraph",
    "name": "io.github.team-earth/datagraph",
    "description": "Urban data for civic problem-solving: NYC subway, loneliness programs, violence prevention.",
    "category": "version-control",
    "version": "1.1.6",
    "author": "io.github.team-earth",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install datagraph-city-mcp-server",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.team-earth/datagraph",
      "description": "Urban data for civic problem-solving: NYC subway, loneliness programs, violence prevention.",
      "title": "DataGraph",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.1.6",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "datagraph-city-mcp-server",
          "version": "1.1.6",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.team-telnyx-telnyx",
    "name": "io.github.team-telnyx/telnyx",
    "description": "Official TypeScript library for the Telnyx API",
    "category": "version-control",
    "version": "3.3.3",
    "author": "io.github.team-telnyx",
    "repository": "https://github.com/team-telnyx/telnyx-node",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install telnyx",
    "documentationUrl": "https://github.com/team-telnyx/telnyx-node#readme",
    "homepage": "https://github.com/team-telnyx/telnyx-node",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.team-telnyx/telnyx",
      "description": "Official TypeScript library for the Telnyx API",
      "repository": {
        "url": "https://github.com/team-telnyx/telnyx-node",
        "source": "github"
      },
      "version": "3.3.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "telnyx",
          "version": "3.3.3",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Telnyx API key for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TELNYX_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.tech-sushant-calculator-mcp",
    "name": "io.github.tech-sushant/calculator-mcp",
    "description": "A simple Model Context Protocol calculator server",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.tech-sushant",
    "repository": "https://github.com/tech-sushant/calculator-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @tech-sushant/calculator-mcp",
    "documentationUrl": "https://github.com/tech-sushant/calculator-mcp#readme",
    "homepage": "https://github.com/tech-sushant/calculator-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.tech-sushant/calculator-mcp",
      "description": "A simple Model Context Protocol calculator server",
      "repository": {
        "url": "https://github.com/tech-sushant/calculator-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@tech-sushant/calculator-mcp",
          "version": "1.0.3",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.tedfytw1209-mcp-server-EVEfleet",
    "name": "io.github.tedfytw1209/mcp-server-EVEfleet",
    "description": "An MCP server that provides tools for EVE Online players to manage their fleets",
    "category": "version-control",
    "version": "1.0.2",
    "author": "io.github.tedfytw1209",
    "repository": "https://github.com/tedfytw1209/mcp-server-EVEfleet",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mcp-server-evefleet",
    "documentationUrl": "https://github.com/tedfytw1209/mcp-server-EVEfleet#readme",
    "homepage": "https://github.com/tedfytw1209/mcp-server-EVEfleet",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.tedfytw1209/mcp-server-EVEfleet",
      "description": "An MCP server that provides tools for EVE Online players to manage their fleets",
      "repository": {
        "url": "https://github.com/tedfytw1209/mcp-server-EVEfleet",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-server-evefleet",
          "version": "0.1.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.thechandanbhagat-cv-forge",
    "name": "io.github.thechandanbhagat/cv-forge",
    "description": "Forge powerful, ATS-friendly CVs tailored to any job - an MCP server for intelligent CV generation",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.thechandanbhagat",
    "repository": "https://github.com/thechandanbhagat/cv-forge",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install cv-forge",
    "documentationUrl": "https://github.com/thechandanbhagat/cv-forge#readme",
    "homepage": "https://github.com/thechandanbhagat/cv-forge",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.thechandanbhagat/cv-forge",
      "description": "Forge powerful, ATS-friendly CVs tailored to any job - an MCP server for intelligent CV generation",
      "title": "CV Forge",
      "repository": {
        "url": "https://github.com/thechandanbhagat/cv-forge",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "cv-forge",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.therealtimex-browser-use",
    "name": "io.github.therealtimex/browser-use",
    "description": "AI browser automation - navigate, click, type, extract content, and run autonomous web tasks",
    "category": "web",
    "version": "0.7.10",
    "author": "io.github.therealtimex",
    "repository": "https://github.com/therealtimex/browser-use",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install realtimex-browser-use",
    "documentationUrl": "https://github.com/therealtimex/browser-use#readme",
    "homepage": "https://github.com/therealtimex/browser-use",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.therealtimex/browser-use",
      "description": "AI browser automation - navigate, click, type, extract content, and run autonomous web tasks",
      "repository": {
        "url": "https://github.com/therealtimex/browser-use",
        "source": "github",
        "subfolder": "browser_use/mcp"
      },
      "version": "0.7.10",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "realtimex-browser-use",
          "version": "0.7.10",
          "runtimeHint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "value": "realtimex-browser-use[cli]@0.7.10",
              "type": "positional"
            }
          ],
          "packageArguments": [
            {
              "value": "--mcp",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "OpenAI API key for LLM operations",
              "isRequired": true,
              "isSecret": true,
              "name": "OPENAI_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.therealtimex-charts-mcp",
    "name": "io.github.therealtimex/charts-mcp",
    "description": "MCP server for generating charts using AntV. Supports various chart types through MCP tools.",
    "category": "version-control",
    "version": "2.0.6",
    "author": "io.github.therealtimex",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @realtimex/charts-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.therealtimex/charts-mcp",
      "description": "MCP server for generating charts using AntV. Supports various chart types through MCP tools.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.6",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@realtimex/charts-mcp",
          "version": "2.0.6",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.therealtimex-un-datacommons-mcp",
    "name": "io.github.therealtimex/un-datacommons-mcp",
    "description": "MCP server to query Data Commons indicators and observations (base or custom).",
    "category": "version-control",
    "version": "1.0.1",
    "author": "io.github.therealtimex",
    "repository": "https://github.com/therealtimex/un-datacommons-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install un-datacommons-mcp",
    "documentationUrl": "https://github.com/therealtimex/un-datacommons-mcp#readme",
    "homepage": "https://github.com/therealtimex/un-datacommons-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.therealtimex/un-datacommons-mcp",
      "description": "MCP server to query Data Commons indicators and observations (base or custom).",
      "repository": {
        "url": "https://github.com/therealtimex/un-datacommons-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "un-datacommons-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Data Commons API key from apikeys.datacommons.org",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "DC_API_KEY"
            },
            {
              "description": "Type of Data Commons to use: base|custom (default: base)",
              "format": "string",
              "name": "DC_TYPE"
            },
            {
              "description": "Custom DC base URL when DC_TYPE=custom",
              "format": "string",
              "name": "CUSTOM_DC_URL"
            },
            {
              "description": "Comma-separated root topic DCIDs for custom DCs",
              "format": "string",
              "name": "DC_ROOT_TOPIC_DCIDS"
            },
            {
              "description": "Search scope for custom DCs: base_only|custom_only|base_and_custom",
              "format": "string",
              "name": "DC_SEARCH_SCOPE"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.timheuer-sampledotnetmcpserver",
    "name": "io.github.timheuer/sampledotnetmcpserver",
    "description": "Sample .NET MCP Server",
    "category": "version-control",
    "version": "0.1.57-beta",
    "author": "io.github.timheuer",
    "repository": "https://github.com/timheuer/sampledotnetmcpserver",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/timheuer/sampledotnetmcpserver#readme",
    "homepage": "https://github.com/timheuer/sampledotnetmcpserver",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.57-beta",
      "packages": [
        {
          "registryType": "nuget",
          "registryBaseUrl": "https://api.nuget.org",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.57-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.tjhop-prometheus-mcp-server",
    "name": "io.github.tjhop/prometheus-mcp-server",
    "description": "An API-complete MCP server to manage Prometheus-compatible backends via comprehensive tools.",
    "category": "version-control",
    "version": "0.9.0",
    "author": "io.github.tjhop",
    "repository": "https://github.com/tjhop/prometheus-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull ghcr.io/tjhop/prometheus-mcp-server:0.9.0",
    "documentationUrl": "https://github.com/tjhop/prometheus-mcp-server#readme",
    "homepage": "https://github.com/tjhop/prometheus-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.tjhop/prometheus-mcp-server",
      "description": "An API-complete MCP server to manage Prometheus-compatible backends via comprehensive tools.",
      "repository": {
        "url": "https://github.com/tjhop/prometheus-mcp-server",
        "source": "github"
      },
      "version": "0.9.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "ghcr.io/tjhop/prometheus-mcp-server:0.9.0",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "description": "The runtime command to execute",
              "value": "run",
              "type": "positional"
            },
            {
              "description": "Run container in interactive mode",
              "type": "named",
              "name": "-i"
            },
            {
              "description": "Automatically remove the container when it exits",
              "type": "named",
              "name": "--rm"
            },
            {
              "description": "Set an environment variable in the runtime",
              "type": "named",
              "name": "-e"
            },
            {
              "description": "Environment variable name",
              "value": "PROMETHEUS_MCP_SERVER_PROMETHEUS_URL",
              "type": "positional",
              "valueHint": "env_var_name"
            },
            {
              "description": "The container image to run",
              "value": "ghcr.io/tjhop/prometheus-mcp-server",
              "type": "positional",
              "valueHint": "image_name"
            }
          ],
          "environmentVariables": [
            {
              "description": "URL of the Prometheus instance to connect to (default: \"http://127.0.0.1:9090\")",
              "isRequired": true,
              "format": "string",
              "name": "PROMETHEUS_MCP_SERVER_PROMETHEUS_URL"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.toby-mirror-mcp",
    "name": "io.github.toby/mirror-mcp",
    "description": "Mirror MCP: Introspection for LLMs",
    "category": "version-control",
    "version": "0.0.8",
    "author": "io.github.toby",
    "repository": "https://github.com/toby/mirror-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mirror-mcp",
    "documentationUrl": "https://github.com/toby/mirror-mcp#readme",
    "homepage": "https://github.com/toby/mirror-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.toby/mirror-mcp",
      "description": "Mirror MCP: Introspection for LLMs",
      "repository": {
        "url": "https://github.com/toby/mirror-mcp",
        "source": "github"
      },
      "version": "0.0.8",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "mirror-mcp",
          "version": "0.0.8",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "description": "Runtime argument 1",
              "format": "string",
              "value": "mirror-mcp@latest",
              "default": "mirror-mcp@latest",
              "type": "positional",
              "valueHint": "mirror-mcp@latest"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.tschoonj-repology-mcp-server",
    "name": "io.github.tschoonj/repology-mcp-server",
    "description": "MCP server that provides access to Repology package repository data",
    "category": "version-control",
    "version": "0.1.1",
    "author": "io.github.tschoonj",
    "repository": "https://github.com/tschoonj/repology-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install repology-mcp-server",
    "documentationUrl": "https://github.com/tschoonj/repology-mcp-server#readme",
    "homepage": "https://github.com/tschoonj/repology-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.tschoonj/repology-mcp-server",
      "description": "MCP server that provides access to Repology package repository data",
      "repository": {
        "url": "https://github.com/tschoonj/repology-mcp-server",
        "source": "github"
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "repology-mcp-server",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "oci",
          "identifier": "ghcr.io/tschoonj/repology-mcp-server:0.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.tuananh-hyper-mcp",
    "name": "io.github.tuananh/hyper-mcp",
    "description": "📦️ A fast, secure MCP server that extends its capabilities through WebAssembly plugins",
    "category": "web",
    "version": "1.0.0",
    "author": "io.github.tuananh",
    "repository": "https://github.com/tuananh/hyper-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/tuananh/hyper-mcp:v0.1.6",
    "documentationUrl": "https://github.com/tuananh/hyper-mcp#readme",
    "homepage": "https://github.com/tuananh/hyper-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.tuananh/hyper-mcp",
      "description": "📦️ A fast, secure MCP server that extends its capabilities through WebAssembly plugins",
      "repository": {
        "url": "https://github.com/tuananh/hyper-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/tuananh/hyper-mcp:v0.1.6",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.tuannvm-mcp-trino",
    "name": "io.github.tuannvm/mcp-trino",
    "description": "MCP server for Trino distributed SQL query engine access",
    "category": "version-control",
    "version": "2.2.1",
    "author": "io.github.tuannvm",
    "repository": "https://github.com/tuannvm/mcp-trino",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/tuannvm/mcp-trino#readme",
    "homepage": "https://github.com/tuannvm/mcp-trino",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.tuannvm/mcp-trino",
      "description": "MCP server for Trino distributed SQL query engine access",
      "repository": {
        "url": "https://github.com/tuannvm/mcp-trino",
        "source": "github"
      },
      "version": "2.2.1",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/tuannvm/mcp-trino/releases/download/v2.2.1/mcp-trino_2.2.1_darwin_arm64.tar.gz",
          "fileSha256": "1a18882ab43243e17420f3562118a4c3e7fff12bc6b145066ae64b90b2dc0159",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Trino server hostname",
              "isRequired": true,
              "format": "string",
              "name": "TRINO_HOST"
            },
            {
              "description": "Trino server port",
              "format": "string",
              "name": "TRINO_PORT"
            },
            {
              "description": "Trino username",
              "isRequired": true,
              "format": "string",
              "name": "TRINO_USER"
            },
            {
              "description": "Trino password",
              "format": "string",
              "isSecret": true,
              "name": "TRINO_PASSWORD"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.ubaumann-mkdocs-mcp",
    "name": "io.github.ubaumann/mkdocs-mcp",
    "description": "An MCP server that provides serves MkDocs as resources.",
    "category": "version-control",
    "version": "0.1.2",
    "author": "io.github.ubaumann",
    "repository": "https://github.com/ubaumann/mkdocs-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install mkdocs-mcp",
    "documentationUrl": "https://github.com/ubaumann/mkdocs-mcp#readme",
    "homepage": "https://github.com/ubaumann/mkdocs-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.ubaumann/mkdocs-mcp",
      "description": "An MCP server that provides serves MkDocs as resources.",
      "repository": {
        "url": "https://github.com/ubaumann/mkdocs-mcp",
        "source": "github"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mkdocs-mcp",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Path to the MkDocs project",
              "isRequired": true,
              "format": "string",
              "name": "MKDOCS_PROJECT_PATH"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.upstash-context7",
    "name": "io.github.upstash/context7",
    "description": "Up-to-date code docs for any prompt",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.upstash",
    "repository": "https://github.com/upstash/context7",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @upstash/context7-mcp",
    "documentationUrl": "https://github.com/upstash/context7#readme",
    "homepage": "https://github.com/upstash/context7",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.upstash/context7",
      "description": "Up-to-date code docs for any prompt",
      "title": "Context7",
      "repository": {
        "url": "https://github.com/upstash/context7",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@upstash/context7-mcp",
          "version": "1.0.25",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "API key for authentication",
              "format": "string",
              "isSecret": true,
              "name": "CONTEXT7_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.vardior9-apiiro",
    "name": "io.github.vardior9/apiiro",
    "description": "Ship software securely with an AI AppSec Agent",
    "category": "web",
    "version": "0.1.0",
    "author": "io.github.vardior9",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.vardior9/apiiro",
      "description": "Ship software securely with an AI AppSec Agent",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0"
    }
  },
  {
    "id": "io.github.variflight-variflight-mcp",
    "name": "io.github.variflight/variflight-mcp",
    "description": "VariFlight's official MCP server provides tools to query flight, weather, comfort, and fare data.",
    "category": "version-control",
    "version": "1.0.2",
    "author": "io.github.variflight",
    "repository": "https://github.com/variflight/variflight-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @variflight-ai/variflight-mcp",
    "documentationUrl": "https://github.com/variflight/variflight-mcp#readme",
    "homepage": "https://github.com/variflight/variflight-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.variflight/variflight-mcp",
      "description": "VariFlight's official MCP server provides tools to query flight, weather, comfort, and fare data.",
      "repository": {
        "url": "https://github.com/variflight/variflight-mcp",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@variflight-ai/variflight-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "VARIFLIGHT_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.vemonet-openroute-mcp",
    "name": "io.github.vemonet/openroute-mcp",
    "description": "Plan routes using OpenRouteService API, for activities such as hiking or mountain biking",
    "category": "version-control",
    "version": "0.0.3",
    "author": "io.github.vemonet",
    "repository": "https://github.com/vemonet/openroute-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install openroute-mcp",
    "documentationUrl": "https://github.com/vemonet/openroute-mcp#readme",
    "homepage": "https://github.com/vemonet/openroute-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.vemonet/openroute-mcp",
      "description": "Plan routes using OpenRouteService API, for activities such as hiking or mountain biking",
      "repository": {
        "url": "https://github.com/vemonet/openroute-mcp",
        "source": "github"
      },
      "version": "0.0.3",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "openroute-mcp",
          "version": "0.0.3",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for https://api.openrouteservice.org",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "OPENROUTESERVICE_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.vercel-next-devtools-mcp",
    "name": "io.github.vercel/next-devtools-mcp",
    "description": "Next.js development tools MCP server with stdio transport",
    "category": "version-control",
    "version": "0.2.1",
    "author": "io.github.vercel",
    "repository": "https://github.com/vercel/next-devtools-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install next-devtools-mcp",
    "documentationUrl": "https://github.com/vercel/next-devtools-mcp#readme",
    "homepage": "https://github.com/vercel/next-devtools-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.vercel/next-devtools-mcp",
      "description": "Next.js development tools MCP server with stdio transport",
      "repository": {
        "url": "https://github.com/vercel/next-devtools-mcp",
        "source": "github"
      },
      "version": "0.2.1",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "next-devtools-mcp",
          "version": "0.2.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.vfarcic-dot-ai",
    "name": "io.github.vfarcic/dot-ai",
    "description": "AI-powered development platform for Kubernetes deployments and intelligent automation",
    "category": "version-control",
    "version": "0.112.0",
    "author": "io.github.vfarcic",
    "repository": "https://github.com/vfarcic/dot-ai",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @vfarcic/dot-ai",
    "documentationUrl": "https://github.com/vfarcic/dot-ai#readme",
    "homepage": "https://github.com/vfarcic/dot-ai",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.vfarcic/dot-ai",
      "description": "AI-powered development platform for Kubernetes deployments and intelligent automation",
      "repository": {
        "url": "https://github.com/vfarcic/dot-ai",
        "source": "github"
      },
      "version": "0.112.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@vfarcic/dot-ai",
          "version": "0.112.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.vinur1992-testing_repo",
    "name": "io.github.vinur1992/testing_repo",
    "description": "An MCP server that created for demo",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.vinur1992",
    "repository": "https://github.com/vinur1992/testing_repo",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "other",
    "installCommand": "",
    "documentationUrl": "https://github.com/vinur1992/testing_repo#readme",
    "homepage": "https://github.com/vinur1992/testing_repo",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.vinur1992/testing_repo",
      "description": "An MCP server that created for demo",
      "repository": {
        "url": "https://github.com/vinur1992/testing_repo",
        "source": "github"
      },
      "version": "1.0.0"
    }
  },
  {
    "id": "io.github.vishalsachdev-canvas-mcp",
    "name": "io.github.vishalsachdev/canvas-mcp",
    "description": "Canvas LMS integration for students and educators with FERPA-compliant analytics and workflows",
    "category": "version-control",
    "version": "1.0.2",
    "author": "io.github.vishalsachdev",
    "repository": "https://github.com/vishalsachdev/canvas-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install canvas-mcp",
    "documentationUrl": "https://github.com/vishalsachdev/canvas-mcp#readme",
    "homepage": "https://github.com/vishalsachdev/canvas-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.vishalsachdev/canvas-mcp",
      "description": "Canvas LMS integration for students and educators with FERPA-compliant analytics and workflows",
      "repository": {
        "url": "https://github.com/vishalsachdev/canvas-mcp",
        "source": "github",
        "id": "940427833"
      },
      "version": "1.0.2",
      "websiteUrl": "https://vishalsachdev.github.io/canvas-mcp",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "canvas-mcp",
          "version": "1.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.vulnersCom-vulners-mcp",
    "name": "io.github.vulnersCom/vulners-mcp",
    "description": "MCP server for the Vulners.com API",
    "category": "version-control",
    "version": "1.0.3",
    "author": "io.github.vulnersCom",
    "repository": "https://github.com/vulnersCom/vulners-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install vulners-mcp",
    "documentationUrl": "https://github.com/vulnersCom/vulners-mcp#readme",
    "homepage": "https://github.com/vulnersCom/vulners-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.vulnersCom/vulners-mcp",
      "description": "MCP server for the Vulners.com API",
      "repository": {
        "url": "https://github.com/vulnersCom/vulners-mcp",
        "source": "github"
      },
      "version": "1.0.3",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "vulners-mcp",
          "version": "1.0.3",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.wei-hn-mcp-server",
    "name": "io.github.wei/hn-mcp-server",
    "description": "Model Context Protocol server for HackerNews API access.",
    "category": "version-control",
    "version": "1.1.0",
    "author": "io.github.wei",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install hn-mcp-server",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.wei/hn-mcp-server",
      "description": "Model Context Protocol server for HackerNews API access.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.1.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "hn-mcp-server",
          "version": "1.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.wei-mcp-registry-mcp-server",
    "name": "io.github.wei/mcp-registry-mcp-server",
    "description": "MCP server for querying the official MCP registry.",
    "category": "version-control",
    "version": "1.1.1",
    "author": "io.github.wei",
    "repository": "https://github.com/wei/mcp-registry-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-registry-mcp-server",
    "documentationUrl": "https://github.com/wei/mcp-registry-mcp-server#readme",
    "homepage": "https://github.com/wei/mcp-registry-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.wei/mcp-registry-mcp-server",
      "description": "MCP server for querying the official MCP registry.",
      "repository": {
        "url": "https://github.com/wei/mcp-registry-mcp-server",
        "source": "github",
        "id": "wei/mcp-registry-mcp-server"
      },
      "version": "1.1.1",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "mcp-registry-mcp-server",
          "version": "1.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.wonderwhy-er-desktop-commander",
    "name": "io.github.wonderwhy-er/desktop-commander",
    "description": "MCP server for terminal commands, file operations, and process management",
    "category": "filesystem",
    "version": "0.2.19",
    "author": "io.github.wonderwhy-er",
    "repository": "https://github.com/wonderwhy-er/DesktopCommanderMCP",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @wonderwhy-er/desktop-commander",
    "documentationUrl": "https://github.com/wonderwhy-er/DesktopCommanderMCP#readme",
    "homepage": "https://github.com/wonderwhy-er/DesktopCommanderMCP",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.wonderwhy-er/desktop-commander",
      "description": "MCP server for terminal commands, file operations, and process management",
      "title": "Desktop Commander",
      "repository": {
        "url": "https://github.com/wonderwhy-er/DesktopCommanderMCP",
        "source": "github"
      },
      "version": "0.2.19",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@wonderwhy-er/desktop-commander",
          "version": "0.2.19",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.xkelxmc-uranium-mcp",
    "name": "io.github.xkelxmc/uranium-mcp",
    "description": "MCP for Uranium NFT tools to mint, list, and manage digital assets on the permaweb.",
    "category": "web",
    "version": "1.0.9",
    "author": "io.github.xkelxmc",
    "repository": "https://github.com/xkelxmc/uranium-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install uranium-tools-mcp",
    "documentationUrl": "https://github.com/xkelxmc/uranium-mcp#readme",
    "homepage": "https://github.com/xkelxmc/uranium-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.xkelxmc/uranium-mcp",
      "description": "MCP for Uranium NFT tools to mint, list, and manage digital assets on the permaweb.",
      "repository": {
        "url": "https://github.com/xkelxmc/uranium-mcp",
        "source": "github"
      },
      "version": "1.0.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "uranium-tools-mcp",
          "version": "1.0.9",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "You can generate an API key from your Uranium account settings: https://portal.uranium.pro/dashboard/profile/api-keys",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "URANIUM_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.xorrkaz-cml-mcp",
    "name": "io.github.xorrkaz/cml-mcp",
    "description": "An MCP server that provides access to common Cisco Modeling Labs (CML) operations.",
    "category": "version-control",
    "version": "0.11.4",
    "author": "io.github.xorrkaz",
    "repository": "https://github.com/xorrkaz/cml-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install cml-mcp",
    "documentationUrl": "https://github.com/xorrkaz/cml-mcp#readme",
    "homepage": "https://github.com/xorrkaz/cml-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.xorrkaz/cml-mcp",
      "description": "An MCP server that provides access to common Cisco Modeling Labs (CML) operations.",
      "title": "Cisco Modeling Labs (CML)",
      "repository": {
        "url": "https://github.com/xorrkaz/cml-mcp",
        "source": "github"
      },
      "version": "0.11.4",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "cml-mcp",
          "version": "0.11.4",
          "runtimeHint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "URL for the CML Server",
              "isRequired": true,
              "format": "string",
              "name": "CML_URL"
            },
            {
              "description": "Username for CML authentication",
              "isRequired": true,
              "format": "string",
              "name": "CML_USERNAME"
            },
            {
              "description": "Password for CML authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "CML_PASSWORD"
            },
            {
              "description": "Username for authentication to devices running in CML",
              "format": "string",
              "name": "PYATS_USERNAME"
            },
            {
              "description": "Password for authentication to devices running in CML",
              "format": "string",
              "isSecret": true,
              "name": "PYATS_PASSWORD"
            },
            {
              "description": "Enable password for authentication to devices running in CML",
              "format": "string",
              "isSecret": true,
              "name": "PYATS_AUTH_PASS"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.xplusplusai-fo-semantic-mcp",
    "name": "io.github.xplusplusai/fo-semantic-mcp",
    "description": "Semantic search over 50,000+ Dynamics 365 F&O artifacts: tables, forms, classes, and more.",
    "category": "version-control",
    "version": "2.0.8",
    "author": "io.github.xplusplusai",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install fo-semantic-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.xplusplusai/fo-semantic-mcp",
      "description": "Semantic search over 50,000+ Dynamics 365 F&O artifacts: tables, forms, classes, and more.",
      "title": "FO Semantic MCP",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.8",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "fo-semantic-mcp",
          "version": "2.0.8",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.ycjcl868-mcp-server-fear-greed",
    "name": "io.github.ycjcl868/mcp-server-fear-greed",
    "description": "An MCP server for mcp-server-fear-greed",
    "category": "version-control",
    "version": "1.0.2",
    "author": "io.github.ycjcl868",
    "repository": "https://github.com/ycjcl868/mcp-server-fear-greed",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install mcp-server-fear-greed",
    "documentationUrl": "https://github.com/ycjcl868/mcp-server-fear-greed#readme",
    "homepage": "https://github.com/ycjcl868/mcp-server-fear-greed",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.ycjcl868/mcp-server-fear-greed",
      "description": "An MCP server for mcp-server-fear-greed",
      "repository": {
        "url": "https://github.com/ycjcl868/mcp-server-fear-greed",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "latest",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "packageArguments": [
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "packageArguments": [
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.yifancong-rsdoctor",
    "name": "io.github.yifancong/rsdoctor",
    "description": "An MCP server that provides build analysis and optimization recommendations for Rspack projects.",
    "category": "version-control",
    "version": "0.1.0",
    "author": "io.github.yifancong",
    "repository": "https://github.com/web-infra-dev/rsdoctor",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @rsdoctor/mcp-server",
    "documentationUrl": "https://github.com/web-infra-dev/rsdoctor#readme",
    "homepage": "https://github.com/web-infra-dev/rsdoctor",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.yifancong/rsdoctor",
      "description": "An MCP server that provides build analysis and optimization recommendations for Rspack projects.",
      "repository": {
        "url": "https://github.com/web-infra-dev/rsdoctor",
        "source": "github"
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@rsdoctor/mcp-server",
          "version": "0.1.2-beta.0",
          "runtimeHint": "node",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.yokingma-time-mcp",
    "name": "io.github.yokingma/time-mcp",
    "description": "Time MCP Server, giving LLMs time awareness capabilities.",
    "category": "version-control",
    "version": "1.0.5",
    "author": "io.github.yokingma",
    "repository": "https://github.com/yokingma/time-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install time-mcp",
    "documentationUrl": "https://github.com/yokingma/time-mcp#readme",
    "homepage": "https://github.com/yokingma/time-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.yokingma/time-mcp",
      "description": "Time MCP Server, giving LLMs time awareness capabilities.",
      "repository": {
        "url": "https://github.com/yokingma/time-mcp",
        "source": "github"
      },
      "version": "1.0.5",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "time-mcp",
          "version": "1.0.5",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.yuna0x0-anilist-mcp",
    "name": "io.github.yuna0x0/anilist-mcp",
    "description": "AniList MCP server for accessing AniList API data",
    "category": "version-control",
    "version": "1.3.9",
    "author": "io.github.yuna0x0",
    "repository": "https://github.com/yuna0x0/anilist-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install anilist-mcp",
    "documentationUrl": "https://github.com/yuna0x0/anilist-mcp#readme",
    "homepage": "https://github.com/yuna0x0/anilist-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.yuna0x0/anilist-mcp",
      "description": "AniList MCP server for accessing AniList API data",
      "title": "AniList",
      "repository": {
        "url": "https://github.com/yuna0x0/anilist-mcp",
        "source": "github",
        "id": "952023806"
      },
      "version": "1.3.9",
      "icons": [
        {
          "src": "https://anilist.co/img/icons/icon.svg",
          "mimeType": "image/svg+xml",
          "sizes": [
            "any"
          ]
        }
      ],
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "anilist-mcp",
          "version": "1.3.9",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registryType": "oci",
          "identifier": "ghcr.io/yuna0x0/anilist-mcp:1.3.9",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/yuna0x0/anilist-mcp/releases/download/v1.3.9/anilist-mcp-1.3.9.mcpb",
          "fileSha256": "e149213c661cd8473c5deb1f6a852e65db90dfdf90ff60890ebadd38a389b12e",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.yuna0x0-hackmd-mcp",
    "name": "io.github.yuna0x0/hackmd-mcp",
    "description": "A Model Context Protocol server for integrating HackMD's note-taking platform with AI assistants.",
    "category": "version-control",
    "version": "1.5.5",
    "author": "io.github.yuna0x0",
    "repository": "https://github.com/yuna0x0/hackmd-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install hackmd-mcp",
    "documentationUrl": "https://github.com/yuna0x0/hackmd-mcp#readme",
    "homepage": "https://github.com/yuna0x0/hackmd-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.yuna0x0/hackmd-mcp",
      "description": "A Model Context Protocol server for integrating HackMD's note-taking platform with AI assistants.",
      "title": "HackMD",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github",
        "id": "950658365"
      },
      "version": "1.5.5",
      "icons": [
        {
          "src": "https://hackmd.io/logo.svg",
          "mimeType": "image/svg+xml",
          "sizes": [
            "any"
          ]
        }
      ],
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "hackmd-mcp",
          "version": "1.5.5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registryType": "oci",
          "identifier": "ghcr.io/yuna0x0/hackmd-mcp:1.5.5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/yuna0x0/hackmd-mcp/releases/download/v1.5.5/hackmd-mcp-1.5.5.mcpb",
          "fileSha256": "9b4cd85660c3a22eb2932c29ebb46f6ca4617dfb3ba20de34c612eeafcd10ec2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.zeiq-co-thoth-mcp",
    "name": "io.github.zeiq-co/thoth-mcp",
    "description": "MCP server for Thoth with multi-platform AI content generation",
    "category": "version-control",
    "version": "1.0.2",
    "author": "io.github.zeiq-co",
    "repository": "https://github.com/perminder-klair/thoth-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install @usethoth/mcp-server",
    "documentationUrl": "https://github.com/perminder-klair/thoth-mcp#readme",
    "homepage": "https://github.com/perminder-klair/thoth-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.zeiq-co/thoth-mcp",
      "description": "MCP server for Thoth with multi-platform AI content generation",
      "repository": {
        "url": "https://github.com/perminder-klair/thoth-mcp",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@usethoth/mcp-server",
          "version": "1.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.zenml-io-mcp-zenml",
    "name": "io.github.zenml-io/mcp-zenml",
    "description": "MCP server for ZenML - browse stacks, pipelines, runs, artifacts & trigger pipeline runs via API",
    "category": "version-control",
    "version": "1.0.4",
    "author": "io.github.zenml-io",
    "repository": "https://github.com/zenml-io/mcp-zenml",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "docker",
    "installCommand": "docker pull docker.io/zenmldocker/mcp-zenml:1.0.4",
    "documentationUrl": "https://github.com/zenml-io/mcp-zenml#readme",
    "homepage": "https://github.com/zenml-io/mcp-zenml",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.zenml-io/mcp-zenml",
      "description": "MCP server for ZenML - browse stacks, pipelines, runs, artifacts & trigger pipeline runs via API",
      "repository": {
        "url": "https://github.com/zenml-io/mcp-zenml",
        "source": "github"
      },
      "version": "1.0.4",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "docker.io/zenmldocker/mcp-zenml:1.0.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Base URL of your ZenML server (e.g., https://<workspace-id>-zenml.cloudinfra.zenml.io).",
              "isRequired": true,
              "format": "string",
              "name": "ZENML_STORE_URL"
            },
            {
              "description": "API key used to authenticate with your ZenML server (ideally a service account key).",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "ZENML_STORE_API_KEY"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.zhongweili-nanobanana-mcp-server",
    "name": "io.github.zhongweili/nanobanana-mcp-server",
    "description": "An MCP server that provides image generation and editing capabilities",
    "category": "version-control",
    "version": "1.0.0",
    "author": "io.github.zhongweili",
    "repository": "https://github.com/zhongweili/nanobanana-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install nanobanana-mcp-server",
    "documentationUrl": "https://github.com/zhongweili/nanobanana-mcp-server#readme",
    "homepage": "https://github.com/zhongweili/nanobanana-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.zhongweili/nanobanana-mcp-server",
      "description": "An MCP server that provides image generation and editing capabilities",
      "repository": {
        "url": "https://github.com/zhongweili/nanobanana-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "nanobanana-mcp-server",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Gemini API key",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "GEMINI_API_KEY"
            },
            {
              "description": "The image output directory",
              "format": "string",
              "name": "IMAGE_OUTPUT_DIR"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.github.zwldarren-akshare-one-mcp",
    "name": "io.github.zwldarren/akshare-one-mcp",
    "description": "MCP server that provides access to Chinese stock market data using akshare-one",
    "category": "version-control",
    "version": "0.3.6",
    "author": "io.github.zwldarren",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install akshare-one-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.github.zwldarren/akshare-one-mcp",
      "description": "MCP server that provides access to Chinese stock market data using akshare-one",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.3.6",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "akshare-one-mcp",
          "version": "0.3.6",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.github.zzstoatzz-tangled-mcp",
    "name": "io.github.zzstoatzz/tangled-mcp",
    "description": "MCP server for Tangled git platform. Manage repositories, branches, and issues on tangled.org.",
    "category": "version-control",
    "version": "0.0.14",
    "author": "io.github.zzstoatzz",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install tangled-mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.github.zzstoatzz/tangled-mcp",
      "description": "MCP server for Tangled git platform. Manage repositories, branches, and issues on tangled.org.",
      "title": "Tangled MCP",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.14",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "tangled-mcp",
          "version": "0.0.14",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.globalping-mcp",
    "name": "io.globalping/mcp",
    "description": "Interact with a global network measurement platform.Run network commands from any point in the world",
    "category": "other",
    "version": "1.0.0",
    "author": "io.globalping",
    "repository": "https://github.com/jsdelivr/globalping-mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.globalping.io/sse",
    "documentationUrl": "https://github.com/jsdelivr/globalping-mcp-server#readme",
    "homepage": "https://github.com/jsdelivr/globalping-mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.globalping/mcp",
      "description": "Interact with a global network measurement platform.Run network commands from any point in the world",
      "repository": {
        "url": "https://github.com/jsdelivr/globalping-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.globalping.io/sse"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.globalping.io/mcp"
        }
      ]
    }
  },
  {
    "id": "io.ignission-mcp",
    "name": "io.ignission/mcp",
    "description": "TikTok video data analytics and content strategy tools",
    "category": "other",
    "version": "1.0.0",
    "author": "io.ignission",
    "repository": "https://github.com/ignission-io/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.ignission.io/mcp",
    "documentationUrl": "https://github.com/ignission-io/mcp#readme",
    "homepage": "https://github.com/ignission-io/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.ignission/mcp",
      "description": "TikTok video data analytics and content strategy tools",
      "repository": {
        "url": "https://github.com/ignission-io/mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.ignission.io/mcp"
        }
      ]
    }
  },
  {
    "id": "io.minnas-mcp",
    "name": "io.minnas/mcp",
    "description": "Share prompts and context with your team and discover community collections.",
    "category": "other",
    "version": "1.1.0",
    "author": "io.minnas",
    "repository": "https://github.com/sensoris/minnas-service",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://api.minnas.io/mcp",
    "documentationUrl": "https://github.com/sensoris/minnas-service#readme",
    "homepage": "https://github.com/sensoris/minnas-service",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.minnas/mcp",
      "description": "Share prompts and context with your team and discover community collections.",
      "repository": {
        "url": "https://github.com/sensoris/minnas-service",
        "source": "github"
      },
      "version": "1.1.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://api.minnas.io/mcp"
        }
      ]
    }
  },
  {
    "id": "io.opsera-opsera",
    "name": "io.opsera/opsera",
    "description": "Opsera AI Agent MCP server providing authenticated DevOps automation over SSE",
    "category": "ai",
    "version": "0.5.0",
    "author": "io.opsera",
    "repository": "https://github.com/OpseraEngineering/opsera-ai",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://agent.opsera.io/mcp",
    "documentationUrl": "https://github.com/OpseraEngineering/opsera-ai#readme",
    "homepage": "https://github.com/OpseraEngineering/opsera-ai",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.opsera/opsera",
      "description": "Opsera AI Agent MCP server providing authenticated DevOps automation over SSE",
      "repository": {
        "url": "https://github.com/OpseraEngineering/opsera-ai",
        "source": "github",
        "subfolder": "agent-authentication-gateway"
      },
      "version": "0.5.0",
      "websiteUrl": "https://docs.opsera.io",
      "remotes": [
        {
          "type": "sse",
          "url": "https://agent.opsera.io/mcp",
          "headers": [
            {
              "description": "Bearer token for authenticated access",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/publisher-provided": {
          "categories": [
            "devops",
            "automation"
          ],
          "keywords": [
            "opsera",
            "pipelines",
            "analytics",
            "ai"
          ],
          "maintainers": [
            {
              "name": "OpseraEngineering",
              "url": "https://www.opsera.io"
            }
          ]
        }
      }
    }
  },
  {
    "id": "io.prisma-mcp",
    "name": "io.prisma/mcp",
    "description": "MCP server for managing Prisma Postgres.",
    "category": "other",
    "version": "1.0.0",
    "author": "io.prisma",
    "repository": "https://github.com/prisma/mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.prisma.io/sse",
    "documentationUrl": "https://github.com/prisma/mcp#readme",
    "homepage": "https://github.com/prisma/mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.prisma/mcp",
      "description": "MCP server for managing Prisma Postgres.",
      "repository": {
        "url": "https://github.com/prisma/mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.prisma.io/sse",
          "headers": [
            {
              "description": "Bearer token for Prisma platform authentication",
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.prisma.io/mcp",
          "headers": [
            {
              "description": "Bearer token for Prisma platform authentication",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.scorecard-mcp",
    "name": "io.scorecard/mcp",
    "description": "MCP server providing access to the Scorecard API to evaluate and optimize LLM systems.",
    "category": "other",
    "version": "2.1.1",
    "author": "io.scorecard",
    "repository": "https://github.com/scorecard-ai/scorecard-node",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install scorecard-ai-mcp",
    "documentationUrl": "https://github.com/scorecard-ai/scorecard-node#readme",
    "homepage": "https://github.com/scorecard-ai/scorecard-node",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.scorecard/mcp",
      "description": "MCP server providing access to the Scorecard API to evaluate and optimize LLM systems.",
      "repository": {
        "url": "https://github.com/scorecard-ai/scorecard-node",
        "source": "github"
      },
      "version": "2.1.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "scorecard-ai-mcp",
          "version": "2.1.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Scorecard API key for authentication. Get your API key from https://app.scorecard.io/settings",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "SCORECARD_API_KEY"
            }
          ]
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.scorecard.io/mcp"
        }
      ]
    }
  },
  {
    "id": "io.slingdata-sling-cli",
    "name": "io.slingdata/sling-cli",
    "description": "Sling CLI MCP server for querying any database, running data pipelines and managing replications",
    "category": "database",
    "version": "1.4.25",
    "author": "io.slingdata",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "pip",
    "installCommand": "pip install sling",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.slingdata/sling-cli",
      "description": "Sling CLI MCP server for querying any database, running data pipelines and managing replications",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.4.25",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "sling",
          "version": "1.4.23.post1",
          "transport": {
            "type": "stdio"
          }
        }
      ]
    }
  },
  {
    "id": "io.snapcall-mcp",
    "name": "io.snapcall/mcp",
    "description": "MCP Server that generate video call url",
    "category": "other",
    "version": "1.0.0",
    "author": "io.snapcall",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.snapcall.io",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.snapcall/mcp",
      "description": "MCP Server that generate video call url",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.snapcall.io"
        }
      ]
    }
  },
  {
    "id": "io.snyk-mcp",
    "name": "io.snyk/mcp",
    "description": "Easily find and fix security issues in your applications leveraging Snyk platform capabilities.",
    "category": "other",
    "version": "1.1299.1",
    "author": "io.snyk",
    "repository": "https://github.com/snyk/snyk-ls",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "npm",
    "installCommand": "npm install snyk",
    "documentationUrl": "https://github.com/snyk/snyk-ls#readme",
    "homepage": "https://github.com/snyk/snyk-ls",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.snyk/mcp",
      "description": "Easily find and fix security issues in your applications leveraging Snyk platform capabilities.",
      "repository": {
        "url": "https://github.com/snyk/snyk-ls",
        "source": "github",
        "subfolder": "mcp_extension"
      },
      "version": "1.1299.1",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "snyk",
          "version": "1.1299.1",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "mcp",
              "type": "positional"
            },
            {
              "value": "stdio",
              "type": "named",
              "name": "-t"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.testiny-testiny-mcp",
    "name": "io.testiny/testiny-mcp",
    "description": "An MCP server that provides access to Testiny projects, test cases and test runs",
    "category": "other",
    "version": "0.1.0",
    "author": "io.testiny",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://app.testiny.io/api/v1/mcp-server",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.testiny/testiny-mcp",
      "description": "An MCP server that provides access to Testiny projects, test cases and test runs",
      "title": "Testiny Test Management",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "websiteUrl": "https://www.testiny.io/docs/mcp-server/",
      "icons": [
        {
          "src": "https://app.testiny.io/logo.png",
          "mimeType": "image/png",
          "sizes": [
            "128x128"
          ]
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://app.testiny.io/api/v1/mcp-server",
          "headers": [
            {
              "description": "An optional API key, otherwise OAuth2 can be used",
              "isSecret": true,
              "name": "X-Token"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "io.trunk-mcp-server",
    "name": "io.trunk/mcp-server",
    "description": "An MCP server that provides tools for Trunk CI Autopilot to apply fixes to failing tests.",
    "category": "ai",
    "version": "1.0.0",
    "author": "io.trunk",
    "repository": "https://github.com/trunk-io/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.trunk.io/mcp",
    "documentationUrl": "https://github.com/trunk-io/mcp-server#readme",
    "homepage": "https://github.com/trunk-io/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "io.trunk/mcp-server",
      "description": "An MCP server that provides tools for Trunk CI Autopilot to apply fixes to failing tests.",
      "repository": {
        "url": "https://github.com/trunk-io/mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.trunk.io/mcp"
        }
      ]
    }
  },
  {
    "id": "io.wordlift-mcp-server",
    "name": "io.wordlift/mcp-server",
    "description": "WordLift MCP Server: AI-powered content optimization and semantic analysis",
    "category": "ai",
    "version": "1.0.4",
    "author": "io.wordlift",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.wordlift.io/sse",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "io.wordlift/mcp-server",
      "description": "WordLift MCP Server: AI-powered content optimization and semantic analysis",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.4",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.wordlift.io/sse"
        }
      ]
    }
  },
  {
    "id": "md.install-try",
    "name": "md.install/try",
    "description": "Create guides as MCP servers to instruct coding agents to use your software (library, API, etc).",
    "category": "other",
    "version": "0.1.1",
    "author": "md.install",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://install.md/mcp/try",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "md.install/try",
      "description": "Create guides as MCP servers to instruct coding agents to use your software (library, API, etc).",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://install.md/mcp/try"
        }
      ]
    }
  },
  {
    "id": "moda.ai-remote-camera",
    "name": "moda.ai/remote-camera",
    "description": "Capture photos remotely from mobile devices via S3-backed upload URLs",
    "category": "ai",
    "version": "1.0.0",
    "author": "moda.ai",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://www.ai.moda/mcp-servers/remote-camera/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "moda.ai/remote-camera",
      "description": "Capture photos remotely from mobile devices via S3-backed upload URLs",
      "title": "Remote Camera",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "websiteUrl": "https://www.ai.moda/mcp-servers/remote-camera/",
      "icons": [
        {
          "src": "https://remote-camera-mcp.email.ai.moda/bimi/logo.svg",
          "mimeType": "image/svg+xml",
          "sizes": [
            "any"
          ]
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://www.ai.moda/mcp-servers/remote-camera/mcp",
          "headers": [
            {
              "description": "S3 credentials token in format: Bearer <base64-encoded-json>. The JSON should contain: {s3Url, accessKeyId, secretAccessKey, region}. Visit https://www.ai.moda/mcp-servers/remote-camera/ to set up your S3 auth token.",
              "isRequired": true,
              "isSecret": true,
              "placeholder": "Bearer eyJzM1VybCI6Imh0dHBzOi8vczMu...",
              "name": "Authorization"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "net.gepuro.mcp-company-lens-v1-company-lens-mcp-registry",
    "name": "net.gepuro.mcp-company-lens-v1/company-lens-mcp-registry",
    "description": "Search Japanese company database",
    "category": "database",
    "version": "1.0.0",
    "author": "net.gepuro.mcp-company-lens-v1",
    "repository": "https://github.com/gepuro/company-lens-mcp-registry",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp-company-lens-v1.gepuro.net/mcp",
    "documentationUrl": "https://github.com/gepuro/company-lens-mcp-registry#readme",
    "homepage": "https://github.com/gepuro/company-lens-mcp-registry",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "net.gepuro.mcp-company-lens-v1/company-lens-mcp-registry",
      "description": "Search Japanese company database",
      "repository": {
        "url": "https://github.com/gepuro/company-lens-mcp-registry",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp-company-lens-v1.gepuro.net/mcp"
        }
      ]
    }
  },
  {
    "id": "net.nymbo-tools",
    "name": "net.nymbo/tools",
    "description": "Remote MCP server: fetch, search, Python, TTS, memory, image, video.",
    "category": "other",
    "version": "1.0.0",
    "author": "net.nymbo",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.nymbo.net/gradio_api/mcp/sse",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "net.nymbo/tools",
      "description": "Remote MCP server: fetch, search, Python, TTS, memory, image, video.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.nymbo.net/gradio_api/mcp/sse"
        }
      ]
    }
  },
  {
    "id": "net.singular-mcp-server",
    "name": "net.singular/mcp-server",
    "description": "Marketing intelligence MCP server providing campaign performance data and analytics tools.",
    "category": "ai",
    "version": "1.0.0",
    "author": "net.singular",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.singular.net/mcp-server/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "net.singular/mcp-server",
      "description": "Marketing intelligence MCP server providing campaign performance data and analytics tools.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.singular.net/mcp-server/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.singular.net/mcp-server/mcp"
        }
      ]
    }
  },
  {
    "id": "net.todoist-mcp",
    "name": "net.todoist/mcp",
    "description": "Official Todoist MCP server for AI assistants to manage tasks, projects, and workflows.",
    "category": "ai",
    "version": "1.0.0",
    "author": "net.todoist",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://ai.todoist.net/mcp",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "net.todoist/mcp",
      "description": "Official Todoist MCP server for AI assistants to manage tasks, projects, and workflows.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://ai.todoist.net/mcp"
        }
      ]
    }
  },
  {
    "id": "org.io-aerospace-mcp-server",
    "name": "org.io-aerospace/mcp-server",
    "description": "MCP server for aerospace calculations: orbital mechanics, ephemeris, DSN operations, ...",
    "category": "other",
    "version": "1.0.0",
    "author": "org.io-aerospace",
    "repository": "https://github.com/IO-Aerospace-software-engineering/mcp-server",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.io-aerospace.org",
    "documentationUrl": "https://github.com/IO-Aerospace-software-engineering/mcp-server#readme",
    "homepage": "https://github.com/IO-Aerospace-software-engineering/mcp-server",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "org.io-aerospace/mcp-server",
      "description": "MCP server for aerospace calculations: orbital mechanics, ephemeris, DSN operations, ...",
      "title": "IO Aerospace MCP Server",
      "repository": {
        "url": "https://github.com/IO-Aerospace-software-engineering/mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.io-aerospace.org"
        }
      ]
    }
  },
  {
    "id": "so.jinko-jinko-mcp",
    "name": "so.jinko/jinko-mcp",
    "description": "Jinko is a travel MCP server that provides hotel search and booking capabilities.",
    "category": "other",
    "version": "0.0.27",
    "author": "so.jinko",
    "repository": "https://github.com/jinkoso/jinko-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp-remote.jinko.so/mcp",
    "documentationUrl": "https://github.com/jinkoso/jinko-mcp#readme",
    "homepage": "https://github.com/jinkoso/jinko-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "so.jinko/jinko-mcp",
      "description": "Jinko is a travel MCP server that provides hotel search and booking capabilities.",
      "repository": {
        "url": "https://github.com/jinkoso/jinko-mcp",
        "source": "github"
      },
      "version": "0.0.27",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp-remote.jinko.so/mcp"
        }
      ]
    }
  },
  {
    "id": "technology.draup-api-server",
    "name": "technology.draup/api-server",
    "description": "Global labour & market data for skills, workforce, planning, stakeholders, jobs, news & profiles",
    "category": "web",
    "version": "1.0.0",
    "author": "technology.draup",
    "repository": "",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.draup.technology/mcp/",
    "documentationUrl": "",
    "homepage": "",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "technology.draup/api-server",
      "description": "Global labour & market data for skills, workforce, planning, stakeholders, jobs, news & profiles",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.draup.technology/mcp/",
          "headers": [
            {
              "description": "Get the API key from Draup Support (support@draup.com)",
              "isRequired": true,
              "isSecret": true,
              "name": "X-API-Key"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "tools.ref-ref-tools-mcp",
    "name": "tools.ref/ref-tools-mcp",
    "description": "Token-efficient search for coding agents over public and private documentation.",
    "category": "other",
    "version": "3.0.1",
    "author": "tools.ref",
    "repository": "https://github.com/ref-tools/ref-tools-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://api.ref.tools/mcp",
    "documentationUrl": "https://github.com/ref-tools/ref-tools-mcp#readme",
    "homepage": "https://github.com/ref-tools/ref-tools-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
      "name": "tools.ref/ref-tools-mcp",
      "description": "Token-efficient search for coding agents over public and private documentation.",
      "repository": {
        "url": "https://github.com/ref-tools/ref-tools-mcp",
        "source": "github"
      },
      "version": "3.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.ref.tools/mcp",
          "headers": [
            {
              "description": "API key for authentication",
              "name": "X-Ref-Api-Key"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "trade.neglect-mcp-server",
    "name": "trade.neglect/mcp-server",
    "description": "Full Solana DeFi coverage: launchpads, tokens, trades, and wallets, decoded at scale.",
    "category": "other",
    "version": "1.0.0",
    "author": "trade.neglect",
    "repository": "https://github.com/609NFT/solana-mcp",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://api.neglect.trade/mcp",
    "documentationUrl": "https://github.com/609NFT/solana-mcp#readme",
    "homepage": "https://github.com/609NFT/solana-mcp",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "trade.neglect/mcp-server",
      "description": "Full Solana DeFi coverage: launchpads, tokens, trades, and wallets, decoded at scale.",
      "repository": {
        "url": "https://github.com/609NFT/solana-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.neglect.trade/mcp"
        }
      ]
    }
  },
  {
    "id": "travel.kismet-mcp-server",
    "name": "travel.kismet/mcp-server",
    "description": "Semantic hotel search with real-time availability and price comparison for Kismet Travel",
    "category": "ai",
    "version": "0.0.0",
    "author": "travel.kismet",
    "repository": "https://github.com/kismet-tech/kismet-travel-mcp-v2",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://mcp.kismet.travel/mcp",
    "documentationUrl": "https://github.com/kismet-tech/kismet-travel-mcp-v2#readme",
    "homepage": "https://github.com/kismet-tech/kismet-travel-mcp-v2",
    "rawData": {
      "$schema": "",
      "name": "travel.kismet/mcp-server",
      "description": "Semantic hotel search with real-time availability and price comparison for Kismet Travel",
      "repository": {
        "url": "https://github.com/kismet-tech/kismet-travel-mcp-v2",
        "source": "github"
      },
      "version": "0.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.kismet.travel/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.kismet.travel/sse"
        }
      ]
    }
  },
  {
    "id": "xyz.dreamtap-mcp",
    "name": "xyz.dreamtap/mcp",
    "description": "Dreamtap provides sources of inspiration to your AI to make it more creative.",
    "category": "ai",
    "version": "0.1.0",
    "author": "xyz.dreamtap",
    "repository": "https://github.com/salexashenko/dreamtap",
    "downloads": 0,
    "tags": [
      "official"
    ],
    "installType": "remote",
    "installCommand": "https://dreamtap.xyz/mcp",
    "documentationUrl": "https://github.com/salexashenko/dreamtap#readme",
    "homepage": "https://github.com/salexashenko/dreamtap",
    "rawData": {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
      "name": "xyz.dreamtap/mcp",
      "description": "Dreamtap provides sources of inspiration to your AI to make it more creative.",
      "repository": {
        "url": "https://github.com/salexashenko/dreamtap",
        "source": "github"
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://dreamtap.xyz/mcp"
        }
      ]
    }
  }
]